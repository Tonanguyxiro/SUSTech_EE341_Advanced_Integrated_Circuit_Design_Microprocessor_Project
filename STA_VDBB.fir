;buildInfoPackage: chisel3, version: 3.1.2, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-07-25 16:52:17.431, builtAtMillis: 1532537537431
circuit STA_VDBB : 
  module tag : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_data : SInt<32>[8], out_tag : UInt<1>[8]}
    
    wire _T_68 : UInt<1>[8] @[tag.scala 32:24]
    _T_68[0] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[1] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[2] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[3] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[4] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[5] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[6] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[7] <= UInt<1>("h00") @[tag.scala 32:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_68)) @[tag.scala 32:20]
    io.out_tag[0] <= tag[0] @[tag.scala 33:14]
    io.out_tag[1] <= tag[1] @[tag.scala 33:14]
    io.out_tag[2] <= tag[2] @[tag.scala 33:14]
    io.out_tag[3] <= tag[3] @[tag.scala 33:14]
    io.out_tag[4] <= tag[4] @[tag.scala 33:14]
    io.out_tag[5] <= tag[5] @[tag.scala 33:14]
    io.out_tag[6] <= tag[6] @[tag.scala 33:14]
    io.out_tag[7] <= tag[7] @[tag.scala 33:14]
    node _T_128 = neq(io.in_data[0], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_128 : @[tag.scala 36:34]
      tag[0] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_131 = neq(io.in_data[1], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_131 : @[tag.scala 36:34]
      tag[1] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_134 = neq(io.in_data[2], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_134 : @[tag.scala 36:34]
      tag[2] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_137 = neq(io.in_data[3], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_137 : @[tag.scala 36:34]
      tag[3] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_140 = neq(io.in_data[4], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_140 : @[tag.scala 36:34]
      tag[4] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_143 = neq(io.in_data[5], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_143 : @[tag.scala 36:34]
      tag[5] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_146 = neq(io.in_data[6], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_146 : @[tag.scala 36:34]
      tag[6] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    
  module tag_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_data : SInt<32>[8], out_tag : UInt<1>[8]}
    
    wire _T_68 : UInt<1>[8] @[tag.scala 32:24]
    _T_68[0] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[1] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[2] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[3] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[4] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[5] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[6] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[7] <= UInt<1>("h00") @[tag.scala 32:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_68)) @[tag.scala 32:20]
    io.out_tag[0] <= tag[0] @[tag.scala 33:14]
    io.out_tag[1] <= tag[1] @[tag.scala 33:14]
    io.out_tag[2] <= tag[2] @[tag.scala 33:14]
    io.out_tag[3] <= tag[3] @[tag.scala 33:14]
    io.out_tag[4] <= tag[4] @[tag.scala 33:14]
    io.out_tag[5] <= tag[5] @[tag.scala 33:14]
    io.out_tag[6] <= tag[6] @[tag.scala 33:14]
    io.out_tag[7] <= tag[7] @[tag.scala 33:14]
    node _T_128 = neq(io.in_data[0], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_128 : @[tag.scala 36:34]
      tag[0] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_131 = neq(io.in_data[1], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_131 : @[tag.scala 36:34]
      tag[1] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_134 = neq(io.in_data[2], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_134 : @[tag.scala 36:34]
      tag[2] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_137 = neq(io.in_data[3], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_137 : @[tag.scala 36:34]
      tag[3] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_140 = neq(io.in_data[4], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_140 : @[tag.scala 36:34]
      tag[4] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_143 = neq(io.in_data[5], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_143 : @[tag.scala 36:34]
      tag[5] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_146 = neq(io.in_data[6], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_146 : @[tag.scala 36:34]
      tag[6] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    
  module tag_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_data : SInt<32>[8], out_tag : UInt<1>[8]}
    
    wire _T_68 : UInt<1>[8] @[tag.scala 32:24]
    _T_68[0] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[1] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[2] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[3] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[4] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[5] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[6] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[7] <= UInt<1>("h00") @[tag.scala 32:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_68)) @[tag.scala 32:20]
    io.out_tag[0] <= tag[0] @[tag.scala 33:14]
    io.out_tag[1] <= tag[1] @[tag.scala 33:14]
    io.out_tag[2] <= tag[2] @[tag.scala 33:14]
    io.out_tag[3] <= tag[3] @[tag.scala 33:14]
    io.out_tag[4] <= tag[4] @[tag.scala 33:14]
    io.out_tag[5] <= tag[5] @[tag.scala 33:14]
    io.out_tag[6] <= tag[6] @[tag.scala 33:14]
    io.out_tag[7] <= tag[7] @[tag.scala 33:14]
    node _T_128 = neq(io.in_data[0], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_128 : @[tag.scala 36:34]
      tag[0] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_131 = neq(io.in_data[1], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_131 : @[tag.scala 36:34]
      tag[1] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_134 = neq(io.in_data[2], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_134 : @[tag.scala 36:34]
      tag[2] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_137 = neq(io.in_data[3], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_137 : @[tag.scala 36:34]
      tag[3] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_140 = neq(io.in_data[4], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_140 : @[tag.scala 36:34]
      tag[4] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_143 = neq(io.in_data[5], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_143 : @[tag.scala 36:34]
      tag[5] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_146 = neq(io.in_data[6], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_146 : @[tag.scala 36:34]
      tag[6] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    
  module tag_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_data : SInt<32>[8], out_tag : UInt<1>[8]}
    
    wire _T_68 : UInt<1>[8] @[tag.scala 32:24]
    _T_68[0] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[1] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[2] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[3] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[4] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[5] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[6] <= UInt<1>("h00") @[tag.scala 32:24]
    _T_68[7] <= UInt<1>("h00") @[tag.scala 32:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_68)) @[tag.scala 32:20]
    io.out_tag[0] <= tag[0] @[tag.scala 33:14]
    io.out_tag[1] <= tag[1] @[tag.scala 33:14]
    io.out_tag[2] <= tag[2] @[tag.scala 33:14]
    io.out_tag[3] <= tag[3] @[tag.scala 33:14]
    io.out_tag[4] <= tag[4] @[tag.scala 33:14]
    io.out_tag[5] <= tag[5] @[tag.scala 33:14]
    io.out_tag[6] <= tag[6] @[tag.scala 33:14]
    io.out_tag[7] <= tag[7] @[tag.scala 33:14]
    node _T_128 = neq(io.in_data[0], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_128 : @[tag.scala 36:34]
      tag[0] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_131 = neq(io.in_data[1], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_131 : @[tag.scala 36:34]
      tag[1] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_134 = neq(io.in_data[2], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_134 : @[tag.scala 36:34]
      tag[2] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_137 = neq(io.in_data[3], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_137 : @[tag.scala 36:34]
      tag[3] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_140 = neq(io.in_data[4], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_140 : @[tag.scala 36:34]
      tag[4] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_143 = neq(io.in_data[5], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_143 : @[tag.scala 36:34]
      tag[5] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    node _T_146 = neq(io.in_data[6], asSInt(UInt<1>("h00"))) @[tag.scala 36:25]
    when _T_146 : @[tag.scala 36:34]
      tag[6] <= UInt<1>("h01") @[tag.scala 37:14]
      skip @[tag.scala 36:34]
    
  module tagger_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip input : SInt<32>[8][4], output : UInt<1>[8][4]}
    
    inst tag of tag @[tagger_4.scala 27:39]
    tag.clock <= clock
    tag.reset <= reset
    inst tag_1 of tag_1 @[tagger_4.scala 27:39]
    tag_1.clock <= clock
    tag_1.reset <= reset
    inst tag_2 of tag_2 @[tagger_4.scala 27:39]
    tag_2.clock <= clock
    tag_2.reset <= reset
    inst tag_3 of tag_3 @[tagger_4.scala 27:39]
    tag_3.clock <= clock
    tag_3.reset <= reset
    wire taggers : {flip in_data : SInt<32>[8], out_tag : UInt<1>[8]}[4] @[tagger_4.scala 27:20]
    taggers[0].out_tag[0] <= tag.io.out_tag[0] @[tagger_4.scala 27:20]
    taggers[0].out_tag[1] <= tag.io.out_tag[1] @[tagger_4.scala 27:20]
    taggers[0].out_tag[2] <= tag.io.out_tag[2] @[tagger_4.scala 27:20]
    taggers[0].out_tag[3] <= tag.io.out_tag[3] @[tagger_4.scala 27:20]
    taggers[0].out_tag[4] <= tag.io.out_tag[4] @[tagger_4.scala 27:20]
    taggers[0].out_tag[5] <= tag.io.out_tag[5] @[tagger_4.scala 27:20]
    taggers[0].out_tag[6] <= tag.io.out_tag[6] @[tagger_4.scala 27:20]
    taggers[0].out_tag[7] <= tag.io.out_tag[7] @[tagger_4.scala 27:20]
    tag.io.in_data[0] <= taggers[0].in_data[0] @[tagger_4.scala 27:20]
    tag.io.in_data[1] <= taggers[0].in_data[1] @[tagger_4.scala 27:20]
    tag.io.in_data[2] <= taggers[0].in_data[2] @[tagger_4.scala 27:20]
    tag.io.in_data[3] <= taggers[0].in_data[3] @[tagger_4.scala 27:20]
    tag.io.in_data[4] <= taggers[0].in_data[4] @[tagger_4.scala 27:20]
    tag.io.in_data[5] <= taggers[0].in_data[5] @[tagger_4.scala 27:20]
    tag.io.in_data[6] <= taggers[0].in_data[6] @[tagger_4.scala 27:20]
    tag.io.in_data[7] <= taggers[0].in_data[7] @[tagger_4.scala 27:20]
    taggers[1].out_tag[0] <= tag_1.io.out_tag[0] @[tagger_4.scala 27:20]
    taggers[1].out_tag[1] <= tag_1.io.out_tag[1] @[tagger_4.scala 27:20]
    taggers[1].out_tag[2] <= tag_1.io.out_tag[2] @[tagger_4.scala 27:20]
    taggers[1].out_tag[3] <= tag_1.io.out_tag[3] @[tagger_4.scala 27:20]
    taggers[1].out_tag[4] <= tag_1.io.out_tag[4] @[tagger_4.scala 27:20]
    taggers[1].out_tag[5] <= tag_1.io.out_tag[5] @[tagger_4.scala 27:20]
    taggers[1].out_tag[6] <= tag_1.io.out_tag[6] @[tagger_4.scala 27:20]
    taggers[1].out_tag[7] <= tag_1.io.out_tag[7] @[tagger_4.scala 27:20]
    tag_1.io.in_data[0] <= taggers[1].in_data[0] @[tagger_4.scala 27:20]
    tag_1.io.in_data[1] <= taggers[1].in_data[1] @[tagger_4.scala 27:20]
    tag_1.io.in_data[2] <= taggers[1].in_data[2] @[tagger_4.scala 27:20]
    tag_1.io.in_data[3] <= taggers[1].in_data[3] @[tagger_4.scala 27:20]
    tag_1.io.in_data[4] <= taggers[1].in_data[4] @[tagger_4.scala 27:20]
    tag_1.io.in_data[5] <= taggers[1].in_data[5] @[tagger_4.scala 27:20]
    tag_1.io.in_data[6] <= taggers[1].in_data[6] @[tagger_4.scala 27:20]
    tag_1.io.in_data[7] <= taggers[1].in_data[7] @[tagger_4.scala 27:20]
    taggers[2].out_tag[0] <= tag_2.io.out_tag[0] @[tagger_4.scala 27:20]
    taggers[2].out_tag[1] <= tag_2.io.out_tag[1] @[tagger_4.scala 27:20]
    taggers[2].out_tag[2] <= tag_2.io.out_tag[2] @[tagger_4.scala 27:20]
    taggers[2].out_tag[3] <= tag_2.io.out_tag[3] @[tagger_4.scala 27:20]
    taggers[2].out_tag[4] <= tag_2.io.out_tag[4] @[tagger_4.scala 27:20]
    taggers[2].out_tag[5] <= tag_2.io.out_tag[5] @[tagger_4.scala 27:20]
    taggers[2].out_tag[6] <= tag_2.io.out_tag[6] @[tagger_4.scala 27:20]
    taggers[2].out_tag[7] <= tag_2.io.out_tag[7] @[tagger_4.scala 27:20]
    tag_2.io.in_data[0] <= taggers[2].in_data[0] @[tagger_4.scala 27:20]
    tag_2.io.in_data[1] <= taggers[2].in_data[1] @[tagger_4.scala 27:20]
    tag_2.io.in_data[2] <= taggers[2].in_data[2] @[tagger_4.scala 27:20]
    tag_2.io.in_data[3] <= taggers[2].in_data[3] @[tagger_4.scala 27:20]
    tag_2.io.in_data[4] <= taggers[2].in_data[4] @[tagger_4.scala 27:20]
    tag_2.io.in_data[5] <= taggers[2].in_data[5] @[tagger_4.scala 27:20]
    tag_2.io.in_data[6] <= taggers[2].in_data[6] @[tagger_4.scala 27:20]
    tag_2.io.in_data[7] <= taggers[2].in_data[7] @[tagger_4.scala 27:20]
    taggers[3].out_tag[0] <= tag_3.io.out_tag[0] @[tagger_4.scala 27:20]
    taggers[3].out_tag[1] <= tag_3.io.out_tag[1] @[tagger_4.scala 27:20]
    taggers[3].out_tag[2] <= tag_3.io.out_tag[2] @[tagger_4.scala 27:20]
    taggers[3].out_tag[3] <= tag_3.io.out_tag[3] @[tagger_4.scala 27:20]
    taggers[3].out_tag[4] <= tag_3.io.out_tag[4] @[tagger_4.scala 27:20]
    taggers[3].out_tag[5] <= tag_3.io.out_tag[5] @[tagger_4.scala 27:20]
    taggers[3].out_tag[6] <= tag_3.io.out_tag[6] @[tagger_4.scala 27:20]
    taggers[3].out_tag[7] <= tag_3.io.out_tag[7] @[tagger_4.scala 27:20]
    tag_3.io.in_data[0] <= taggers[3].in_data[0] @[tagger_4.scala 27:20]
    tag_3.io.in_data[1] <= taggers[3].in_data[1] @[tagger_4.scala 27:20]
    tag_3.io.in_data[2] <= taggers[3].in_data[2] @[tagger_4.scala 27:20]
    tag_3.io.in_data[3] <= taggers[3].in_data[3] @[tagger_4.scala 27:20]
    tag_3.io.in_data[4] <= taggers[3].in_data[4] @[tagger_4.scala 27:20]
    tag_3.io.in_data[5] <= taggers[3].in_data[5] @[tagger_4.scala 27:20]
    tag_3.io.in_data[6] <= taggers[3].in_data[6] @[tagger_4.scala 27:20]
    tag_3.io.in_data[7] <= taggers[3].in_data[7] @[tagger_4.scala 27:20]
    wire _T_1265 : UInt<1>[8] @[tagger_4.scala 30:48]
    _T_1265[0] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[1] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[2] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[3] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[4] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[5] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[6] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1265[7] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    wire _T_1287 : UInt<1>[8] @[tagger_4.scala 30:48]
    _T_1287[0] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[1] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[2] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[3] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[4] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[5] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[6] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1287[7] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    wire _T_1309 : UInt<1>[8] @[tagger_4.scala 30:48]
    _T_1309[0] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[1] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[2] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[3] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[4] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[5] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[6] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1309[7] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    wire _T_1331 : UInt<1>[8] @[tagger_4.scala 30:48]
    _T_1331[0] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[1] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[2] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[3] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[4] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[5] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[6] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    _T_1331[7] <= UInt<1>("h00") @[tagger_4.scala 30:48]
    wire _T_1504 : UInt<1>[8][4] @[tagger_4.scala 30:32]
    _T_1504[0][0] <= _T_1265[0] @[tagger_4.scala 30:32]
    _T_1504[0][1] <= _T_1265[1] @[tagger_4.scala 30:32]
    _T_1504[0][2] <= _T_1265[2] @[tagger_4.scala 30:32]
    _T_1504[0][3] <= _T_1265[3] @[tagger_4.scala 30:32]
    _T_1504[0][4] <= _T_1265[4] @[tagger_4.scala 30:32]
    _T_1504[0][5] <= _T_1265[5] @[tagger_4.scala 30:32]
    _T_1504[0][6] <= _T_1265[6] @[tagger_4.scala 30:32]
    _T_1504[0][7] <= _T_1265[7] @[tagger_4.scala 30:32]
    _T_1504[1][0] <= _T_1287[0] @[tagger_4.scala 30:32]
    _T_1504[1][1] <= _T_1287[1] @[tagger_4.scala 30:32]
    _T_1504[1][2] <= _T_1287[2] @[tagger_4.scala 30:32]
    _T_1504[1][3] <= _T_1287[3] @[tagger_4.scala 30:32]
    _T_1504[1][4] <= _T_1287[4] @[tagger_4.scala 30:32]
    _T_1504[1][5] <= _T_1287[5] @[tagger_4.scala 30:32]
    _T_1504[1][6] <= _T_1287[6] @[tagger_4.scala 30:32]
    _T_1504[1][7] <= _T_1287[7] @[tagger_4.scala 30:32]
    _T_1504[2][0] <= _T_1309[0] @[tagger_4.scala 30:32]
    _T_1504[2][1] <= _T_1309[1] @[tagger_4.scala 30:32]
    _T_1504[2][2] <= _T_1309[2] @[tagger_4.scala 30:32]
    _T_1504[2][3] <= _T_1309[3] @[tagger_4.scala 30:32]
    _T_1504[2][4] <= _T_1309[4] @[tagger_4.scala 30:32]
    _T_1504[2][5] <= _T_1309[5] @[tagger_4.scala 30:32]
    _T_1504[2][6] <= _T_1309[6] @[tagger_4.scala 30:32]
    _T_1504[2][7] <= _T_1309[7] @[tagger_4.scala 30:32]
    _T_1504[3][0] <= _T_1331[0] @[tagger_4.scala 30:32]
    _T_1504[3][1] <= _T_1331[1] @[tagger_4.scala 30:32]
    _T_1504[3][2] <= _T_1331[2] @[tagger_4.scala 30:32]
    _T_1504[3][3] <= _T_1331[3] @[tagger_4.scala 30:32]
    _T_1504[3][4] <= _T_1331[4] @[tagger_4.scala 30:32]
    _T_1504[3][5] <= _T_1331[5] @[tagger_4.scala 30:32]
    _T_1504[3][6] <= _T_1331[6] @[tagger_4.scala 30:32]
    _T_1504[3][7] <= _T_1331[7] @[tagger_4.scala 30:32]
    reg default_out : UInt<1>[8][4], clock with : (reset => (reset, _T_1504)) @[tagger_4.scala 30:28]
    io.output[0][0] <= default_out[0][0] @[tagger_4.scala 31:13]
    io.output[0][1] <= default_out[0][1] @[tagger_4.scala 31:13]
    io.output[0][2] <= default_out[0][2] @[tagger_4.scala 31:13]
    io.output[0][3] <= default_out[0][3] @[tagger_4.scala 31:13]
    io.output[0][4] <= default_out[0][4] @[tagger_4.scala 31:13]
    io.output[0][5] <= default_out[0][5] @[tagger_4.scala 31:13]
    io.output[0][6] <= default_out[0][6] @[tagger_4.scala 31:13]
    io.output[0][7] <= default_out[0][7] @[tagger_4.scala 31:13]
    io.output[1][0] <= default_out[1][0] @[tagger_4.scala 31:13]
    io.output[1][1] <= default_out[1][1] @[tagger_4.scala 31:13]
    io.output[1][2] <= default_out[1][2] @[tagger_4.scala 31:13]
    io.output[1][3] <= default_out[1][3] @[tagger_4.scala 31:13]
    io.output[1][4] <= default_out[1][4] @[tagger_4.scala 31:13]
    io.output[1][5] <= default_out[1][5] @[tagger_4.scala 31:13]
    io.output[1][6] <= default_out[1][6] @[tagger_4.scala 31:13]
    io.output[1][7] <= default_out[1][7] @[tagger_4.scala 31:13]
    io.output[2][0] <= default_out[2][0] @[tagger_4.scala 31:13]
    io.output[2][1] <= default_out[2][1] @[tagger_4.scala 31:13]
    io.output[2][2] <= default_out[2][2] @[tagger_4.scala 31:13]
    io.output[2][3] <= default_out[2][3] @[tagger_4.scala 31:13]
    io.output[2][4] <= default_out[2][4] @[tagger_4.scala 31:13]
    io.output[2][5] <= default_out[2][5] @[tagger_4.scala 31:13]
    io.output[2][6] <= default_out[2][6] @[tagger_4.scala 31:13]
    io.output[2][7] <= default_out[2][7] @[tagger_4.scala 31:13]
    io.output[3][0] <= default_out[3][0] @[tagger_4.scala 31:13]
    io.output[3][1] <= default_out[3][1] @[tagger_4.scala 31:13]
    io.output[3][2] <= default_out[3][2] @[tagger_4.scala 31:13]
    io.output[3][3] <= default_out[3][3] @[tagger_4.scala 31:13]
    io.output[3][4] <= default_out[3][4] @[tagger_4.scala 31:13]
    io.output[3][5] <= default_out[3][5] @[tagger_4.scala 31:13]
    io.output[3][6] <= default_out[3][6] @[tagger_4.scala 31:13]
    io.output[3][7] <= default_out[3][7] @[tagger_4.scala 31:13]
    taggers[0].in_data[0] <= io.input[0][0] @[tagger_4.scala 35:24]
    taggers[0].in_data[1] <= io.input[0][1] @[tagger_4.scala 35:24]
    taggers[0].in_data[2] <= io.input[0][2] @[tagger_4.scala 35:24]
    taggers[0].in_data[3] <= io.input[0][3] @[tagger_4.scala 35:24]
    taggers[0].in_data[4] <= io.input[0][4] @[tagger_4.scala 35:24]
    taggers[0].in_data[5] <= io.input[0][5] @[tagger_4.scala 35:24]
    taggers[0].in_data[6] <= io.input[0][6] @[tagger_4.scala 35:24]
    taggers[0].in_data[7] <= io.input[0][7] @[tagger_4.scala 35:24]
    taggers[0].out_tag[0] <= io.output[0][0] @[tagger_4.scala 36:24]
    taggers[0].out_tag[1] <= io.output[0][1] @[tagger_4.scala 36:24]
    taggers[0].out_tag[2] <= io.output[0][2] @[tagger_4.scala 36:24]
    taggers[0].out_tag[3] <= io.output[0][3] @[tagger_4.scala 36:24]
    taggers[0].out_tag[4] <= io.output[0][4] @[tagger_4.scala 36:24]
    taggers[0].out_tag[5] <= io.output[0][5] @[tagger_4.scala 36:24]
    taggers[0].out_tag[6] <= io.output[0][6] @[tagger_4.scala 36:24]
    taggers[0].out_tag[7] <= io.output[0][7] @[tagger_4.scala 36:24]
    taggers[1].in_data[0] <= io.input[1][0] @[tagger_4.scala 35:24]
    taggers[1].in_data[1] <= io.input[1][1] @[tagger_4.scala 35:24]
    taggers[1].in_data[2] <= io.input[1][2] @[tagger_4.scala 35:24]
    taggers[1].in_data[3] <= io.input[1][3] @[tagger_4.scala 35:24]
    taggers[1].in_data[4] <= io.input[1][4] @[tagger_4.scala 35:24]
    taggers[1].in_data[5] <= io.input[1][5] @[tagger_4.scala 35:24]
    taggers[1].in_data[6] <= io.input[1][6] @[tagger_4.scala 35:24]
    taggers[1].in_data[7] <= io.input[1][7] @[tagger_4.scala 35:24]
    taggers[1].out_tag[0] <= io.output[1][0] @[tagger_4.scala 36:24]
    taggers[1].out_tag[1] <= io.output[1][1] @[tagger_4.scala 36:24]
    taggers[1].out_tag[2] <= io.output[1][2] @[tagger_4.scala 36:24]
    taggers[1].out_tag[3] <= io.output[1][3] @[tagger_4.scala 36:24]
    taggers[1].out_tag[4] <= io.output[1][4] @[tagger_4.scala 36:24]
    taggers[1].out_tag[5] <= io.output[1][5] @[tagger_4.scala 36:24]
    taggers[1].out_tag[6] <= io.output[1][6] @[tagger_4.scala 36:24]
    taggers[1].out_tag[7] <= io.output[1][7] @[tagger_4.scala 36:24]
    taggers[2].in_data[0] <= io.input[2][0] @[tagger_4.scala 35:24]
    taggers[2].in_data[1] <= io.input[2][1] @[tagger_4.scala 35:24]
    taggers[2].in_data[2] <= io.input[2][2] @[tagger_4.scala 35:24]
    taggers[2].in_data[3] <= io.input[2][3] @[tagger_4.scala 35:24]
    taggers[2].in_data[4] <= io.input[2][4] @[tagger_4.scala 35:24]
    taggers[2].in_data[5] <= io.input[2][5] @[tagger_4.scala 35:24]
    taggers[2].in_data[6] <= io.input[2][6] @[tagger_4.scala 35:24]
    taggers[2].in_data[7] <= io.input[2][7] @[tagger_4.scala 35:24]
    taggers[2].out_tag[0] <= io.output[2][0] @[tagger_4.scala 36:24]
    taggers[2].out_tag[1] <= io.output[2][1] @[tagger_4.scala 36:24]
    taggers[2].out_tag[2] <= io.output[2][2] @[tagger_4.scala 36:24]
    taggers[2].out_tag[3] <= io.output[2][3] @[tagger_4.scala 36:24]
    taggers[2].out_tag[4] <= io.output[2][4] @[tagger_4.scala 36:24]
    taggers[2].out_tag[5] <= io.output[2][5] @[tagger_4.scala 36:24]
    taggers[2].out_tag[6] <= io.output[2][6] @[tagger_4.scala 36:24]
    taggers[2].out_tag[7] <= io.output[2][7] @[tagger_4.scala 36:24]
    taggers[3].in_data[0] <= io.input[3][0] @[tagger_4.scala 35:24]
    taggers[3].in_data[1] <= io.input[3][1] @[tagger_4.scala 35:24]
    taggers[3].in_data[2] <= io.input[3][2] @[tagger_4.scala 35:24]
    taggers[3].in_data[3] <= io.input[3][3] @[tagger_4.scala 35:24]
    taggers[3].in_data[4] <= io.input[3][4] @[tagger_4.scala 35:24]
    taggers[3].in_data[5] <= io.input[3][5] @[tagger_4.scala 35:24]
    taggers[3].in_data[6] <= io.input[3][6] @[tagger_4.scala 35:24]
    taggers[3].in_data[7] <= io.input[3][7] @[tagger_4.scala 35:24]
    taggers[3].out_tag[0] <= io.output[3][0] @[tagger_4.scala 36:24]
    taggers[3].out_tag[1] <= io.output[3][1] @[tagger_4.scala 36:24]
    taggers[3].out_tag[2] <= io.output[3][2] @[tagger_4.scala 36:24]
    taggers[3].out_tag[3] <= io.output[3][3] @[tagger_4.scala 36:24]
    taggers[3].out_tag[4] <= io.output[3][4] @[tagger_4.scala 36:24]
    taggers[3].out_tag[5] <= io.output[3][5] @[tagger_4.scala 36:24]
    taggers[3].out_tag[6] <= io.output[3][6] @[tagger_4.scala 36:24]
    taggers[3].out_tag[7] <= io.output[3][7] @[tagger_4.scala 36:24]
    
  module MUX8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_1 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_2 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_3 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_4 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_5 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_6 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_7 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module TPU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8][2], flip in_B : SInt<32>[8][4], flip in_tag : UInt<1>[8][4], flip in_cal : UInt<1>, out_A : SInt<32>[8][2], out_B : SInt<32>[8][4], out_tag : UInt<1>[8][4], out_result : SInt<32>[4][2], out_cal : UInt<1>}
    
    io.out_A[0][0] <= io.in_A[0][0] @[TPU.scala 54:12]
    io.out_A[0][1] <= io.in_A[0][1] @[TPU.scala 54:12]
    io.out_A[0][2] <= io.in_A[0][2] @[TPU.scala 54:12]
    io.out_A[0][3] <= io.in_A[0][3] @[TPU.scala 54:12]
    io.out_A[0][4] <= io.in_A[0][4] @[TPU.scala 54:12]
    io.out_A[0][5] <= io.in_A[0][5] @[TPU.scala 54:12]
    io.out_A[0][6] <= io.in_A[0][6] @[TPU.scala 54:12]
    io.out_A[0][7] <= io.in_A[0][7] @[TPU.scala 54:12]
    io.out_A[1][0] <= io.in_A[1][0] @[TPU.scala 54:12]
    io.out_A[1][1] <= io.in_A[1][1] @[TPU.scala 54:12]
    io.out_A[1][2] <= io.in_A[1][2] @[TPU.scala 54:12]
    io.out_A[1][3] <= io.in_A[1][3] @[TPU.scala 54:12]
    io.out_A[1][4] <= io.in_A[1][4] @[TPU.scala 54:12]
    io.out_A[1][5] <= io.in_A[1][5] @[TPU.scala 54:12]
    io.out_A[1][6] <= io.in_A[1][6] @[TPU.scala 54:12]
    io.out_A[1][7] <= io.in_A[1][7] @[TPU.scala 54:12]
    io.out_B[0][0] <= io.in_B[0][0] @[TPU.scala 57:12]
    io.out_B[0][1] <= io.in_B[0][1] @[TPU.scala 57:12]
    io.out_B[0][2] <= io.in_B[0][2] @[TPU.scala 57:12]
    io.out_B[0][3] <= io.in_B[0][3] @[TPU.scala 57:12]
    io.out_B[0][4] <= io.in_B[0][4] @[TPU.scala 57:12]
    io.out_B[0][5] <= io.in_B[0][5] @[TPU.scala 57:12]
    io.out_B[0][6] <= io.in_B[0][6] @[TPU.scala 57:12]
    io.out_B[0][7] <= io.in_B[0][7] @[TPU.scala 57:12]
    io.out_B[1][0] <= io.in_B[1][0] @[TPU.scala 57:12]
    io.out_B[1][1] <= io.in_B[1][1] @[TPU.scala 57:12]
    io.out_B[1][2] <= io.in_B[1][2] @[TPU.scala 57:12]
    io.out_B[1][3] <= io.in_B[1][3] @[TPU.scala 57:12]
    io.out_B[1][4] <= io.in_B[1][4] @[TPU.scala 57:12]
    io.out_B[1][5] <= io.in_B[1][5] @[TPU.scala 57:12]
    io.out_B[1][6] <= io.in_B[1][6] @[TPU.scala 57:12]
    io.out_B[1][7] <= io.in_B[1][7] @[TPU.scala 57:12]
    io.out_B[2][0] <= io.in_B[2][0] @[TPU.scala 57:12]
    io.out_B[2][1] <= io.in_B[2][1] @[TPU.scala 57:12]
    io.out_B[2][2] <= io.in_B[2][2] @[TPU.scala 57:12]
    io.out_B[2][3] <= io.in_B[2][3] @[TPU.scala 57:12]
    io.out_B[2][4] <= io.in_B[2][4] @[TPU.scala 57:12]
    io.out_B[2][5] <= io.in_B[2][5] @[TPU.scala 57:12]
    io.out_B[2][6] <= io.in_B[2][6] @[TPU.scala 57:12]
    io.out_B[2][7] <= io.in_B[2][7] @[TPU.scala 57:12]
    io.out_B[3][0] <= io.in_B[3][0] @[TPU.scala 57:12]
    io.out_B[3][1] <= io.in_B[3][1] @[TPU.scala 57:12]
    io.out_B[3][2] <= io.in_B[3][2] @[TPU.scala 57:12]
    io.out_B[3][3] <= io.in_B[3][3] @[TPU.scala 57:12]
    io.out_B[3][4] <= io.in_B[3][4] @[TPU.scala 57:12]
    io.out_B[3][5] <= io.in_B[3][5] @[TPU.scala 57:12]
    io.out_B[3][6] <= io.in_B[3][6] @[TPU.scala 57:12]
    io.out_B[3][7] <= io.in_B[3][7] @[TPU.scala 57:12]
    io.out_tag[0][0] <= io.in_tag[0][0] @[TPU.scala 60:14]
    io.out_tag[0][1] <= io.in_tag[0][1] @[TPU.scala 60:14]
    io.out_tag[0][2] <= io.in_tag[0][2] @[TPU.scala 60:14]
    io.out_tag[0][3] <= io.in_tag[0][3] @[TPU.scala 60:14]
    io.out_tag[0][4] <= io.in_tag[0][4] @[TPU.scala 60:14]
    io.out_tag[0][5] <= io.in_tag[0][5] @[TPU.scala 60:14]
    io.out_tag[0][6] <= io.in_tag[0][6] @[TPU.scala 60:14]
    io.out_tag[0][7] <= io.in_tag[0][7] @[TPU.scala 60:14]
    io.out_tag[1][0] <= io.in_tag[1][0] @[TPU.scala 60:14]
    io.out_tag[1][1] <= io.in_tag[1][1] @[TPU.scala 60:14]
    io.out_tag[1][2] <= io.in_tag[1][2] @[TPU.scala 60:14]
    io.out_tag[1][3] <= io.in_tag[1][3] @[TPU.scala 60:14]
    io.out_tag[1][4] <= io.in_tag[1][4] @[TPU.scala 60:14]
    io.out_tag[1][5] <= io.in_tag[1][5] @[TPU.scala 60:14]
    io.out_tag[1][6] <= io.in_tag[1][6] @[TPU.scala 60:14]
    io.out_tag[1][7] <= io.in_tag[1][7] @[TPU.scala 60:14]
    io.out_tag[2][0] <= io.in_tag[2][0] @[TPU.scala 60:14]
    io.out_tag[2][1] <= io.in_tag[2][1] @[TPU.scala 60:14]
    io.out_tag[2][2] <= io.in_tag[2][2] @[TPU.scala 60:14]
    io.out_tag[2][3] <= io.in_tag[2][3] @[TPU.scala 60:14]
    io.out_tag[2][4] <= io.in_tag[2][4] @[TPU.scala 60:14]
    io.out_tag[2][5] <= io.in_tag[2][5] @[TPU.scala 60:14]
    io.out_tag[2][6] <= io.in_tag[2][6] @[TPU.scala 60:14]
    io.out_tag[2][7] <= io.in_tag[2][7] @[TPU.scala 60:14]
    io.out_tag[3][0] <= io.in_tag[3][0] @[TPU.scala 60:14]
    io.out_tag[3][1] <= io.in_tag[3][1] @[TPU.scala 60:14]
    io.out_tag[3][2] <= io.in_tag[3][2] @[TPU.scala 60:14]
    io.out_tag[3][3] <= io.in_tag[3][3] @[TPU.scala 60:14]
    io.out_tag[3][4] <= io.in_tag[3][4] @[TPU.scala 60:14]
    io.out_tag[3][5] <= io.in_tag[3][5] @[TPU.scala 60:14]
    io.out_tag[3][6] <= io.in_tag[3][6] @[TPU.scala 60:14]
    io.out_tag[3][7] <= io.in_tag[3][7] @[TPU.scala 60:14]
    inst S8DP1 of S8DP1 @[TPU.scala 62:39]
    S8DP1.clock <= clock
    S8DP1.reset <= reset
    inst S8DP1_1 of S8DP1_1 @[TPU.scala 62:39]
    S8DP1_1.clock <= clock
    S8DP1_1.reset <= reset
    inst S8DP1_2 of S8DP1_2 @[TPU.scala 62:39]
    S8DP1_2.clock <= clock
    S8DP1_2.reset <= reset
    inst S8DP1_3 of S8DP1_3 @[TPU.scala 62:39]
    S8DP1_3.clock <= clock
    S8DP1_3.reset <= reset
    wire S8DP1_1_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 62:20]
    S8DP1_1_1[0].out_calculate <= S8DP1.io.out_calculate @[TPU.scala 62:20]
    S8DP1.io.in_calculate <= S8DP1_1_1[0].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[0].result <= S8DP1.io.result @[TPU.scala 62:20]
    S8DP1.io.in_tag[0] <= S8DP1_1_1[0].in_tag[0] @[TPU.scala 62:20]
    S8DP1.io.in_tag[1] <= S8DP1_1_1[0].in_tag[1] @[TPU.scala 62:20]
    S8DP1.io.in_tag[2] <= S8DP1_1_1[0].in_tag[2] @[TPU.scala 62:20]
    S8DP1.io.in_tag[3] <= S8DP1_1_1[0].in_tag[3] @[TPU.scala 62:20]
    S8DP1.io.in_tag[4] <= S8DP1_1_1[0].in_tag[4] @[TPU.scala 62:20]
    S8DP1.io.in_tag[5] <= S8DP1_1_1[0].in_tag[5] @[TPU.scala 62:20]
    S8DP1.io.in_tag[6] <= S8DP1_1_1[0].in_tag[6] @[TPU.scala 62:20]
    S8DP1.io.in_tag[7] <= S8DP1_1_1[0].in_tag[7] @[TPU.scala 62:20]
    S8DP1.io.in_B[0] <= S8DP1_1_1[0].in_B[0] @[TPU.scala 62:20]
    S8DP1.io.in_B[1] <= S8DP1_1_1[0].in_B[1] @[TPU.scala 62:20]
    S8DP1.io.in_B[2] <= S8DP1_1_1[0].in_B[2] @[TPU.scala 62:20]
    S8DP1.io.in_B[3] <= S8DP1_1_1[0].in_B[3] @[TPU.scala 62:20]
    S8DP1.io.in_B[4] <= S8DP1_1_1[0].in_B[4] @[TPU.scala 62:20]
    S8DP1.io.in_B[5] <= S8DP1_1_1[0].in_B[5] @[TPU.scala 62:20]
    S8DP1.io.in_B[6] <= S8DP1_1_1[0].in_B[6] @[TPU.scala 62:20]
    S8DP1.io.in_B[7] <= S8DP1_1_1[0].in_B[7] @[TPU.scala 62:20]
    S8DP1.io.in_A[0] <= S8DP1_1_1[0].in_A[0] @[TPU.scala 62:20]
    S8DP1.io.in_A[1] <= S8DP1_1_1[0].in_A[1] @[TPU.scala 62:20]
    S8DP1.io.in_A[2] <= S8DP1_1_1[0].in_A[2] @[TPU.scala 62:20]
    S8DP1.io.in_A[3] <= S8DP1_1_1[0].in_A[3] @[TPU.scala 62:20]
    S8DP1.io.in_A[4] <= S8DP1_1_1[0].in_A[4] @[TPU.scala 62:20]
    S8DP1.io.in_A[5] <= S8DP1_1_1[0].in_A[5] @[TPU.scala 62:20]
    S8DP1.io.in_A[6] <= S8DP1_1_1[0].in_A[6] @[TPU.scala 62:20]
    S8DP1.io.in_A[7] <= S8DP1_1_1[0].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[1].out_calculate <= S8DP1_1.io.out_calculate @[TPU.scala 62:20]
    S8DP1_1.io.in_calculate <= S8DP1_1_1[1].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[1].result <= S8DP1_1.io.result @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[0] <= S8DP1_1_1[1].in_tag[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[1] <= S8DP1_1_1[1].in_tag[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[2] <= S8DP1_1_1[1].in_tag[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[3] <= S8DP1_1_1[1].in_tag[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[4] <= S8DP1_1_1[1].in_tag[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[5] <= S8DP1_1_1[1].in_tag[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[6] <= S8DP1_1_1[1].in_tag[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[7] <= S8DP1_1_1[1].in_tag[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[0] <= S8DP1_1_1[1].in_B[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[1] <= S8DP1_1_1[1].in_B[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[2] <= S8DP1_1_1[1].in_B[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[3] <= S8DP1_1_1[1].in_B[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[4] <= S8DP1_1_1[1].in_B[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[5] <= S8DP1_1_1[1].in_B[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[6] <= S8DP1_1_1[1].in_B[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[7] <= S8DP1_1_1[1].in_B[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[0] <= S8DP1_1_1[1].in_A[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[1] <= S8DP1_1_1[1].in_A[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[2] <= S8DP1_1_1[1].in_A[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[3] <= S8DP1_1_1[1].in_A[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[4] <= S8DP1_1_1[1].in_A[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[5] <= S8DP1_1_1[1].in_A[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[6] <= S8DP1_1_1[1].in_A[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[7] <= S8DP1_1_1[1].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[2].out_calculate <= S8DP1_2.io.out_calculate @[TPU.scala 62:20]
    S8DP1_2.io.in_calculate <= S8DP1_1_1[2].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[2].result <= S8DP1_2.io.result @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[0] <= S8DP1_1_1[2].in_tag[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[1] <= S8DP1_1_1[2].in_tag[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[2] <= S8DP1_1_1[2].in_tag[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[3] <= S8DP1_1_1[2].in_tag[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[4] <= S8DP1_1_1[2].in_tag[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[5] <= S8DP1_1_1[2].in_tag[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[6] <= S8DP1_1_1[2].in_tag[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[7] <= S8DP1_1_1[2].in_tag[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[0] <= S8DP1_1_1[2].in_B[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[1] <= S8DP1_1_1[2].in_B[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[2] <= S8DP1_1_1[2].in_B[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[3] <= S8DP1_1_1[2].in_B[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[4] <= S8DP1_1_1[2].in_B[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[5] <= S8DP1_1_1[2].in_B[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[6] <= S8DP1_1_1[2].in_B[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[7] <= S8DP1_1_1[2].in_B[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[0] <= S8DP1_1_1[2].in_A[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[1] <= S8DP1_1_1[2].in_A[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[2] <= S8DP1_1_1[2].in_A[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[3] <= S8DP1_1_1[2].in_A[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[4] <= S8DP1_1_1[2].in_A[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[5] <= S8DP1_1_1[2].in_A[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[6] <= S8DP1_1_1[2].in_A[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[7] <= S8DP1_1_1[2].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[3].out_calculate <= S8DP1_3.io.out_calculate @[TPU.scala 62:20]
    S8DP1_3.io.in_calculate <= S8DP1_1_1[3].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[3].result <= S8DP1_3.io.result @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[0] <= S8DP1_1_1[3].in_tag[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[1] <= S8DP1_1_1[3].in_tag[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[2] <= S8DP1_1_1[3].in_tag[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[3] <= S8DP1_1_1[3].in_tag[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[4] <= S8DP1_1_1[3].in_tag[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[5] <= S8DP1_1_1[3].in_tag[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[6] <= S8DP1_1_1[3].in_tag[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[7] <= S8DP1_1_1[3].in_tag[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[0] <= S8DP1_1_1[3].in_B[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[1] <= S8DP1_1_1[3].in_B[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[2] <= S8DP1_1_1[3].in_B[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[3] <= S8DP1_1_1[3].in_B[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[4] <= S8DP1_1_1[3].in_B[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[5] <= S8DP1_1_1[3].in_B[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[6] <= S8DP1_1_1[3].in_B[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[7] <= S8DP1_1_1[3].in_B[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[0] <= S8DP1_1_1[3].in_A[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[1] <= S8DP1_1_1[3].in_A[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[2] <= S8DP1_1_1[3].in_A[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[3] <= S8DP1_1_1[3].in_A[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[4] <= S8DP1_1_1[3].in_A[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[5] <= S8DP1_1_1[3].in_A[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[6] <= S8DP1_1_1[3].in_A[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[7] <= S8DP1_1_1[3].in_A[7] @[TPU.scala 62:20]
    inst S8DP1_4 of S8DP1_4 @[TPU.scala 63:39]
    S8DP1_4.clock <= clock
    S8DP1_4.reset <= reset
    inst S8DP1_5 of S8DP1_5 @[TPU.scala 63:39]
    S8DP1_5.clock <= clock
    S8DP1_5.reset <= reset
    inst S8DP1_6 of S8DP1_6 @[TPU.scala 63:39]
    S8DP1_6.clock <= clock
    S8DP1_6.reset <= reset
    inst S8DP1_7 of S8DP1_7 @[TPU.scala 63:39]
    S8DP1_7.clock <= clock
    S8DP1_7.reset <= reset
    wire S8DP1_2_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 63:20]
    S8DP1_2_1[0].out_calculate <= S8DP1_4.io.out_calculate @[TPU.scala 63:20]
    S8DP1_4.io.in_calculate <= S8DP1_2_1[0].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[0].result <= S8DP1_4.io.result @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[0] <= S8DP1_2_1[0].in_tag[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[1] <= S8DP1_2_1[0].in_tag[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[2] <= S8DP1_2_1[0].in_tag[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[3] <= S8DP1_2_1[0].in_tag[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[4] <= S8DP1_2_1[0].in_tag[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[5] <= S8DP1_2_1[0].in_tag[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[6] <= S8DP1_2_1[0].in_tag[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[7] <= S8DP1_2_1[0].in_tag[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[0] <= S8DP1_2_1[0].in_B[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[1] <= S8DP1_2_1[0].in_B[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[2] <= S8DP1_2_1[0].in_B[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[3] <= S8DP1_2_1[0].in_B[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[4] <= S8DP1_2_1[0].in_B[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[5] <= S8DP1_2_1[0].in_B[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[6] <= S8DP1_2_1[0].in_B[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[7] <= S8DP1_2_1[0].in_B[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[0] <= S8DP1_2_1[0].in_A[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[1] <= S8DP1_2_1[0].in_A[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[2] <= S8DP1_2_1[0].in_A[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[3] <= S8DP1_2_1[0].in_A[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[4] <= S8DP1_2_1[0].in_A[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[5] <= S8DP1_2_1[0].in_A[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[6] <= S8DP1_2_1[0].in_A[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[7] <= S8DP1_2_1[0].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[1].out_calculate <= S8DP1_5.io.out_calculate @[TPU.scala 63:20]
    S8DP1_5.io.in_calculate <= S8DP1_2_1[1].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[1].result <= S8DP1_5.io.result @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[0] <= S8DP1_2_1[1].in_tag[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[1] <= S8DP1_2_1[1].in_tag[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[2] <= S8DP1_2_1[1].in_tag[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[3] <= S8DP1_2_1[1].in_tag[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[4] <= S8DP1_2_1[1].in_tag[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[5] <= S8DP1_2_1[1].in_tag[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[6] <= S8DP1_2_1[1].in_tag[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[7] <= S8DP1_2_1[1].in_tag[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[0] <= S8DP1_2_1[1].in_B[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[1] <= S8DP1_2_1[1].in_B[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[2] <= S8DP1_2_1[1].in_B[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[3] <= S8DP1_2_1[1].in_B[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[4] <= S8DP1_2_1[1].in_B[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[5] <= S8DP1_2_1[1].in_B[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[6] <= S8DP1_2_1[1].in_B[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[7] <= S8DP1_2_1[1].in_B[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[0] <= S8DP1_2_1[1].in_A[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[1] <= S8DP1_2_1[1].in_A[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[2] <= S8DP1_2_1[1].in_A[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[3] <= S8DP1_2_1[1].in_A[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[4] <= S8DP1_2_1[1].in_A[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[5] <= S8DP1_2_1[1].in_A[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[6] <= S8DP1_2_1[1].in_A[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[7] <= S8DP1_2_1[1].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[2].out_calculate <= S8DP1_6.io.out_calculate @[TPU.scala 63:20]
    S8DP1_6.io.in_calculate <= S8DP1_2_1[2].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[2].result <= S8DP1_6.io.result @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[0] <= S8DP1_2_1[2].in_tag[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[1] <= S8DP1_2_1[2].in_tag[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[2] <= S8DP1_2_1[2].in_tag[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[3] <= S8DP1_2_1[2].in_tag[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[4] <= S8DP1_2_1[2].in_tag[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[5] <= S8DP1_2_1[2].in_tag[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[6] <= S8DP1_2_1[2].in_tag[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[7] <= S8DP1_2_1[2].in_tag[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[0] <= S8DP1_2_1[2].in_B[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[1] <= S8DP1_2_1[2].in_B[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[2] <= S8DP1_2_1[2].in_B[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[3] <= S8DP1_2_1[2].in_B[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[4] <= S8DP1_2_1[2].in_B[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[5] <= S8DP1_2_1[2].in_B[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[6] <= S8DP1_2_1[2].in_B[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[7] <= S8DP1_2_1[2].in_B[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[0] <= S8DP1_2_1[2].in_A[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[1] <= S8DP1_2_1[2].in_A[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[2] <= S8DP1_2_1[2].in_A[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[3] <= S8DP1_2_1[2].in_A[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[4] <= S8DP1_2_1[2].in_A[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[5] <= S8DP1_2_1[2].in_A[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[6] <= S8DP1_2_1[2].in_A[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[7] <= S8DP1_2_1[2].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[3].out_calculate <= S8DP1_7.io.out_calculate @[TPU.scala 63:20]
    S8DP1_7.io.in_calculate <= S8DP1_2_1[3].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[3].result <= S8DP1_7.io.result @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[0] <= S8DP1_2_1[3].in_tag[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[1] <= S8DP1_2_1[3].in_tag[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[2] <= S8DP1_2_1[3].in_tag[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[3] <= S8DP1_2_1[3].in_tag[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[4] <= S8DP1_2_1[3].in_tag[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[5] <= S8DP1_2_1[3].in_tag[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[6] <= S8DP1_2_1[3].in_tag[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[7] <= S8DP1_2_1[3].in_tag[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[0] <= S8DP1_2_1[3].in_B[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[1] <= S8DP1_2_1[3].in_B[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[2] <= S8DP1_2_1[3].in_B[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[3] <= S8DP1_2_1[3].in_B[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[4] <= S8DP1_2_1[3].in_B[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[5] <= S8DP1_2_1[3].in_B[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[6] <= S8DP1_2_1[3].in_B[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[7] <= S8DP1_2_1[3].in_B[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[0] <= S8DP1_2_1[3].in_A[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[1] <= S8DP1_2_1[3].in_A[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[2] <= S8DP1_2_1[3].in_A[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[3] <= S8DP1_2_1[3].in_A[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[4] <= S8DP1_2_1[3].in_A[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[5] <= S8DP1_2_1[3].in_A[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[6] <= S8DP1_2_1[3].in_A[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[7] <= S8DP1_2_1[3].in_A[7] @[TPU.scala 63:20]
    reg cal_state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 64:26]
    reg cal_control : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 65:28]
    S8DP1_1_1[0].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[0].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 71:23]
    S8DP1_2_1[0].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[0].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 76:23]
    S8DP1_1_1[1].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[1].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 71:23]
    S8DP1_2_1[1].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[1].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 76:23]
    S8DP1_1_1[2].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[2].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 71:23]
    S8DP1_2_1[2].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[2].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 76:23]
    S8DP1_1_1[3].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[3].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 71:23]
    S8DP1_2_1[3].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[3].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 76:23]
    node _T_3683 = and(S8DP1_1_1[0].out_calculate, S8DP1_1_1[1].out_calculate) @[TPU.scala 78:42]
    node _T_3684 = and(_T_3683, S8DP1_1_1[2].out_calculate) @[TPU.scala 78:70]
    node _T_3685 = and(_T_3684, S8DP1_1_1[3].out_calculate) @[TPU.scala 78:98]
    node _T_3686 = and(_T_3685, S8DP1_2_1[0].out_calculate) @[TPU.scala 79:5]
    node _T_3687 = and(_T_3686, S8DP1_2_1[1].out_calculate) @[TPU.scala 79:33]
    node _T_3688 = and(_T_3687, S8DP1_2_1[2].out_calculate) @[TPU.scala 79:61]
    node _T_3689 = and(_T_3688, S8DP1_2_1[3].out_calculate) @[TPU.scala 79:89]
    cal_state <= _T_3689 @[TPU.scala 78:13]
    io.out_result[0][0] <= S8DP1_1_1[0].result @[TPU.scala 83:25]
    io.out_result[1][0] <= S8DP1_2_1[0].result @[TPU.scala 84:25]
    io.out_result[0][1] <= S8DP1_1_1[1].result @[TPU.scala 83:25]
    io.out_result[1][1] <= S8DP1_2_1[1].result @[TPU.scala 84:25]
    io.out_result[0][2] <= S8DP1_1_1[2].result @[TPU.scala 83:25]
    io.out_result[1][2] <= S8DP1_2_1[2].result @[TPU.scala 84:25]
    io.out_result[0][3] <= S8DP1_1_1[3].result @[TPU.scala 83:25]
    io.out_result[1][3] <= S8DP1_2_1[3].result @[TPU.scala 84:25]
    io.out_cal <= cal_state @[TPU.scala 86:14]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h02"))) @[TPU.scala 90:25]
    node _T_3691 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
    when _T_3691 : @[Conditional.scala 40:58]
      reg _T_3693 : UInt<1>, clock @[TPU.scala 93:33]
      _T_3693 <= io.in_cal @[TPU.scala 93:33]
      node _T_3695 = eq(_T_3693, UInt<1>("h00")) @[TPU.scala 93:25]
      node _T_3696 = and(io.in_cal, _T_3695) @[TPU.scala 93:23]
      when _T_3696 : @[TPU.scala 93:46]
        stateReg <= UInt<2>("h00") @[TPU.scala 94:18]
        skip @[TPU.scala 93:46]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3697 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
      when _T_3697 : @[Conditional.scala 39:67]
        stateReg <= UInt<2>("h01") @[TPU.scala 99:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_3698 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
        when _T_3698 : @[Conditional.scala 39:67]
          cal_control <= UInt<1>("h01") @[TPU.scala 103:21]
          when cal_state : @[TPU.scala 106:23]
            stateReg <= UInt<2>("h02") @[TPU.scala 107:18]
            cal_control <= UInt<1>("h00") @[TPU.scala 108:21]
            skip @[TPU.scala 106:23]
          skip @[Conditional.scala 39:67]
    
  module MUX8_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_8 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_9 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_10 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_11 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_12 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_13 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_14 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_15 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module TPU_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8][2], flip in_B : SInt<32>[8][4], flip in_tag : UInt<1>[8][4], flip in_cal : UInt<1>, out_A : SInt<32>[8][2], out_B : SInt<32>[8][4], out_tag : UInt<1>[8][4], out_result : SInt<32>[4][2], out_cal : UInt<1>}
    
    io.out_A[0][0] <= io.in_A[0][0] @[TPU.scala 54:12]
    io.out_A[0][1] <= io.in_A[0][1] @[TPU.scala 54:12]
    io.out_A[0][2] <= io.in_A[0][2] @[TPU.scala 54:12]
    io.out_A[0][3] <= io.in_A[0][3] @[TPU.scala 54:12]
    io.out_A[0][4] <= io.in_A[0][4] @[TPU.scala 54:12]
    io.out_A[0][5] <= io.in_A[0][5] @[TPU.scala 54:12]
    io.out_A[0][6] <= io.in_A[0][6] @[TPU.scala 54:12]
    io.out_A[0][7] <= io.in_A[0][7] @[TPU.scala 54:12]
    io.out_A[1][0] <= io.in_A[1][0] @[TPU.scala 54:12]
    io.out_A[1][1] <= io.in_A[1][1] @[TPU.scala 54:12]
    io.out_A[1][2] <= io.in_A[1][2] @[TPU.scala 54:12]
    io.out_A[1][3] <= io.in_A[1][3] @[TPU.scala 54:12]
    io.out_A[1][4] <= io.in_A[1][4] @[TPU.scala 54:12]
    io.out_A[1][5] <= io.in_A[1][5] @[TPU.scala 54:12]
    io.out_A[1][6] <= io.in_A[1][6] @[TPU.scala 54:12]
    io.out_A[1][7] <= io.in_A[1][7] @[TPU.scala 54:12]
    io.out_B[0][0] <= io.in_B[0][0] @[TPU.scala 57:12]
    io.out_B[0][1] <= io.in_B[0][1] @[TPU.scala 57:12]
    io.out_B[0][2] <= io.in_B[0][2] @[TPU.scala 57:12]
    io.out_B[0][3] <= io.in_B[0][3] @[TPU.scala 57:12]
    io.out_B[0][4] <= io.in_B[0][4] @[TPU.scala 57:12]
    io.out_B[0][5] <= io.in_B[0][5] @[TPU.scala 57:12]
    io.out_B[0][6] <= io.in_B[0][6] @[TPU.scala 57:12]
    io.out_B[0][7] <= io.in_B[0][7] @[TPU.scala 57:12]
    io.out_B[1][0] <= io.in_B[1][0] @[TPU.scala 57:12]
    io.out_B[1][1] <= io.in_B[1][1] @[TPU.scala 57:12]
    io.out_B[1][2] <= io.in_B[1][2] @[TPU.scala 57:12]
    io.out_B[1][3] <= io.in_B[1][3] @[TPU.scala 57:12]
    io.out_B[1][4] <= io.in_B[1][4] @[TPU.scala 57:12]
    io.out_B[1][5] <= io.in_B[1][5] @[TPU.scala 57:12]
    io.out_B[1][6] <= io.in_B[1][6] @[TPU.scala 57:12]
    io.out_B[1][7] <= io.in_B[1][7] @[TPU.scala 57:12]
    io.out_B[2][0] <= io.in_B[2][0] @[TPU.scala 57:12]
    io.out_B[2][1] <= io.in_B[2][1] @[TPU.scala 57:12]
    io.out_B[2][2] <= io.in_B[2][2] @[TPU.scala 57:12]
    io.out_B[2][3] <= io.in_B[2][3] @[TPU.scala 57:12]
    io.out_B[2][4] <= io.in_B[2][4] @[TPU.scala 57:12]
    io.out_B[2][5] <= io.in_B[2][5] @[TPU.scala 57:12]
    io.out_B[2][6] <= io.in_B[2][6] @[TPU.scala 57:12]
    io.out_B[2][7] <= io.in_B[2][7] @[TPU.scala 57:12]
    io.out_B[3][0] <= io.in_B[3][0] @[TPU.scala 57:12]
    io.out_B[3][1] <= io.in_B[3][1] @[TPU.scala 57:12]
    io.out_B[3][2] <= io.in_B[3][2] @[TPU.scala 57:12]
    io.out_B[3][3] <= io.in_B[3][3] @[TPU.scala 57:12]
    io.out_B[3][4] <= io.in_B[3][4] @[TPU.scala 57:12]
    io.out_B[3][5] <= io.in_B[3][5] @[TPU.scala 57:12]
    io.out_B[3][6] <= io.in_B[3][6] @[TPU.scala 57:12]
    io.out_B[3][7] <= io.in_B[3][7] @[TPU.scala 57:12]
    io.out_tag[0][0] <= io.in_tag[0][0] @[TPU.scala 60:14]
    io.out_tag[0][1] <= io.in_tag[0][1] @[TPU.scala 60:14]
    io.out_tag[0][2] <= io.in_tag[0][2] @[TPU.scala 60:14]
    io.out_tag[0][3] <= io.in_tag[0][3] @[TPU.scala 60:14]
    io.out_tag[0][4] <= io.in_tag[0][4] @[TPU.scala 60:14]
    io.out_tag[0][5] <= io.in_tag[0][5] @[TPU.scala 60:14]
    io.out_tag[0][6] <= io.in_tag[0][6] @[TPU.scala 60:14]
    io.out_tag[0][7] <= io.in_tag[0][7] @[TPU.scala 60:14]
    io.out_tag[1][0] <= io.in_tag[1][0] @[TPU.scala 60:14]
    io.out_tag[1][1] <= io.in_tag[1][1] @[TPU.scala 60:14]
    io.out_tag[1][2] <= io.in_tag[1][2] @[TPU.scala 60:14]
    io.out_tag[1][3] <= io.in_tag[1][3] @[TPU.scala 60:14]
    io.out_tag[1][4] <= io.in_tag[1][4] @[TPU.scala 60:14]
    io.out_tag[1][5] <= io.in_tag[1][5] @[TPU.scala 60:14]
    io.out_tag[1][6] <= io.in_tag[1][6] @[TPU.scala 60:14]
    io.out_tag[1][7] <= io.in_tag[1][7] @[TPU.scala 60:14]
    io.out_tag[2][0] <= io.in_tag[2][0] @[TPU.scala 60:14]
    io.out_tag[2][1] <= io.in_tag[2][1] @[TPU.scala 60:14]
    io.out_tag[2][2] <= io.in_tag[2][2] @[TPU.scala 60:14]
    io.out_tag[2][3] <= io.in_tag[2][3] @[TPU.scala 60:14]
    io.out_tag[2][4] <= io.in_tag[2][4] @[TPU.scala 60:14]
    io.out_tag[2][5] <= io.in_tag[2][5] @[TPU.scala 60:14]
    io.out_tag[2][6] <= io.in_tag[2][6] @[TPU.scala 60:14]
    io.out_tag[2][7] <= io.in_tag[2][7] @[TPU.scala 60:14]
    io.out_tag[3][0] <= io.in_tag[3][0] @[TPU.scala 60:14]
    io.out_tag[3][1] <= io.in_tag[3][1] @[TPU.scala 60:14]
    io.out_tag[3][2] <= io.in_tag[3][2] @[TPU.scala 60:14]
    io.out_tag[3][3] <= io.in_tag[3][3] @[TPU.scala 60:14]
    io.out_tag[3][4] <= io.in_tag[3][4] @[TPU.scala 60:14]
    io.out_tag[3][5] <= io.in_tag[3][5] @[TPU.scala 60:14]
    io.out_tag[3][6] <= io.in_tag[3][6] @[TPU.scala 60:14]
    io.out_tag[3][7] <= io.in_tag[3][7] @[TPU.scala 60:14]
    inst S8DP1 of S8DP1_8 @[TPU.scala 62:39]
    S8DP1.clock <= clock
    S8DP1.reset <= reset
    inst S8DP1_1 of S8DP1_9 @[TPU.scala 62:39]
    S8DP1_1.clock <= clock
    S8DP1_1.reset <= reset
    inst S8DP1_2 of S8DP1_10 @[TPU.scala 62:39]
    S8DP1_2.clock <= clock
    S8DP1_2.reset <= reset
    inst S8DP1_3 of S8DP1_11 @[TPU.scala 62:39]
    S8DP1_3.clock <= clock
    S8DP1_3.reset <= reset
    wire S8DP1_1_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 62:20]
    S8DP1_1_1[0].out_calculate <= S8DP1.io.out_calculate @[TPU.scala 62:20]
    S8DP1.io.in_calculate <= S8DP1_1_1[0].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[0].result <= S8DP1.io.result @[TPU.scala 62:20]
    S8DP1.io.in_tag[0] <= S8DP1_1_1[0].in_tag[0] @[TPU.scala 62:20]
    S8DP1.io.in_tag[1] <= S8DP1_1_1[0].in_tag[1] @[TPU.scala 62:20]
    S8DP1.io.in_tag[2] <= S8DP1_1_1[0].in_tag[2] @[TPU.scala 62:20]
    S8DP1.io.in_tag[3] <= S8DP1_1_1[0].in_tag[3] @[TPU.scala 62:20]
    S8DP1.io.in_tag[4] <= S8DP1_1_1[0].in_tag[4] @[TPU.scala 62:20]
    S8DP1.io.in_tag[5] <= S8DP1_1_1[0].in_tag[5] @[TPU.scala 62:20]
    S8DP1.io.in_tag[6] <= S8DP1_1_1[0].in_tag[6] @[TPU.scala 62:20]
    S8DP1.io.in_tag[7] <= S8DP1_1_1[0].in_tag[7] @[TPU.scala 62:20]
    S8DP1.io.in_B[0] <= S8DP1_1_1[0].in_B[0] @[TPU.scala 62:20]
    S8DP1.io.in_B[1] <= S8DP1_1_1[0].in_B[1] @[TPU.scala 62:20]
    S8DP1.io.in_B[2] <= S8DP1_1_1[0].in_B[2] @[TPU.scala 62:20]
    S8DP1.io.in_B[3] <= S8DP1_1_1[0].in_B[3] @[TPU.scala 62:20]
    S8DP1.io.in_B[4] <= S8DP1_1_1[0].in_B[4] @[TPU.scala 62:20]
    S8DP1.io.in_B[5] <= S8DP1_1_1[0].in_B[5] @[TPU.scala 62:20]
    S8DP1.io.in_B[6] <= S8DP1_1_1[0].in_B[6] @[TPU.scala 62:20]
    S8DP1.io.in_B[7] <= S8DP1_1_1[0].in_B[7] @[TPU.scala 62:20]
    S8DP1.io.in_A[0] <= S8DP1_1_1[0].in_A[0] @[TPU.scala 62:20]
    S8DP1.io.in_A[1] <= S8DP1_1_1[0].in_A[1] @[TPU.scala 62:20]
    S8DP1.io.in_A[2] <= S8DP1_1_1[0].in_A[2] @[TPU.scala 62:20]
    S8DP1.io.in_A[3] <= S8DP1_1_1[0].in_A[3] @[TPU.scala 62:20]
    S8DP1.io.in_A[4] <= S8DP1_1_1[0].in_A[4] @[TPU.scala 62:20]
    S8DP1.io.in_A[5] <= S8DP1_1_1[0].in_A[5] @[TPU.scala 62:20]
    S8DP1.io.in_A[6] <= S8DP1_1_1[0].in_A[6] @[TPU.scala 62:20]
    S8DP1.io.in_A[7] <= S8DP1_1_1[0].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[1].out_calculate <= S8DP1_1.io.out_calculate @[TPU.scala 62:20]
    S8DP1_1.io.in_calculate <= S8DP1_1_1[1].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[1].result <= S8DP1_1.io.result @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[0] <= S8DP1_1_1[1].in_tag[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[1] <= S8DP1_1_1[1].in_tag[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[2] <= S8DP1_1_1[1].in_tag[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[3] <= S8DP1_1_1[1].in_tag[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[4] <= S8DP1_1_1[1].in_tag[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[5] <= S8DP1_1_1[1].in_tag[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[6] <= S8DP1_1_1[1].in_tag[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[7] <= S8DP1_1_1[1].in_tag[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[0] <= S8DP1_1_1[1].in_B[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[1] <= S8DP1_1_1[1].in_B[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[2] <= S8DP1_1_1[1].in_B[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[3] <= S8DP1_1_1[1].in_B[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[4] <= S8DP1_1_1[1].in_B[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[5] <= S8DP1_1_1[1].in_B[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[6] <= S8DP1_1_1[1].in_B[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[7] <= S8DP1_1_1[1].in_B[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[0] <= S8DP1_1_1[1].in_A[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[1] <= S8DP1_1_1[1].in_A[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[2] <= S8DP1_1_1[1].in_A[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[3] <= S8DP1_1_1[1].in_A[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[4] <= S8DP1_1_1[1].in_A[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[5] <= S8DP1_1_1[1].in_A[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[6] <= S8DP1_1_1[1].in_A[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[7] <= S8DP1_1_1[1].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[2].out_calculate <= S8DP1_2.io.out_calculate @[TPU.scala 62:20]
    S8DP1_2.io.in_calculate <= S8DP1_1_1[2].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[2].result <= S8DP1_2.io.result @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[0] <= S8DP1_1_1[2].in_tag[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[1] <= S8DP1_1_1[2].in_tag[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[2] <= S8DP1_1_1[2].in_tag[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[3] <= S8DP1_1_1[2].in_tag[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[4] <= S8DP1_1_1[2].in_tag[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[5] <= S8DP1_1_1[2].in_tag[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[6] <= S8DP1_1_1[2].in_tag[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[7] <= S8DP1_1_1[2].in_tag[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[0] <= S8DP1_1_1[2].in_B[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[1] <= S8DP1_1_1[2].in_B[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[2] <= S8DP1_1_1[2].in_B[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[3] <= S8DP1_1_1[2].in_B[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[4] <= S8DP1_1_1[2].in_B[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[5] <= S8DP1_1_1[2].in_B[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[6] <= S8DP1_1_1[2].in_B[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[7] <= S8DP1_1_1[2].in_B[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[0] <= S8DP1_1_1[2].in_A[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[1] <= S8DP1_1_1[2].in_A[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[2] <= S8DP1_1_1[2].in_A[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[3] <= S8DP1_1_1[2].in_A[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[4] <= S8DP1_1_1[2].in_A[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[5] <= S8DP1_1_1[2].in_A[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[6] <= S8DP1_1_1[2].in_A[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[7] <= S8DP1_1_1[2].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[3].out_calculate <= S8DP1_3.io.out_calculate @[TPU.scala 62:20]
    S8DP1_3.io.in_calculate <= S8DP1_1_1[3].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[3].result <= S8DP1_3.io.result @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[0] <= S8DP1_1_1[3].in_tag[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[1] <= S8DP1_1_1[3].in_tag[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[2] <= S8DP1_1_1[3].in_tag[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[3] <= S8DP1_1_1[3].in_tag[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[4] <= S8DP1_1_1[3].in_tag[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[5] <= S8DP1_1_1[3].in_tag[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[6] <= S8DP1_1_1[3].in_tag[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[7] <= S8DP1_1_1[3].in_tag[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[0] <= S8DP1_1_1[3].in_B[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[1] <= S8DP1_1_1[3].in_B[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[2] <= S8DP1_1_1[3].in_B[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[3] <= S8DP1_1_1[3].in_B[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[4] <= S8DP1_1_1[3].in_B[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[5] <= S8DP1_1_1[3].in_B[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[6] <= S8DP1_1_1[3].in_B[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[7] <= S8DP1_1_1[3].in_B[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[0] <= S8DP1_1_1[3].in_A[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[1] <= S8DP1_1_1[3].in_A[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[2] <= S8DP1_1_1[3].in_A[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[3] <= S8DP1_1_1[3].in_A[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[4] <= S8DP1_1_1[3].in_A[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[5] <= S8DP1_1_1[3].in_A[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[6] <= S8DP1_1_1[3].in_A[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[7] <= S8DP1_1_1[3].in_A[7] @[TPU.scala 62:20]
    inst S8DP1_4 of S8DP1_12 @[TPU.scala 63:39]
    S8DP1_4.clock <= clock
    S8DP1_4.reset <= reset
    inst S8DP1_5 of S8DP1_13 @[TPU.scala 63:39]
    S8DP1_5.clock <= clock
    S8DP1_5.reset <= reset
    inst S8DP1_6 of S8DP1_14 @[TPU.scala 63:39]
    S8DP1_6.clock <= clock
    S8DP1_6.reset <= reset
    inst S8DP1_7 of S8DP1_15 @[TPU.scala 63:39]
    S8DP1_7.clock <= clock
    S8DP1_7.reset <= reset
    wire S8DP1_2_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 63:20]
    S8DP1_2_1[0].out_calculate <= S8DP1_4.io.out_calculate @[TPU.scala 63:20]
    S8DP1_4.io.in_calculate <= S8DP1_2_1[0].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[0].result <= S8DP1_4.io.result @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[0] <= S8DP1_2_1[0].in_tag[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[1] <= S8DP1_2_1[0].in_tag[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[2] <= S8DP1_2_1[0].in_tag[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[3] <= S8DP1_2_1[0].in_tag[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[4] <= S8DP1_2_1[0].in_tag[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[5] <= S8DP1_2_1[0].in_tag[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[6] <= S8DP1_2_1[0].in_tag[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[7] <= S8DP1_2_1[0].in_tag[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[0] <= S8DP1_2_1[0].in_B[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[1] <= S8DP1_2_1[0].in_B[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[2] <= S8DP1_2_1[0].in_B[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[3] <= S8DP1_2_1[0].in_B[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[4] <= S8DP1_2_1[0].in_B[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[5] <= S8DP1_2_1[0].in_B[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[6] <= S8DP1_2_1[0].in_B[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[7] <= S8DP1_2_1[0].in_B[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[0] <= S8DP1_2_1[0].in_A[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[1] <= S8DP1_2_1[0].in_A[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[2] <= S8DP1_2_1[0].in_A[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[3] <= S8DP1_2_1[0].in_A[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[4] <= S8DP1_2_1[0].in_A[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[5] <= S8DP1_2_1[0].in_A[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[6] <= S8DP1_2_1[0].in_A[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[7] <= S8DP1_2_1[0].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[1].out_calculate <= S8DP1_5.io.out_calculate @[TPU.scala 63:20]
    S8DP1_5.io.in_calculate <= S8DP1_2_1[1].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[1].result <= S8DP1_5.io.result @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[0] <= S8DP1_2_1[1].in_tag[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[1] <= S8DP1_2_1[1].in_tag[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[2] <= S8DP1_2_1[1].in_tag[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[3] <= S8DP1_2_1[1].in_tag[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[4] <= S8DP1_2_1[1].in_tag[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[5] <= S8DP1_2_1[1].in_tag[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[6] <= S8DP1_2_1[1].in_tag[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[7] <= S8DP1_2_1[1].in_tag[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[0] <= S8DP1_2_1[1].in_B[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[1] <= S8DP1_2_1[1].in_B[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[2] <= S8DP1_2_1[1].in_B[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[3] <= S8DP1_2_1[1].in_B[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[4] <= S8DP1_2_1[1].in_B[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[5] <= S8DP1_2_1[1].in_B[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[6] <= S8DP1_2_1[1].in_B[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[7] <= S8DP1_2_1[1].in_B[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[0] <= S8DP1_2_1[1].in_A[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[1] <= S8DP1_2_1[1].in_A[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[2] <= S8DP1_2_1[1].in_A[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[3] <= S8DP1_2_1[1].in_A[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[4] <= S8DP1_2_1[1].in_A[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[5] <= S8DP1_2_1[1].in_A[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[6] <= S8DP1_2_1[1].in_A[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[7] <= S8DP1_2_1[1].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[2].out_calculate <= S8DP1_6.io.out_calculate @[TPU.scala 63:20]
    S8DP1_6.io.in_calculate <= S8DP1_2_1[2].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[2].result <= S8DP1_6.io.result @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[0] <= S8DP1_2_1[2].in_tag[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[1] <= S8DP1_2_1[2].in_tag[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[2] <= S8DP1_2_1[2].in_tag[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[3] <= S8DP1_2_1[2].in_tag[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[4] <= S8DP1_2_1[2].in_tag[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[5] <= S8DP1_2_1[2].in_tag[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[6] <= S8DP1_2_1[2].in_tag[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[7] <= S8DP1_2_1[2].in_tag[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[0] <= S8DP1_2_1[2].in_B[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[1] <= S8DP1_2_1[2].in_B[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[2] <= S8DP1_2_1[2].in_B[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[3] <= S8DP1_2_1[2].in_B[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[4] <= S8DP1_2_1[2].in_B[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[5] <= S8DP1_2_1[2].in_B[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[6] <= S8DP1_2_1[2].in_B[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[7] <= S8DP1_2_1[2].in_B[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[0] <= S8DP1_2_1[2].in_A[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[1] <= S8DP1_2_1[2].in_A[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[2] <= S8DP1_2_1[2].in_A[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[3] <= S8DP1_2_1[2].in_A[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[4] <= S8DP1_2_1[2].in_A[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[5] <= S8DP1_2_1[2].in_A[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[6] <= S8DP1_2_1[2].in_A[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[7] <= S8DP1_2_1[2].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[3].out_calculate <= S8DP1_7.io.out_calculate @[TPU.scala 63:20]
    S8DP1_7.io.in_calculate <= S8DP1_2_1[3].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[3].result <= S8DP1_7.io.result @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[0] <= S8DP1_2_1[3].in_tag[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[1] <= S8DP1_2_1[3].in_tag[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[2] <= S8DP1_2_1[3].in_tag[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[3] <= S8DP1_2_1[3].in_tag[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[4] <= S8DP1_2_1[3].in_tag[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[5] <= S8DP1_2_1[3].in_tag[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[6] <= S8DP1_2_1[3].in_tag[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[7] <= S8DP1_2_1[3].in_tag[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[0] <= S8DP1_2_1[3].in_B[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[1] <= S8DP1_2_1[3].in_B[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[2] <= S8DP1_2_1[3].in_B[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[3] <= S8DP1_2_1[3].in_B[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[4] <= S8DP1_2_1[3].in_B[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[5] <= S8DP1_2_1[3].in_B[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[6] <= S8DP1_2_1[3].in_B[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[7] <= S8DP1_2_1[3].in_B[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[0] <= S8DP1_2_1[3].in_A[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[1] <= S8DP1_2_1[3].in_A[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[2] <= S8DP1_2_1[3].in_A[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[3] <= S8DP1_2_1[3].in_A[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[4] <= S8DP1_2_1[3].in_A[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[5] <= S8DP1_2_1[3].in_A[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[6] <= S8DP1_2_1[3].in_A[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[7] <= S8DP1_2_1[3].in_A[7] @[TPU.scala 63:20]
    reg cal_state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 64:26]
    reg cal_control : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 65:28]
    S8DP1_1_1[0].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[0].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 71:23]
    S8DP1_2_1[0].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[0].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 76:23]
    S8DP1_1_1[1].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[1].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 71:23]
    S8DP1_2_1[1].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[1].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 76:23]
    S8DP1_1_1[2].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[2].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 71:23]
    S8DP1_2_1[2].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[2].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 76:23]
    S8DP1_1_1[3].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[3].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 71:23]
    S8DP1_2_1[3].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[3].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 76:23]
    node _T_3683 = and(S8DP1_1_1[0].out_calculate, S8DP1_1_1[1].out_calculate) @[TPU.scala 78:42]
    node _T_3684 = and(_T_3683, S8DP1_1_1[2].out_calculate) @[TPU.scala 78:70]
    node _T_3685 = and(_T_3684, S8DP1_1_1[3].out_calculate) @[TPU.scala 78:98]
    node _T_3686 = and(_T_3685, S8DP1_2_1[0].out_calculate) @[TPU.scala 79:5]
    node _T_3687 = and(_T_3686, S8DP1_2_1[1].out_calculate) @[TPU.scala 79:33]
    node _T_3688 = and(_T_3687, S8DP1_2_1[2].out_calculate) @[TPU.scala 79:61]
    node _T_3689 = and(_T_3688, S8DP1_2_1[3].out_calculate) @[TPU.scala 79:89]
    cal_state <= _T_3689 @[TPU.scala 78:13]
    io.out_result[0][0] <= S8DP1_1_1[0].result @[TPU.scala 83:25]
    io.out_result[1][0] <= S8DP1_2_1[0].result @[TPU.scala 84:25]
    io.out_result[0][1] <= S8DP1_1_1[1].result @[TPU.scala 83:25]
    io.out_result[1][1] <= S8DP1_2_1[1].result @[TPU.scala 84:25]
    io.out_result[0][2] <= S8DP1_1_1[2].result @[TPU.scala 83:25]
    io.out_result[1][2] <= S8DP1_2_1[2].result @[TPU.scala 84:25]
    io.out_result[0][3] <= S8DP1_1_1[3].result @[TPU.scala 83:25]
    io.out_result[1][3] <= S8DP1_2_1[3].result @[TPU.scala 84:25]
    io.out_cal <= cal_state @[TPU.scala 86:14]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h02"))) @[TPU.scala 90:25]
    node _T_3691 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
    when _T_3691 : @[Conditional.scala 40:58]
      reg _T_3693 : UInt<1>, clock @[TPU.scala 93:33]
      _T_3693 <= io.in_cal @[TPU.scala 93:33]
      node _T_3695 = eq(_T_3693, UInt<1>("h00")) @[TPU.scala 93:25]
      node _T_3696 = and(io.in_cal, _T_3695) @[TPU.scala 93:23]
      when _T_3696 : @[TPU.scala 93:46]
        stateReg <= UInt<2>("h00") @[TPU.scala 94:18]
        skip @[TPU.scala 93:46]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3697 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
      when _T_3697 : @[Conditional.scala 39:67]
        stateReg <= UInt<2>("h01") @[TPU.scala 99:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_3698 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
        when _T_3698 : @[Conditional.scala 39:67]
          cal_control <= UInt<1>("h01") @[TPU.scala 103:21]
          when cal_state : @[TPU.scala 106:23]
            stateReg <= UInt<2>("h02") @[TPU.scala 107:18]
            cal_control <= UInt<1>("h00") @[TPU.scala 108:21]
            skip @[TPU.scala 106:23]
          skip @[Conditional.scala 39:67]
    
  module MUX8_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_16 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_17 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_18 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_19 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_20 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_20 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_20 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_21 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_21 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_21 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_22 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_22 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_22 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_23 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_23 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_23 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module TPU_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8][2], flip in_B : SInt<32>[8][4], flip in_tag : UInt<1>[8][4], flip in_cal : UInt<1>, out_A : SInt<32>[8][2], out_B : SInt<32>[8][4], out_tag : UInt<1>[8][4], out_result : SInt<32>[4][2], out_cal : UInt<1>}
    
    io.out_A[0][0] <= io.in_A[0][0] @[TPU.scala 54:12]
    io.out_A[0][1] <= io.in_A[0][1] @[TPU.scala 54:12]
    io.out_A[0][2] <= io.in_A[0][2] @[TPU.scala 54:12]
    io.out_A[0][3] <= io.in_A[0][3] @[TPU.scala 54:12]
    io.out_A[0][4] <= io.in_A[0][4] @[TPU.scala 54:12]
    io.out_A[0][5] <= io.in_A[0][5] @[TPU.scala 54:12]
    io.out_A[0][6] <= io.in_A[0][6] @[TPU.scala 54:12]
    io.out_A[0][7] <= io.in_A[0][7] @[TPU.scala 54:12]
    io.out_A[1][0] <= io.in_A[1][0] @[TPU.scala 54:12]
    io.out_A[1][1] <= io.in_A[1][1] @[TPU.scala 54:12]
    io.out_A[1][2] <= io.in_A[1][2] @[TPU.scala 54:12]
    io.out_A[1][3] <= io.in_A[1][3] @[TPU.scala 54:12]
    io.out_A[1][4] <= io.in_A[1][4] @[TPU.scala 54:12]
    io.out_A[1][5] <= io.in_A[1][5] @[TPU.scala 54:12]
    io.out_A[1][6] <= io.in_A[1][6] @[TPU.scala 54:12]
    io.out_A[1][7] <= io.in_A[1][7] @[TPU.scala 54:12]
    io.out_B[0][0] <= io.in_B[0][0] @[TPU.scala 57:12]
    io.out_B[0][1] <= io.in_B[0][1] @[TPU.scala 57:12]
    io.out_B[0][2] <= io.in_B[0][2] @[TPU.scala 57:12]
    io.out_B[0][3] <= io.in_B[0][3] @[TPU.scala 57:12]
    io.out_B[0][4] <= io.in_B[0][4] @[TPU.scala 57:12]
    io.out_B[0][5] <= io.in_B[0][5] @[TPU.scala 57:12]
    io.out_B[0][6] <= io.in_B[0][6] @[TPU.scala 57:12]
    io.out_B[0][7] <= io.in_B[0][7] @[TPU.scala 57:12]
    io.out_B[1][0] <= io.in_B[1][0] @[TPU.scala 57:12]
    io.out_B[1][1] <= io.in_B[1][1] @[TPU.scala 57:12]
    io.out_B[1][2] <= io.in_B[1][2] @[TPU.scala 57:12]
    io.out_B[1][3] <= io.in_B[1][3] @[TPU.scala 57:12]
    io.out_B[1][4] <= io.in_B[1][4] @[TPU.scala 57:12]
    io.out_B[1][5] <= io.in_B[1][5] @[TPU.scala 57:12]
    io.out_B[1][6] <= io.in_B[1][6] @[TPU.scala 57:12]
    io.out_B[1][7] <= io.in_B[1][7] @[TPU.scala 57:12]
    io.out_B[2][0] <= io.in_B[2][0] @[TPU.scala 57:12]
    io.out_B[2][1] <= io.in_B[2][1] @[TPU.scala 57:12]
    io.out_B[2][2] <= io.in_B[2][2] @[TPU.scala 57:12]
    io.out_B[2][3] <= io.in_B[2][3] @[TPU.scala 57:12]
    io.out_B[2][4] <= io.in_B[2][4] @[TPU.scala 57:12]
    io.out_B[2][5] <= io.in_B[2][5] @[TPU.scala 57:12]
    io.out_B[2][6] <= io.in_B[2][6] @[TPU.scala 57:12]
    io.out_B[2][7] <= io.in_B[2][7] @[TPU.scala 57:12]
    io.out_B[3][0] <= io.in_B[3][0] @[TPU.scala 57:12]
    io.out_B[3][1] <= io.in_B[3][1] @[TPU.scala 57:12]
    io.out_B[3][2] <= io.in_B[3][2] @[TPU.scala 57:12]
    io.out_B[3][3] <= io.in_B[3][3] @[TPU.scala 57:12]
    io.out_B[3][4] <= io.in_B[3][4] @[TPU.scala 57:12]
    io.out_B[3][5] <= io.in_B[3][5] @[TPU.scala 57:12]
    io.out_B[3][6] <= io.in_B[3][6] @[TPU.scala 57:12]
    io.out_B[3][7] <= io.in_B[3][7] @[TPU.scala 57:12]
    io.out_tag[0][0] <= io.in_tag[0][0] @[TPU.scala 60:14]
    io.out_tag[0][1] <= io.in_tag[0][1] @[TPU.scala 60:14]
    io.out_tag[0][2] <= io.in_tag[0][2] @[TPU.scala 60:14]
    io.out_tag[0][3] <= io.in_tag[0][3] @[TPU.scala 60:14]
    io.out_tag[0][4] <= io.in_tag[0][4] @[TPU.scala 60:14]
    io.out_tag[0][5] <= io.in_tag[0][5] @[TPU.scala 60:14]
    io.out_tag[0][6] <= io.in_tag[0][6] @[TPU.scala 60:14]
    io.out_tag[0][7] <= io.in_tag[0][7] @[TPU.scala 60:14]
    io.out_tag[1][0] <= io.in_tag[1][0] @[TPU.scala 60:14]
    io.out_tag[1][1] <= io.in_tag[1][1] @[TPU.scala 60:14]
    io.out_tag[1][2] <= io.in_tag[1][2] @[TPU.scala 60:14]
    io.out_tag[1][3] <= io.in_tag[1][3] @[TPU.scala 60:14]
    io.out_tag[1][4] <= io.in_tag[1][4] @[TPU.scala 60:14]
    io.out_tag[1][5] <= io.in_tag[1][5] @[TPU.scala 60:14]
    io.out_tag[1][6] <= io.in_tag[1][6] @[TPU.scala 60:14]
    io.out_tag[1][7] <= io.in_tag[1][7] @[TPU.scala 60:14]
    io.out_tag[2][0] <= io.in_tag[2][0] @[TPU.scala 60:14]
    io.out_tag[2][1] <= io.in_tag[2][1] @[TPU.scala 60:14]
    io.out_tag[2][2] <= io.in_tag[2][2] @[TPU.scala 60:14]
    io.out_tag[2][3] <= io.in_tag[2][3] @[TPU.scala 60:14]
    io.out_tag[2][4] <= io.in_tag[2][4] @[TPU.scala 60:14]
    io.out_tag[2][5] <= io.in_tag[2][5] @[TPU.scala 60:14]
    io.out_tag[2][6] <= io.in_tag[2][6] @[TPU.scala 60:14]
    io.out_tag[2][7] <= io.in_tag[2][7] @[TPU.scala 60:14]
    io.out_tag[3][0] <= io.in_tag[3][0] @[TPU.scala 60:14]
    io.out_tag[3][1] <= io.in_tag[3][1] @[TPU.scala 60:14]
    io.out_tag[3][2] <= io.in_tag[3][2] @[TPU.scala 60:14]
    io.out_tag[3][3] <= io.in_tag[3][3] @[TPU.scala 60:14]
    io.out_tag[3][4] <= io.in_tag[3][4] @[TPU.scala 60:14]
    io.out_tag[3][5] <= io.in_tag[3][5] @[TPU.scala 60:14]
    io.out_tag[3][6] <= io.in_tag[3][6] @[TPU.scala 60:14]
    io.out_tag[3][7] <= io.in_tag[3][7] @[TPU.scala 60:14]
    inst S8DP1 of S8DP1_16 @[TPU.scala 62:39]
    S8DP1.clock <= clock
    S8DP1.reset <= reset
    inst S8DP1_1 of S8DP1_17 @[TPU.scala 62:39]
    S8DP1_1.clock <= clock
    S8DP1_1.reset <= reset
    inst S8DP1_2 of S8DP1_18 @[TPU.scala 62:39]
    S8DP1_2.clock <= clock
    S8DP1_2.reset <= reset
    inst S8DP1_3 of S8DP1_19 @[TPU.scala 62:39]
    S8DP1_3.clock <= clock
    S8DP1_3.reset <= reset
    wire S8DP1_1_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 62:20]
    S8DP1_1_1[0].out_calculate <= S8DP1.io.out_calculate @[TPU.scala 62:20]
    S8DP1.io.in_calculate <= S8DP1_1_1[0].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[0].result <= S8DP1.io.result @[TPU.scala 62:20]
    S8DP1.io.in_tag[0] <= S8DP1_1_1[0].in_tag[0] @[TPU.scala 62:20]
    S8DP1.io.in_tag[1] <= S8DP1_1_1[0].in_tag[1] @[TPU.scala 62:20]
    S8DP1.io.in_tag[2] <= S8DP1_1_1[0].in_tag[2] @[TPU.scala 62:20]
    S8DP1.io.in_tag[3] <= S8DP1_1_1[0].in_tag[3] @[TPU.scala 62:20]
    S8DP1.io.in_tag[4] <= S8DP1_1_1[0].in_tag[4] @[TPU.scala 62:20]
    S8DP1.io.in_tag[5] <= S8DP1_1_1[0].in_tag[5] @[TPU.scala 62:20]
    S8DP1.io.in_tag[6] <= S8DP1_1_1[0].in_tag[6] @[TPU.scala 62:20]
    S8DP1.io.in_tag[7] <= S8DP1_1_1[0].in_tag[7] @[TPU.scala 62:20]
    S8DP1.io.in_B[0] <= S8DP1_1_1[0].in_B[0] @[TPU.scala 62:20]
    S8DP1.io.in_B[1] <= S8DP1_1_1[0].in_B[1] @[TPU.scala 62:20]
    S8DP1.io.in_B[2] <= S8DP1_1_1[0].in_B[2] @[TPU.scala 62:20]
    S8DP1.io.in_B[3] <= S8DP1_1_1[0].in_B[3] @[TPU.scala 62:20]
    S8DP1.io.in_B[4] <= S8DP1_1_1[0].in_B[4] @[TPU.scala 62:20]
    S8DP1.io.in_B[5] <= S8DP1_1_1[0].in_B[5] @[TPU.scala 62:20]
    S8DP1.io.in_B[6] <= S8DP1_1_1[0].in_B[6] @[TPU.scala 62:20]
    S8DP1.io.in_B[7] <= S8DP1_1_1[0].in_B[7] @[TPU.scala 62:20]
    S8DP1.io.in_A[0] <= S8DP1_1_1[0].in_A[0] @[TPU.scala 62:20]
    S8DP1.io.in_A[1] <= S8DP1_1_1[0].in_A[1] @[TPU.scala 62:20]
    S8DP1.io.in_A[2] <= S8DP1_1_1[0].in_A[2] @[TPU.scala 62:20]
    S8DP1.io.in_A[3] <= S8DP1_1_1[0].in_A[3] @[TPU.scala 62:20]
    S8DP1.io.in_A[4] <= S8DP1_1_1[0].in_A[4] @[TPU.scala 62:20]
    S8DP1.io.in_A[5] <= S8DP1_1_1[0].in_A[5] @[TPU.scala 62:20]
    S8DP1.io.in_A[6] <= S8DP1_1_1[0].in_A[6] @[TPU.scala 62:20]
    S8DP1.io.in_A[7] <= S8DP1_1_1[0].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[1].out_calculate <= S8DP1_1.io.out_calculate @[TPU.scala 62:20]
    S8DP1_1.io.in_calculate <= S8DP1_1_1[1].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[1].result <= S8DP1_1.io.result @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[0] <= S8DP1_1_1[1].in_tag[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[1] <= S8DP1_1_1[1].in_tag[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[2] <= S8DP1_1_1[1].in_tag[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[3] <= S8DP1_1_1[1].in_tag[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[4] <= S8DP1_1_1[1].in_tag[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[5] <= S8DP1_1_1[1].in_tag[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[6] <= S8DP1_1_1[1].in_tag[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[7] <= S8DP1_1_1[1].in_tag[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[0] <= S8DP1_1_1[1].in_B[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[1] <= S8DP1_1_1[1].in_B[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[2] <= S8DP1_1_1[1].in_B[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[3] <= S8DP1_1_1[1].in_B[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[4] <= S8DP1_1_1[1].in_B[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[5] <= S8DP1_1_1[1].in_B[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[6] <= S8DP1_1_1[1].in_B[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[7] <= S8DP1_1_1[1].in_B[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[0] <= S8DP1_1_1[1].in_A[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[1] <= S8DP1_1_1[1].in_A[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[2] <= S8DP1_1_1[1].in_A[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[3] <= S8DP1_1_1[1].in_A[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[4] <= S8DP1_1_1[1].in_A[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[5] <= S8DP1_1_1[1].in_A[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[6] <= S8DP1_1_1[1].in_A[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[7] <= S8DP1_1_1[1].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[2].out_calculate <= S8DP1_2.io.out_calculate @[TPU.scala 62:20]
    S8DP1_2.io.in_calculate <= S8DP1_1_1[2].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[2].result <= S8DP1_2.io.result @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[0] <= S8DP1_1_1[2].in_tag[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[1] <= S8DP1_1_1[2].in_tag[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[2] <= S8DP1_1_1[2].in_tag[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[3] <= S8DP1_1_1[2].in_tag[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[4] <= S8DP1_1_1[2].in_tag[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[5] <= S8DP1_1_1[2].in_tag[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[6] <= S8DP1_1_1[2].in_tag[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[7] <= S8DP1_1_1[2].in_tag[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[0] <= S8DP1_1_1[2].in_B[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[1] <= S8DP1_1_1[2].in_B[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[2] <= S8DP1_1_1[2].in_B[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[3] <= S8DP1_1_1[2].in_B[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[4] <= S8DP1_1_1[2].in_B[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[5] <= S8DP1_1_1[2].in_B[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[6] <= S8DP1_1_1[2].in_B[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[7] <= S8DP1_1_1[2].in_B[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[0] <= S8DP1_1_1[2].in_A[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[1] <= S8DP1_1_1[2].in_A[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[2] <= S8DP1_1_1[2].in_A[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[3] <= S8DP1_1_1[2].in_A[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[4] <= S8DP1_1_1[2].in_A[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[5] <= S8DP1_1_1[2].in_A[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[6] <= S8DP1_1_1[2].in_A[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[7] <= S8DP1_1_1[2].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[3].out_calculate <= S8DP1_3.io.out_calculate @[TPU.scala 62:20]
    S8DP1_3.io.in_calculate <= S8DP1_1_1[3].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[3].result <= S8DP1_3.io.result @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[0] <= S8DP1_1_1[3].in_tag[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[1] <= S8DP1_1_1[3].in_tag[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[2] <= S8DP1_1_1[3].in_tag[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[3] <= S8DP1_1_1[3].in_tag[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[4] <= S8DP1_1_1[3].in_tag[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[5] <= S8DP1_1_1[3].in_tag[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[6] <= S8DP1_1_1[3].in_tag[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[7] <= S8DP1_1_1[3].in_tag[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[0] <= S8DP1_1_1[3].in_B[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[1] <= S8DP1_1_1[3].in_B[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[2] <= S8DP1_1_1[3].in_B[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[3] <= S8DP1_1_1[3].in_B[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[4] <= S8DP1_1_1[3].in_B[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[5] <= S8DP1_1_1[3].in_B[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[6] <= S8DP1_1_1[3].in_B[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[7] <= S8DP1_1_1[3].in_B[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[0] <= S8DP1_1_1[3].in_A[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[1] <= S8DP1_1_1[3].in_A[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[2] <= S8DP1_1_1[3].in_A[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[3] <= S8DP1_1_1[3].in_A[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[4] <= S8DP1_1_1[3].in_A[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[5] <= S8DP1_1_1[3].in_A[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[6] <= S8DP1_1_1[3].in_A[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[7] <= S8DP1_1_1[3].in_A[7] @[TPU.scala 62:20]
    inst S8DP1_4 of S8DP1_20 @[TPU.scala 63:39]
    S8DP1_4.clock <= clock
    S8DP1_4.reset <= reset
    inst S8DP1_5 of S8DP1_21 @[TPU.scala 63:39]
    S8DP1_5.clock <= clock
    S8DP1_5.reset <= reset
    inst S8DP1_6 of S8DP1_22 @[TPU.scala 63:39]
    S8DP1_6.clock <= clock
    S8DP1_6.reset <= reset
    inst S8DP1_7 of S8DP1_23 @[TPU.scala 63:39]
    S8DP1_7.clock <= clock
    S8DP1_7.reset <= reset
    wire S8DP1_2_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 63:20]
    S8DP1_2_1[0].out_calculate <= S8DP1_4.io.out_calculate @[TPU.scala 63:20]
    S8DP1_4.io.in_calculate <= S8DP1_2_1[0].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[0].result <= S8DP1_4.io.result @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[0] <= S8DP1_2_1[0].in_tag[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[1] <= S8DP1_2_1[0].in_tag[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[2] <= S8DP1_2_1[0].in_tag[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[3] <= S8DP1_2_1[0].in_tag[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[4] <= S8DP1_2_1[0].in_tag[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[5] <= S8DP1_2_1[0].in_tag[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[6] <= S8DP1_2_1[0].in_tag[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[7] <= S8DP1_2_1[0].in_tag[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[0] <= S8DP1_2_1[0].in_B[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[1] <= S8DP1_2_1[0].in_B[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[2] <= S8DP1_2_1[0].in_B[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[3] <= S8DP1_2_1[0].in_B[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[4] <= S8DP1_2_1[0].in_B[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[5] <= S8DP1_2_1[0].in_B[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[6] <= S8DP1_2_1[0].in_B[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[7] <= S8DP1_2_1[0].in_B[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[0] <= S8DP1_2_1[0].in_A[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[1] <= S8DP1_2_1[0].in_A[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[2] <= S8DP1_2_1[0].in_A[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[3] <= S8DP1_2_1[0].in_A[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[4] <= S8DP1_2_1[0].in_A[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[5] <= S8DP1_2_1[0].in_A[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[6] <= S8DP1_2_1[0].in_A[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[7] <= S8DP1_2_1[0].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[1].out_calculate <= S8DP1_5.io.out_calculate @[TPU.scala 63:20]
    S8DP1_5.io.in_calculate <= S8DP1_2_1[1].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[1].result <= S8DP1_5.io.result @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[0] <= S8DP1_2_1[1].in_tag[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[1] <= S8DP1_2_1[1].in_tag[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[2] <= S8DP1_2_1[1].in_tag[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[3] <= S8DP1_2_1[1].in_tag[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[4] <= S8DP1_2_1[1].in_tag[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[5] <= S8DP1_2_1[1].in_tag[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[6] <= S8DP1_2_1[1].in_tag[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[7] <= S8DP1_2_1[1].in_tag[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[0] <= S8DP1_2_1[1].in_B[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[1] <= S8DP1_2_1[1].in_B[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[2] <= S8DP1_2_1[1].in_B[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[3] <= S8DP1_2_1[1].in_B[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[4] <= S8DP1_2_1[1].in_B[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[5] <= S8DP1_2_1[1].in_B[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[6] <= S8DP1_2_1[1].in_B[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[7] <= S8DP1_2_1[1].in_B[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[0] <= S8DP1_2_1[1].in_A[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[1] <= S8DP1_2_1[1].in_A[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[2] <= S8DP1_2_1[1].in_A[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[3] <= S8DP1_2_1[1].in_A[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[4] <= S8DP1_2_1[1].in_A[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[5] <= S8DP1_2_1[1].in_A[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[6] <= S8DP1_2_1[1].in_A[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[7] <= S8DP1_2_1[1].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[2].out_calculate <= S8DP1_6.io.out_calculate @[TPU.scala 63:20]
    S8DP1_6.io.in_calculate <= S8DP1_2_1[2].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[2].result <= S8DP1_6.io.result @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[0] <= S8DP1_2_1[2].in_tag[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[1] <= S8DP1_2_1[2].in_tag[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[2] <= S8DP1_2_1[2].in_tag[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[3] <= S8DP1_2_1[2].in_tag[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[4] <= S8DP1_2_1[2].in_tag[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[5] <= S8DP1_2_1[2].in_tag[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[6] <= S8DP1_2_1[2].in_tag[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[7] <= S8DP1_2_1[2].in_tag[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[0] <= S8DP1_2_1[2].in_B[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[1] <= S8DP1_2_1[2].in_B[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[2] <= S8DP1_2_1[2].in_B[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[3] <= S8DP1_2_1[2].in_B[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[4] <= S8DP1_2_1[2].in_B[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[5] <= S8DP1_2_1[2].in_B[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[6] <= S8DP1_2_1[2].in_B[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[7] <= S8DP1_2_1[2].in_B[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[0] <= S8DP1_2_1[2].in_A[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[1] <= S8DP1_2_1[2].in_A[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[2] <= S8DP1_2_1[2].in_A[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[3] <= S8DP1_2_1[2].in_A[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[4] <= S8DP1_2_1[2].in_A[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[5] <= S8DP1_2_1[2].in_A[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[6] <= S8DP1_2_1[2].in_A[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[7] <= S8DP1_2_1[2].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[3].out_calculate <= S8DP1_7.io.out_calculate @[TPU.scala 63:20]
    S8DP1_7.io.in_calculate <= S8DP1_2_1[3].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[3].result <= S8DP1_7.io.result @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[0] <= S8DP1_2_1[3].in_tag[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[1] <= S8DP1_2_1[3].in_tag[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[2] <= S8DP1_2_1[3].in_tag[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[3] <= S8DP1_2_1[3].in_tag[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[4] <= S8DP1_2_1[3].in_tag[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[5] <= S8DP1_2_1[3].in_tag[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[6] <= S8DP1_2_1[3].in_tag[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[7] <= S8DP1_2_1[3].in_tag[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[0] <= S8DP1_2_1[3].in_B[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[1] <= S8DP1_2_1[3].in_B[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[2] <= S8DP1_2_1[3].in_B[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[3] <= S8DP1_2_1[3].in_B[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[4] <= S8DP1_2_1[3].in_B[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[5] <= S8DP1_2_1[3].in_B[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[6] <= S8DP1_2_1[3].in_B[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[7] <= S8DP1_2_1[3].in_B[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[0] <= S8DP1_2_1[3].in_A[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[1] <= S8DP1_2_1[3].in_A[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[2] <= S8DP1_2_1[3].in_A[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[3] <= S8DP1_2_1[3].in_A[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[4] <= S8DP1_2_1[3].in_A[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[5] <= S8DP1_2_1[3].in_A[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[6] <= S8DP1_2_1[3].in_A[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[7] <= S8DP1_2_1[3].in_A[7] @[TPU.scala 63:20]
    reg cal_state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 64:26]
    reg cal_control : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 65:28]
    S8DP1_1_1[0].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[0].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 71:23]
    S8DP1_2_1[0].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[0].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 76:23]
    S8DP1_1_1[1].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[1].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 71:23]
    S8DP1_2_1[1].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[1].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 76:23]
    S8DP1_1_1[2].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[2].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 71:23]
    S8DP1_2_1[2].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[2].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 76:23]
    S8DP1_1_1[3].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[3].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 71:23]
    S8DP1_2_1[3].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[3].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 76:23]
    node _T_3683 = and(S8DP1_1_1[0].out_calculate, S8DP1_1_1[1].out_calculate) @[TPU.scala 78:42]
    node _T_3684 = and(_T_3683, S8DP1_1_1[2].out_calculate) @[TPU.scala 78:70]
    node _T_3685 = and(_T_3684, S8DP1_1_1[3].out_calculate) @[TPU.scala 78:98]
    node _T_3686 = and(_T_3685, S8DP1_2_1[0].out_calculate) @[TPU.scala 79:5]
    node _T_3687 = and(_T_3686, S8DP1_2_1[1].out_calculate) @[TPU.scala 79:33]
    node _T_3688 = and(_T_3687, S8DP1_2_1[2].out_calculate) @[TPU.scala 79:61]
    node _T_3689 = and(_T_3688, S8DP1_2_1[3].out_calculate) @[TPU.scala 79:89]
    cal_state <= _T_3689 @[TPU.scala 78:13]
    io.out_result[0][0] <= S8DP1_1_1[0].result @[TPU.scala 83:25]
    io.out_result[1][0] <= S8DP1_2_1[0].result @[TPU.scala 84:25]
    io.out_result[0][1] <= S8DP1_1_1[1].result @[TPU.scala 83:25]
    io.out_result[1][1] <= S8DP1_2_1[1].result @[TPU.scala 84:25]
    io.out_result[0][2] <= S8DP1_1_1[2].result @[TPU.scala 83:25]
    io.out_result[1][2] <= S8DP1_2_1[2].result @[TPU.scala 84:25]
    io.out_result[0][3] <= S8DP1_1_1[3].result @[TPU.scala 83:25]
    io.out_result[1][3] <= S8DP1_2_1[3].result @[TPU.scala 84:25]
    io.out_cal <= cal_state @[TPU.scala 86:14]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h02"))) @[TPU.scala 90:25]
    node _T_3691 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
    when _T_3691 : @[Conditional.scala 40:58]
      reg _T_3693 : UInt<1>, clock @[TPU.scala 93:33]
      _T_3693 <= io.in_cal @[TPU.scala 93:33]
      node _T_3695 = eq(_T_3693, UInt<1>("h00")) @[TPU.scala 93:25]
      node _T_3696 = and(io.in_cal, _T_3695) @[TPU.scala 93:23]
      when _T_3696 : @[TPU.scala 93:46]
        stateReg <= UInt<2>("h00") @[TPU.scala 94:18]
        skip @[TPU.scala 93:46]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3697 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
      when _T_3697 : @[Conditional.scala 39:67]
        stateReg <= UInt<2>("h01") @[TPU.scala 99:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_3698 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
        when _T_3698 : @[Conditional.scala 39:67]
          cal_control <= UInt<1>("h01") @[TPU.scala 103:21]
          when cal_state : @[TPU.scala 106:23]
            stateReg <= UInt<2>("h02") @[TPU.scala 107:18]
            cal_control <= UInt<1>("h00") @[TPU.scala 108:21]
            skip @[TPU.scala 106:23]
          skip @[Conditional.scala 39:67]
    
  module MUX8_24 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_24 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_24 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_25 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_25 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_25 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_26 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_26 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_26 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_27 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_27 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_27 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_28 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_28 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_28 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_29 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_29 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_29 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_30 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_30 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_30 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module MUX8_31 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_tag : UInt<1>[8], choice : UInt<32>}
    
    io.choice <= UInt<1>("h00") @[MUX8.scala 42:13]
    when io.in_tag[0] : @[MUX8.scala 44:21]
      io.choice <= UInt<1>("h00") @[MUX8.scala 45:15]
      skip @[MUX8.scala 44:21]
    else : @[MUX8.scala 46:27]
      when io.in_tag[1] : @[MUX8.scala 46:27]
        io.choice <= UInt<1>("h01") @[MUX8.scala 47:15]
        skip @[MUX8.scala 46:27]
      else : @[MUX8.scala 48:27]
        when io.in_tag[2] : @[MUX8.scala 48:27]
          io.choice <= UInt<2>("h02") @[MUX8.scala 49:15]
          skip @[MUX8.scala 48:27]
        else : @[MUX8.scala 50:27]
          when io.in_tag[3] : @[MUX8.scala 50:27]
            io.choice <= UInt<2>("h03") @[MUX8.scala 51:15]
            skip @[MUX8.scala 50:27]
          else : @[MUX8.scala 52:27]
            when io.in_tag[4] : @[MUX8.scala 52:27]
              io.choice <= UInt<3>("h04") @[MUX8.scala 53:15]
              skip @[MUX8.scala 52:27]
            else : @[MUX8.scala 54:27]
              when io.in_tag[5] : @[MUX8.scala 54:27]
                io.choice <= UInt<3>("h05") @[MUX8.scala 55:15]
                skip @[MUX8.scala 54:27]
              else : @[MUX8.scala 56:27]
                when io.in_tag[6] : @[MUX8.scala 56:27]
                  io.choice <= UInt<3>("h06") @[MUX8.scala 57:15]
                  skip @[MUX8.scala 56:27]
                else : @[MUX8.scala 58:27]
                  when io.in_tag[7] : @[MUX8.scala 58:27]
                    io.choice <= UInt<3>("h07") @[MUX8.scala 59:15]
                    skip @[MUX8.scala 58:27]
                  else : @[MUX8.scala 60:14]
                    io.choice <= UInt<1>("h00") @[MUX8.scala 61:15]
                    skip @[MUX8.scala 60:14]
    
  module S8DP1_31 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}
    
    wire _T_100 : UInt<1>[8] @[S8DP1.scala 42:24]
    _T_100[0] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[1] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[2] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[3] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[4] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[5] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[6] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    _T_100[7] <= UInt<1>("h00") @[S8DP1.scala 42:24]
    reg tag : UInt<1>[8], clock with : (reset => (reset, _T_100)) @[S8DP1.scala 42:20]
    wire _T_170 : UInt<3>[8] @[S8DP1.scala 43:26]
    _T_170[0] <= UInt<1>("h00") @[S8DP1.scala 43:26]
    _T_170[1] <= UInt<1>("h01") @[S8DP1.scala 43:26]
    _T_170[2] <= UInt<2>("h02") @[S8DP1.scala 43:26]
    _T_170[3] <= UInt<2>("h03") @[S8DP1.scala 43:26]
    _T_170[4] <= UInt<3>("h04") @[S8DP1.scala 43:26]
    _T_170[5] <= UInt<3>("h05") @[S8DP1.scala 43:26]
    _T_170[6] <= UInt<3>("h06") @[S8DP1.scala 43:26]
    _T_170[7] <= UInt<3>("h07") @[S8DP1.scala 43:26]
    reg index : UInt<3>[8], clock with : (reset => (reset, _T_170)) @[S8DP1.scala 43:22]
    reg acc : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 44:20]
    io.result <= acc @[S8DP1.scala 45:13]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[S8DP1.scala 46:20]
    io.out_calculate <= cal @[S8DP1.scala 47:20]
    inst mux of MUX8_31 @[S8DP1.scala 49:19]
    mux.clock <= clock
    mux.reset <= reset
    mux.io.in_tag[0] <= tag[0] @[S8DP1.scala 50:17]
    mux.io.in_tag[1] <= tag[1] @[S8DP1.scala 50:17]
    mux.io.in_tag[2] <= tag[2] @[S8DP1.scala 50:17]
    mux.io.in_tag[3] <= tag[3] @[S8DP1.scala 50:17]
    mux.io.in_tag[4] <= tag[4] @[S8DP1.scala 50:17]
    mux.io.in_tag[5] <= tag[5] @[S8DP1.scala 50:17]
    mux.io.in_tag[6] <= tag[6] @[S8DP1.scala 50:17]
    mux.io.in_tag[7] <= tag[7] @[S8DP1.scala 50:17]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[S8DP1.scala 54:25]
    reg acc_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[S8DP1.scala 56:25]
    node _T_236 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_236 : @[Conditional.scala 40:58]
      node _T_238 = bits(mux.io.choice, 2, 0)
      node _T_240 = bits(mux.io.choice, 2, 0)
      node _T_241 = mul(io.in_A[_T_238], io.in_B[_T_240]) @[S8DP1.scala 60:48]
      node _T_242 = add(acc, _T_241) @[S8DP1.scala 60:23]
      node _T_243 = tail(_T_242, 1) @[S8DP1.scala 60:23]
      node _T_244 = asSInt(_T_243) @[S8DP1.scala 60:23]
      acc_temp <= _T_244 @[S8DP1.scala 60:16]
      stateReg <= UInt<2>("h01") @[S8DP1.scala 61:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_245 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_245 : @[Conditional.scala 39:67]
        acc <= acc_temp @[S8DP1.scala 64:11]
        node _T_249 = bits(mux.io.choice, 2, 0)
        tag[_T_249] <= UInt<1>("h00") @[S8DP1.scala 65:26]
        stateReg <= UInt<2>("h02") @[S8DP1.scala 66:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_251 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_251 : @[Conditional.scala 39:67]
          node _T_253 = eq(tag[0], UInt<1>("h00")) @[S8DP1.scala 69:15]
          node _T_255 = eq(tag[1], UInt<1>("h00")) @[S8DP1.scala 69:26]
          node _T_256 = and(_T_253, _T_255) @[S8DP1.scala 69:23]
          node _T_258 = eq(tag[2], UInt<1>("h00")) @[S8DP1.scala 69:39]
          node _T_260 = eq(tag[3], UInt<1>("h00")) @[S8DP1.scala 69:50]
          node _T_261 = and(_T_258, _T_260) @[S8DP1.scala 69:47]
          node _T_262 = and(_T_256, _T_261) @[S8DP1.scala 69:35]
          node _T_264 = eq(tag[4], UInt<1>("h00")) @[S8DP1.scala 70:11]
          node _T_266 = eq(tag[5], UInt<1>("h00")) @[S8DP1.scala 70:22]
          node _T_267 = and(_T_264, _T_266) @[S8DP1.scala 70:19]
          node _T_269 = eq(tag[6], UInt<1>("h00")) @[S8DP1.scala 70:35]
          node _T_271 = eq(tag[7], UInt<1>("h00")) @[S8DP1.scala 70:46]
          node _T_272 = and(_T_269, _T_271) @[S8DP1.scala 70:43]
          node _T_273 = and(_T_267, _T_272) @[S8DP1.scala 70:31]
          node _T_274 = and(_T_262, _T_273) @[S8DP1.scala 69:60]
          when _T_274 : @[S8DP1.scala 70:57]
            stateReg <= UInt<2>("h03") @[S8DP1.scala 71:18]
            cal <= UInt<1>("h01") @[S8DP1.scala 72:13]
            skip @[S8DP1.scala 70:57]
          else : @[S8DP1.scala 73:18]
            stateReg <= UInt<2>("h00") @[S8DP1.scala 74:18]
            skip @[S8DP1.scala 73:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_276 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_276 : @[Conditional.scala 39:67]
            tag[0] <= io.in_tag[0] @[S8DP1.scala 78:11]
            tag[1] <= io.in_tag[1] @[S8DP1.scala 78:11]
            tag[2] <= io.in_tag[2] @[S8DP1.scala 78:11]
            tag[3] <= io.in_tag[3] @[S8DP1.scala 78:11]
            tag[4] <= io.in_tag[4] @[S8DP1.scala 78:11]
            tag[5] <= io.in_tag[5] @[S8DP1.scala 78:11]
            tag[6] <= io.in_tag[6] @[S8DP1.scala 78:11]
            tag[7] <= io.in_tag[7] @[S8DP1.scala 78:11]
            reg _T_278 : UInt<1>, clock @[S8DP1.scala 81:40]
            _T_278 <= io.in_calculate @[S8DP1.scala 81:40]
            node _T_280 = eq(_T_278, UInt<1>("h00")) @[S8DP1.scala 81:32]
            node _T_281 = and(io.in_calculate, _T_280) @[S8DP1.scala 81:30]
            node _T_282 = or(tag[0], tag[1]) @[S8DP1.scala 81:70]
            node _T_283 = or(_T_282, tag[2]) @[S8DP1.scala 81:80]
            node _T_284 = or(_T_283, tag[3]) @[S8DP1.scala 81:90]
            node _T_285 = or(_T_284, tag[4]) @[S8DP1.scala 81:100]
            node _T_286 = or(_T_285, tag[5]) @[S8DP1.scala 82:16]
            node _T_287 = or(_T_286, tag[6]) @[S8DP1.scala 82:26]
            node _T_288 = or(_T_287, tag[7]) @[S8DP1.scala 82:36]
            node _T_289 = and(_T_281, _T_288) @[S8DP1.scala 81:59]
            when _T_289 : @[S8DP1.scala 83:7]
              stateReg <= UInt<2>("h00") @[S8DP1.scala 84:18]
              cal <= UInt<1>("h00") @[S8DP1.scala 85:13]
              skip @[S8DP1.scala 83:7]
            skip @[Conditional.scala 39:67]
    
  module TPU_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[8][2], flip in_B : SInt<32>[8][4], flip in_tag : UInt<1>[8][4], flip in_cal : UInt<1>, out_A : SInt<32>[8][2], out_B : SInt<32>[8][4], out_tag : UInt<1>[8][4], out_result : SInt<32>[4][2], out_cal : UInt<1>}
    
    io.out_A[0][0] <= io.in_A[0][0] @[TPU.scala 54:12]
    io.out_A[0][1] <= io.in_A[0][1] @[TPU.scala 54:12]
    io.out_A[0][2] <= io.in_A[0][2] @[TPU.scala 54:12]
    io.out_A[0][3] <= io.in_A[0][3] @[TPU.scala 54:12]
    io.out_A[0][4] <= io.in_A[0][4] @[TPU.scala 54:12]
    io.out_A[0][5] <= io.in_A[0][5] @[TPU.scala 54:12]
    io.out_A[0][6] <= io.in_A[0][6] @[TPU.scala 54:12]
    io.out_A[0][7] <= io.in_A[0][7] @[TPU.scala 54:12]
    io.out_A[1][0] <= io.in_A[1][0] @[TPU.scala 54:12]
    io.out_A[1][1] <= io.in_A[1][1] @[TPU.scala 54:12]
    io.out_A[1][2] <= io.in_A[1][2] @[TPU.scala 54:12]
    io.out_A[1][3] <= io.in_A[1][3] @[TPU.scala 54:12]
    io.out_A[1][4] <= io.in_A[1][4] @[TPU.scala 54:12]
    io.out_A[1][5] <= io.in_A[1][5] @[TPU.scala 54:12]
    io.out_A[1][6] <= io.in_A[1][6] @[TPU.scala 54:12]
    io.out_A[1][7] <= io.in_A[1][7] @[TPU.scala 54:12]
    io.out_B[0][0] <= io.in_B[0][0] @[TPU.scala 57:12]
    io.out_B[0][1] <= io.in_B[0][1] @[TPU.scala 57:12]
    io.out_B[0][2] <= io.in_B[0][2] @[TPU.scala 57:12]
    io.out_B[0][3] <= io.in_B[0][3] @[TPU.scala 57:12]
    io.out_B[0][4] <= io.in_B[0][4] @[TPU.scala 57:12]
    io.out_B[0][5] <= io.in_B[0][5] @[TPU.scala 57:12]
    io.out_B[0][6] <= io.in_B[0][6] @[TPU.scala 57:12]
    io.out_B[0][7] <= io.in_B[0][7] @[TPU.scala 57:12]
    io.out_B[1][0] <= io.in_B[1][0] @[TPU.scala 57:12]
    io.out_B[1][1] <= io.in_B[1][1] @[TPU.scala 57:12]
    io.out_B[1][2] <= io.in_B[1][2] @[TPU.scala 57:12]
    io.out_B[1][3] <= io.in_B[1][3] @[TPU.scala 57:12]
    io.out_B[1][4] <= io.in_B[1][4] @[TPU.scala 57:12]
    io.out_B[1][5] <= io.in_B[1][5] @[TPU.scala 57:12]
    io.out_B[1][6] <= io.in_B[1][6] @[TPU.scala 57:12]
    io.out_B[1][7] <= io.in_B[1][7] @[TPU.scala 57:12]
    io.out_B[2][0] <= io.in_B[2][0] @[TPU.scala 57:12]
    io.out_B[2][1] <= io.in_B[2][1] @[TPU.scala 57:12]
    io.out_B[2][2] <= io.in_B[2][2] @[TPU.scala 57:12]
    io.out_B[2][3] <= io.in_B[2][3] @[TPU.scala 57:12]
    io.out_B[2][4] <= io.in_B[2][4] @[TPU.scala 57:12]
    io.out_B[2][5] <= io.in_B[2][5] @[TPU.scala 57:12]
    io.out_B[2][6] <= io.in_B[2][6] @[TPU.scala 57:12]
    io.out_B[2][7] <= io.in_B[2][7] @[TPU.scala 57:12]
    io.out_B[3][0] <= io.in_B[3][0] @[TPU.scala 57:12]
    io.out_B[3][1] <= io.in_B[3][1] @[TPU.scala 57:12]
    io.out_B[3][2] <= io.in_B[3][2] @[TPU.scala 57:12]
    io.out_B[3][3] <= io.in_B[3][3] @[TPU.scala 57:12]
    io.out_B[3][4] <= io.in_B[3][4] @[TPU.scala 57:12]
    io.out_B[3][5] <= io.in_B[3][5] @[TPU.scala 57:12]
    io.out_B[3][6] <= io.in_B[3][6] @[TPU.scala 57:12]
    io.out_B[3][7] <= io.in_B[3][7] @[TPU.scala 57:12]
    io.out_tag[0][0] <= io.in_tag[0][0] @[TPU.scala 60:14]
    io.out_tag[0][1] <= io.in_tag[0][1] @[TPU.scala 60:14]
    io.out_tag[0][2] <= io.in_tag[0][2] @[TPU.scala 60:14]
    io.out_tag[0][3] <= io.in_tag[0][3] @[TPU.scala 60:14]
    io.out_tag[0][4] <= io.in_tag[0][4] @[TPU.scala 60:14]
    io.out_tag[0][5] <= io.in_tag[0][5] @[TPU.scala 60:14]
    io.out_tag[0][6] <= io.in_tag[0][6] @[TPU.scala 60:14]
    io.out_tag[0][7] <= io.in_tag[0][7] @[TPU.scala 60:14]
    io.out_tag[1][0] <= io.in_tag[1][0] @[TPU.scala 60:14]
    io.out_tag[1][1] <= io.in_tag[1][1] @[TPU.scala 60:14]
    io.out_tag[1][2] <= io.in_tag[1][2] @[TPU.scala 60:14]
    io.out_tag[1][3] <= io.in_tag[1][3] @[TPU.scala 60:14]
    io.out_tag[1][4] <= io.in_tag[1][4] @[TPU.scala 60:14]
    io.out_tag[1][5] <= io.in_tag[1][5] @[TPU.scala 60:14]
    io.out_tag[1][6] <= io.in_tag[1][6] @[TPU.scala 60:14]
    io.out_tag[1][7] <= io.in_tag[1][7] @[TPU.scala 60:14]
    io.out_tag[2][0] <= io.in_tag[2][0] @[TPU.scala 60:14]
    io.out_tag[2][1] <= io.in_tag[2][1] @[TPU.scala 60:14]
    io.out_tag[2][2] <= io.in_tag[2][2] @[TPU.scala 60:14]
    io.out_tag[2][3] <= io.in_tag[2][3] @[TPU.scala 60:14]
    io.out_tag[2][4] <= io.in_tag[2][4] @[TPU.scala 60:14]
    io.out_tag[2][5] <= io.in_tag[2][5] @[TPU.scala 60:14]
    io.out_tag[2][6] <= io.in_tag[2][6] @[TPU.scala 60:14]
    io.out_tag[2][7] <= io.in_tag[2][7] @[TPU.scala 60:14]
    io.out_tag[3][0] <= io.in_tag[3][0] @[TPU.scala 60:14]
    io.out_tag[3][1] <= io.in_tag[3][1] @[TPU.scala 60:14]
    io.out_tag[3][2] <= io.in_tag[3][2] @[TPU.scala 60:14]
    io.out_tag[3][3] <= io.in_tag[3][3] @[TPU.scala 60:14]
    io.out_tag[3][4] <= io.in_tag[3][4] @[TPU.scala 60:14]
    io.out_tag[3][5] <= io.in_tag[3][5] @[TPU.scala 60:14]
    io.out_tag[3][6] <= io.in_tag[3][6] @[TPU.scala 60:14]
    io.out_tag[3][7] <= io.in_tag[3][7] @[TPU.scala 60:14]
    inst S8DP1 of S8DP1_24 @[TPU.scala 62:39]
    S8DP1.clock <= clock
    S8DP1.reset <= reset
    inst S8DP1_1 of S8DP1_25 @[TPU.scala 62:39]
    S8DP1_1.clock <= clock
    S8DP1_1.reset <= reset
    inst S8DP1_2 of S8DP1_26 @[TPU.scala 62:39]
    S8DP1_2.clock <= clock
    S8DP1_2.reset <= reset
    inst S8DP1_3 of S8DP1_27 @[TPU.scala 62:39]
    S8DP1_3.clock <= clock
    S8DP1_3.reset <= reset
    wire S8DP1_1_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 62:20]
    S8DP1_1_1[0].out_calculate <= S8DP1.io.out_calculate @[TPU.scala 62:20]
    S8DP1.io.in_calculate <= S8DP1_1_1[0].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[0].result <= S8DP1.io.result @[TPU.scala 62:20]
    S8DP1.io.in_tag[0] <= S8DP1_1_1[0].in_tag[0] @[TPU.scala 62:20]
    S8DP1.io.in_tag[1] <= S8DP1_1_1[0].in_tag[1] @[TPU.scala 62:20]
    S8DP1.io.in_tag[2] <= S8DP1_1_1[0].in_tag[2] @[TPU.scala 62:20]
    S8DP1.io.in_tag[3] <= S8DP1_1_1[0].in_tag[3] @[TPU.scala 62:20]
    S8DP1.io.in_tag[4] <= S8DP1_1_1[0].in_tag[4] @[TPU.scala 62:20]
    S8DP1.io.in_tag[5] <= S8DP1_1_1[0].in_tag[5] @[TPU.scala 62:20]
    S8DP1.io.in_tag[6] <= S8DP1_1_1[0].in_tag[6] @[TPU.scala 62:20]
    S8DP1.io.in_tag[7] <= S8DP1_1_1[0].in_tag[7] @[TPU.scala 62:20]
    S8DP1.io.in_B[0] <= S8DP1_1_1[0].in_B[0] @[TPU.scala 62:20]
    S8DP1.io.in_B[1] <= S8DP1_1_1[0].in_B[1] @[TPU.scala 62:20]
    S8DP1.io.in_B[2] <= S8DP1_1_1[0].in_B[2] @[TPU.scala 62:20]
    S8DP1.io.in_B[3] <= S8DP1_1_1[0].in_B[3] @[TPU.scala 62:20]
    S8DP1.io.in_B[4] <= S8DP1_1_1[0].in_B[4] @[TPU.scala 62:20]
    S8DP1.io.in_B[5] <= S8DP1_1_1[0].in_B[5] @[TPU.scala 62:20]
    S8DP1.io.in_B[6] <= S8DP1_1_1[0].in_B[6] @[TPU.scala 62:20]
    S8DP1.io.in_B[7] <= S8DP1_1_1[0].in_B[7] @[TPU.scala 62:20]
    S8DP1.io.in_A[0] <= S8DP1_1_1[0].in_A[0] @[TPU.scala 62:20]
    S8DP1.io.in_A[1] <= S8DP1_1_1[0].in_A[1] @[TPU.scala 62:20]
    S8DP1.io.in_A[2] <= S8DP1_1_1[0].in_A[2] @[TPU.scala 62:20]
    S8DP1.io.in_A[3] <= S8DP1_1_1[0].in_A[3] @[TPU.scala 62:20]
    S8DP1.io.in_A[4] <= S8DP1_1_1[0].in_A[4] @[TPU.scala 62:20]
    S8DP1.io.in_A[5] <= S8DP1_1_1[0].in_A[5] @[TPU.scala 62:20]
    S8DP1.io.in_A[6] <= S8DP1_1_1[0].in_A[6] @[TPU.scala 62:20]
    S8DP1.io.in_A[7] <= S8DP1_1_1[0].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[1].out_calculate <= S8DP1_1.io.out_calculate @[TPU.scala 62:20]
    S8DP1_1.io.in_calculate <= S8DP1_1_1[1].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[1].result <= S8DP1_1.io.result @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[0] <= S8DP1_1_1[1].in_tag[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[1] <= S8DP1_1_1[1].in_tag[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[2] <= S8DP1_1_1[1].in_tag[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[3] <= S8DP1_1_1[1].in_tag[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[4] <= S8DP1_1_1[1].in_tag[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[5] <= S8DP1_1_1[1].in_tag[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[6] <= S8DP1_1_1[1].in_tag[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_tag[7] <= S8DP1_1_1[1].in_tag[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[0] <= S8DP1_1_1[1].in_B[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[1] <= S8DP1_1_1[1].in_B[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[2] <= S8DP1_1_1[1].in_B[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[3] <= S8DP1_1_1[1].in_B[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[4] <= S8DP1_1_1[1].in_B[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[5] <= S8DP1_1_1[1].in_B[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[6] <= S8DP1_1_1[1].in_B[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_B[7] <= S8DP1_1_1[1].in_B[7] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[0] <= S8DP1_1_1[1].in_A[0] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[1] <= S8DP1_1_1[1].in_A[1] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[2] <= S8DP1_1_1[1].in_A[2] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[3] <= S8DP1_1_1[1].in_A[3] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[4] <= S8DP1_1_1[1].in_A[4] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[5] <= S8DP1_1_1[1].in_A[5] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[6] <= S8DP1_1_1[1].in_A[6] @[TPU.scala 62:20]
    S8DP1_1.io.in_A[7] <= S8DP1_1_1[1].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[2].out_calculate <= S8DP1_2.io.out_calculate @[TPU.scala 62:20]
    S8DP1_2.io.in_calculate <= S8DP1_1_1[2].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[2].result <= S8DP1_2.io.result @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[0] <= S8DP1_1_1[2].in_tag[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[1] <= S8DP1_1_1[2].in_tag[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[2] <= S8DP1_1_1[2].in_tag[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[3] <= S8DP1_1_1[2].in_tag[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[4] <= S8DP1_1_1[2].in_tag[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[5] <= S8DP1_1_1[2].in_tag[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[6] <= S8DP1_1_1[2].in_tag[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_tag[7] <= S8DP1_1_1[2].in_tag[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[0] <= S8DP1_1_1[2].in_B[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[1] <= S8DP1_1_1[2].in_B[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[2] <= S8DP1_1_1[2].in_B[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[3] <= S8DP1_1_1[2].in_B[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[4] <= S8DP1_1_1[2].in_B[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[5] <= S8DP1_1_1[2].in_B[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[6] <= S8DP1_1_1[2].in_B[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_B[7] <= S8DP1_1_1[2].in_B[7] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[0] <= S8DP1_1_1[2].in_A[0] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[1] <= S8DP1_1_1[2].in_A[1] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[2] <= S8DP1_1_1[2].in_A[2] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[3] <= S8DP1_1_1[2].in_A[3] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[4] <= S8DP1_1_1[2].in_A[4] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[5] <= S8DP1_1_1[2].in_A[5] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[6] <= S8DP1_1_1[2].in_A[6] @[TPU.scala 62:20]
    S8DP1_2.io.in_A[7] <= S8DP1_1_1[2].in_A[7] @[TPU.scala 62:20]
    S8DP1_1_1[3].out_calculate <= S8DP1_3.io.out_calculate @[TPU.scala 62:20]
    S8DP1_3.io.in_calculate <= S8DP1_1_1[3].in_calculate @[TPU.scala 62:20]
    S8DP1_1_1[3].result <= S8DP1_3.io.result @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[0] <= S8DP1_1_1[3].in_tag[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[1] <= S8DP1_1_1[3].in_tag[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[2] <= S8DP1_1_1[3].in_tag[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[3] <= S8DP1_1_1[3].in_tag[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[4] <= S8DP1_1_1[3].in_tag[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[5] <= S8DP1_1_1[3].in_tag[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[6] <= S8DP1_1_1[3].in_tag[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_tag[7] <= S8DP1_1_1[3].in_tag[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[0] <= S8DP1_1_1[3].in_B[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[1] <= S8DP1_1_1[3].in_B[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[2] <= S8DP1_1_1[3].in_B[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[3] <= S8DP1_1_1[3].in_B[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[4] <= S8DP1_1_1[3].in_B[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[5] <= S8DP1_1_1[3].in_B[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[6] <= S8DP1_1_1[3].in_B[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_B[7] <= S8DP1_1_1[3].in_B[7] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[0] <= S8DP1_1_1[3].in_A[0] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[1] <= S8DP1_1_1[3].in_A[1] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[2] <= S8DP1_1_1[3].in_A[2] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[3] <= S8DP1_1_1[3].in_A[3] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[4] <= S8DP1_1_1[3].in_A[4] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[5] <= S8DP1_1_1[3].in_A[5] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[6] <= S8DP1_1_1[3].in_A[6] @[TPU.scala 62:20]
    S8DP1_3.io.in_A[7] <= S8DP1_1_1[3].in_A[7] @[TPU.scala 62:20]
    inst S8DP1_4 of S8DP1_28 @[TPU.scala 63:39]
    S8DP1_4.clock <= clock
    S8DP1_4.reset <= reset
    inst S8DP1_5 of S8DP1_29 @[TPU.scala 63:39]
    S8DP1_5.clock <= clock
    S8DP1_5.reset <= reset
    inst S8DP1_6 of S8DP1_30 @[TPU.scala 63:39]
    S8DP1_6.clock <= clock
    S8DP1_6.reset <= reset
    inst S8DP1_7 of S8DP1_31 @[TPU.scala 63:39]
    S8DP1_7.clock <= clock
    S8DP1_7.reset <= reset
    wire S8DP1_2_1 : {flip in_A : SInt<32>[8], flip in_B : SInt<32>[8], flip in_tag : UInt<1>[8], result : SInt<32>, flip in_calculate : UInt<1>, out_calculate : UInt<1>}[4] @[TPU.scala 63:20]
    S8DP1_2_1[0].out_calculate <= S8DP1_4.io.out_calculate @[TPU.scala 63:20]
    S8DP1_4.io.in_calculate <= S8DP1_2_1[0].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[0].result <= S8DP1_4.io.result @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[0] <= S8DP1_2_1[0].in_tag[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[1] <= S8DP1_2_1[0].in_tag[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[2] <= S8DP1_2_1[0].in_tag[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[3] <= S8DP1_2_1[0].in_tag[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[4] <= S8DP1_2_1[0].in_tag[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[5] <= S8DP1_2_1[0].in_tag[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[6] <= S8DP1_2_1[0].in_tag[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_tag[7] <= S8DP1_2_1[0].in_tag[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[0] <= S8DP1_2_1[0].in_B[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[1] <= S8DP1_2_1[0].in_B[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[2] <= S8DP1_2_1[0].in_B[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[3] <= S8DP1_2_1[0].in_B[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[4] <= S8DP1_2_1[0].in_B[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[5] <= S8DP1_2_1[0].in_B[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[6] <= S8DP1_2_1[0].in_B[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_B[7] <= S8DP1_2_1[0].in_B[7] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[0] <= S8DP1_2_1[0].in_A[0] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[1] <= S8DP1_2_1[0].in_A[1] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[2] <= S8DP1_2_1[0].in_A[2] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[3] <= S8DP1_2_1[0].in_A[3] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[4] <= S8DP1_2_1[0].in_A[4] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[5] <= S8DP1_2_1[0].in_A[5] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[6] <= S8DP1_2_1[0].in_A[6] @[TPU.scala 63:20]
    S8DP1_4.io.in_A[7] <= S8DP1_2_1[0].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[1].out_calculate <= S8DP1_5.io.out_calculate @[TPU.scala 63:20]
    S8DP1_5.io.in_calculate <= S8DP1_2_1[1].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[1].result <= S8DP1_5.io.result @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[0] <= S8DP1_2_1[1].in_tag[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[1] <= S8DP1_2_1[1].in_tag[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[2] <= S8DP1_2_1[1].in_tag[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[3] <= S8DP1_2_1[1].in_tag[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[4] <= S8DP1_2_1[1].in_tag[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[5] <= S8DP1_2_1[1].in_tag[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[6] <= S8DP1_2_1[1].in_tag[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_tag[7] <= S8DP1_2_1[1].in_tag[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[0] <= S8DP1_2_1[1].in_B[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[1] <= S8DP1_2_1[1].in_B[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[2] <= S8DP1_2_1[1].in_B[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[3] <= S8DP1_2_1[1].in_B[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[4] <= S8DP1_2_1[1].in_B[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[5] <= S8DP1_2_1[1].in_B[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[6] <= S8DP1_2_1[1].in_B[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_B[7] <= S8DP1_2_1[1].in_B[7] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[0] <= S8DP1_2_1[1].in_A[0] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[1] <= S8DP1_2_1[1].in_A[1] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[2] <= S8DP1_2_1[1].in_A[2] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[3] <= S8DP1_2_1[1].in_A[3] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[4] <= S8DP1_2_1[1].in_A[4] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[5] <= S8DP1_2_1[1].in_A[5] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[6] <= S8DP1_2_1[1].in_A[6] @[TPU.scala 63:20]
    S8DP1_5.io.in_A[7] <= S8DP1_2_1[1].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[2].out_calculate <= S8DP1_6.io.out_calculate @[TPU.scala 63:20]
    S8DP1_6.io.in_calculate <= S8DP1_2_1[2].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[2].result <= S8DP1_6.io.result @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[0] <= S8DP1_2_1[2].in_tag[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[1] <= S8DP1_2_1[2].in_tag[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[2] <= S8DP1_2_1[2].in_tag[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[3] <= S8DP1_2_1[2].in_tag[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[4] <= S8DP1_2_1[2].in_tag[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[5] <= S8DP1_2_1[2].in_tag[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[6] <= S8DP1_2_1[2].in_tag[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_tag[7] <= S8DP1_2_1[2].in_tag[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[0] <= S8DP1_2_1[2].in_B[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[1] <= S8DP1_2_1[2].in_B[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[2] <= S8DP1_2_1[2].in_B[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[3] <= S8DP1_2_1[2].in_B[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[4] <= S8DP1_2_1[2].in_B[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[5] <= S8DP1_2_1[2].in_B[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[6] <= S8DP1_2_1[2].in_B[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_B[7] <= S8DP1_2_1[2].in_B[7] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[0] <= S8DP1_2_1[2].in_A[0] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[1] <= S8DP1_2_1[2].in_A[1] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[2] <= S8DP1_2_1[2].in_A[2] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[3] <= S8DP1_2_1[2].in_A[3] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[4] <= S8DP1_2_1[2].in_A[4] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[5] <= S8DP1_2_1[2].in_A[5] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[6] <= S8DP1_2_1[2].in_A[6] @[TPU.scala 63:20]
    S8DP1_6.io.in_A[7] <= S8DP1_2_1[2].in_A[7] @[TPU.scala 63:20]
    S8DP1_2_1[3].out_calculate <= S8DP1_7.io.out_calculate @[TPU.scala 63:20]
    S8DP1_7.io.in_calculate <= S8DP1_2_1[3].in_calculate @[TPU.scala 63:20]
    S8DP1_2_1[3].result <= S8DP1_7.io.result @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[0] <= S8DP1_2_1[3].in_tag[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[1] <= S8DP1_2_1[3].in_tag[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[2] <= S8DP1_2_1[3].in_tag[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[3] <= S8DP1_2_1[3].in_tag[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[4] <= S8DP1_2_1[3].in_tag[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[5] <= S8DP1_2_1[3].in_tag[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[6] <= S8DP1_2_1[3].in_tag[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_tag[7] <= S8DP1_2_1[3].in_tag[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[0] <= S8DP1_2_1[3].in_B[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[1] <= S8DP1_2_1[3].in_B[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[2] <= S8DP1_2_1[3].in_B[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[3] <= S8DP1_2_1[3].in_B[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[4] <= S8DP1_2_1[3].in_B[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[5] <= S8DP1_2_1[3].in_B[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[6] <= S8DP1_2_1[3].in_B[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_B[7] <= S8DP1_2_1[3].in_B[7] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[0] <= S8DP1_2_1[3].in_A[0] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[1] <= S8DP1_2_1[3].in_A[1] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[2] <= S8DP1_2_1[3].in_A[2] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[3] <= S8DP1_2_1[3].in_A[3] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[4] <= S8DP1_2_1[3].in_A[4] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[5] <= S8DP1_2_1[3].in_A[5] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[6] <= S8DP1_2_1[3].in_A[6] @[TPU.scala 63:20]
    S8DP1_7.io.in_A[7] <= S8DP1_2_1[3].in_A[7] @[TPU.scala 63:20]
    reg cal_state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 64:26]
    reg cal_control : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TPU.scala 65:28]
    S8DP1_1_1[0].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[0].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 70:21]
    S8DP1_1_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 71:23]
    S8DP1_1_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 71:23]
    S8DP1_2_1[0].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[0].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[0].in_B[0] <= io.in_B[0][0] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[1] <= io.in_B[0][1] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[2] <= io.in_B[0][2] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[3] <= io.in_B[0][3] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[4] <= io.in_B[0][4] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[5] <= io.in_B[0][5] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[6] <= io.in_B[0][6] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_B[7] <= io.in_B[0][7] @[TPU.scala 75:21]
    S8DP1_2_1[0].in_tag[0] <= io.in_tag[0][0] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[1] <= io.in_tag[0][1] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[2] <= io.in_tag[0][2] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[3] <= io.in_tag[0][3] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[4] <= io.in_tag[0][4] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[5] <= io.in_tag[0][5] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[6] <= io.in_tag[0][6] @[TPU.scala 76:23]
    S8DP1_2_1[0].in_tag[7] <= io.in_tag[0][7] @[TPU.scala 76:23]
    S8DP1_1_1[1].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[1].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 70:21]
    S8DP1_1_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 71:23]
    S8DP1_1_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 71:23]
    S8DP1_2_1[1].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[1].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[1].in_B[0] <= io.in_B[1][0] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[1] <= io.in_B[1][1] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[2] <= io.in_B[1][2] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[3] <= io.in_B[1][3] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[4] <= io.in_B[1][4] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[5] <= io.in_B[1][5] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[6] <= io.in_B[1][6] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_B[7] <= io.in_B[1][7] @[TPU.scala 75:21]
    S8DP1_2_1[1].in_tag[0] <= io.in_tag[1][0] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[1] <= io.in_tag[1][1] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[2] <= io.in_tag[1][2] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[3] <= io.in_tag[1][3] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[4] <= io.in_tag[1][4] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[5] <= io.in_tag[1][5] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[6] <= io.in_tag[1][6] @[TPU.scala 76:23]
    S8DP1_2_1[1].in_tag[7] <= io.in_tag[1][7] @[TPU.scala 76:23]
    S8DP1_1_1[2].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[2].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 70:21]
    S8DP1_1_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 71:23]
    S8DP1_1_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 71:23]
    S8DP1_2_1[2].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[2].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[2].in_B[0] <= io.in_B[2][0] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[1] <= io.in_B[2][1] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[2] <= io.in_B[2][2] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[3] <= io.in_B[2][3] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[4] <= io.in_B[2][4] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[5] <= io.in_B[2][5] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[6] <= io.in_B[2][6] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_B[7] <= io.in_B[2][7] @[TPU.scala 75:21]
    S8DP1_2_1[2].in_tag[0] <= io.in_tag[2][0] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[1] <= io.in_tag[2][1] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[2] <= io.in_tag[2][2] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[3] <= io.in_tag[2][3] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[4] <= io.in_tag[2][4] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[5] <= io.in_tag[2][5] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[6] <= io.in_tag[2][6] @[TPU.scala 76:23]
    S8DP1_2_1[2].in_tag[7] <= io.in_tag[2][7] @[TPU.scala 76:23]
    S8DP1_1_1[3].in_calculate <= cal_control @[TPU.scala 68:29]
    S8DP1_1_1[3].in_A[0] <= io.in_A[0][0] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[1] <= io.in_A[0][1] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[2] <= io.in_A[0][2] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[3] <= io.in_A[0][3] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[4] <= io.in_A[0][4] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[5] <= io.in_A[0][5] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[6] <= io.in_A[0][6] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_A[7] <= io.in_A[0][7] @[TPU.scala 69:21]
    S8DP1_1_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 70:21]
    S8DP1_1_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 71:23]
    S8DP1_1_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 71:23]
    S8DP1_2_1[3].in_calculate <= cal_control @[TPU.scala 73:29]
    S8DP1_2_1[3].in_A[0] <= io.in_A[1][0] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[1] <= io.in_A[1][1] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[2] <= io.in_A[1][2] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[3] <= io.in_A[1][3] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[4] <= io.in_A[1][4] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[5] <= io.in_A[1][5] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[6] <= io.in_A[1][6] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_A[7] <= io.in_A[1][7] @[TPU.scala 74:21]
    S8DP1_2_1[3].in_B[0] <= io.in_B[3][0] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[1] <= io.in_B[3][1] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[2] <= io.in_B[3][2] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[3] <= io.in_B[3][3] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[4] <= io.in_B[3][4] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[5] <= io.in_B[3][5] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[6] <= io.in_B[3][6] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_B[7] <= io.in_B[3][7] @[TPU.scala 75:21]
    S8DP1_2_1[3].in_tag[0] <= io.in_tag[3][0] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[1] <= io.in_tag[3][1] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[2] <= io.in_tag[3][2] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[3] <= io.in_tag[3][3] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[4] <= io.in_tag[3][4] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[5] <= io.in_tag[3][5] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[6] <= io.in_tag[3][6] @[TPU.scala 76:23]
    S8DP1_2_1[3].in_tag[7] <= io.in_tag[3][7] @[TPU.scala 76:23]
    node _T_3683 = and(S8DP1_1_1[0].out_calculate, S8DP1_1_1[1].out_calculate) @[TPU.scala 78:42]
    node _T_3684 = and(_T_3683, S8DP1_1_1[2].out_calculate) @[TPU.scala 78:70]
    node _T_3685 = and(_T_3684, S8DP1_1_1[3].out_calculate) @[TPU.scala 78:98]
    node _T_3686 = and(_T_3685, S8DP1_2_1[0].out_calculate) @[TPU.scala 79:5]
    node _T_3687 = and(_T_3686, S8DP1_2_1[1].out_calculate) @[TPU.scala 79:33]
    node _T_3688 = and(_T_3687, S8DP1_2_1[2].out_calculate) @[TPU.scala 79:61]
    node _T_3689 = and(_T_3688, S8DP1_2_1[3].out_calculate) @[TPU.scala 79:89]
    cal_state <= _T_3689 @[TPU.scala 78:13]
    io.out_result[0][0] <= S8DP1_1_1[0].result @[TPU.scala 83:25]
    io.out_result[1][0] <= S8DP1_2_1[0].result @[TPU.scala 84:25]
    io.out_result[0][1] <= S8DP1_1_1[1].result @[TPU.scala 83:25]
    io.out_result[1][1] <= S8DP1_2_1[1].result @[TPU.scala 84:25]
    io.out_result[0][2] <= S8DP1_1_1[2].result @[TPU.scala 83:25]
    io.out_result[1][2] <= S8DP1_2_1[2].result @[TPU.scala 84:25]
    io.out_result[0][3] <= S8DP1_1_1[3].result @[TPU.scala 83:25]
    io.out_result[1][3] <= S8DP1_2_1[3].result @[TPU.scala 84:25]
    io.out_cal <= cal_state @[TPU.scala 86:14]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h02"))) @[TPU.scala 90:25]
    node _T_3691 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
    when _T_3691 : @[Conditional.scala 40:58]
      reg _T_3693 : UInt<1>, clock @[TPU.scala 93:33]
      _T_3693 <= io.in_cal @[TPU.scala 93:33]
      node _T_3695 = eq(_T_3693, UInt<1>("h00")) @[TPU.scala 93:25]
      node _T_3696 = and(io.in_cal, _T_3695) @[TPU.scala 93:23]
      when _T_3696 : @[TPU.scala 93:46]
        stateReg <= UInt<2>("h00") @[TPU.scala 94:18]
        skip @[TPU.scala 93:46]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3697 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
      when _T_3697 : @[Conditional.scala 39:67]
        stateReg <= UInt<2>("h01") @[TPU.scala 99:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_3698 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
        when _T_3698 : @[Conditional.scala 39:67]
          cal_control <= UInt<1>("h01") @[TPU.scala 103:21]
          when cal_state : @[TPU.scala 106:23]
            stateReg <= UInt<2>("h02") @[TPU.scala 107:18]
            cal_control <= UInt<1>("h00") @[TPU.scala 108:21]
            skip @[TPU.scala 106:23]
          skip @[Conditional.scala 39:67]
    
  module STA_VDBB : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_A : SInt<32>[16][4], flip in_B : SInt<32>[16][8], flip in_cal : UInt<1>, out_C : SInt<32>[8][4], out_cal : UInt<1>}
    
    wire _T_2472 : SInt<32>[8] @[STA_VDBB.scala 61:44]
    _T_2472[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2472[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    wire _T_2494 : SInt<32>[8] @[STA_VDBB.scala 61:44]
    _T_2494[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    _T_2494[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 61:44]
    wire _T_2611 : SInt<32>[8][2] @[STA_VDBB.scala 61:28]
    _T_2611[0][0] <= _T_2472[0] @[STA_VDBB.scala 61:28]
    _T_2611[0][1] <= _T_2472[1] @[STA_VDBB.scala 61:28]
    _T_2611[0][2] <= _T_2472[2] @[STA_VDBB.scala 61:28]
    _T_2611[0][3] <= _T_2472[3] @[STA_VDBB.scala 61:28]
    _T_2611[0][4] <= _T_2472[4] @[STA_VDBB.scala 61:28]
    _T_2611[0][5] <= _T_2472[5] @[STA_VDBB.scala 61:28]
    _T_2611[0][6] <= _T_2472[6] @[STA_VDBB.scala 61:28]
    _T_2611[0][7] <= _T_2472[7] @[STA_VDBB.scala 61:28]
    _T_2611[1][0] <= _T_2494[0] @[STA_VDBB.scala 61:28]
    _T_2611[1][1] <= _T_2494[1] @[STA_VDBB.scala 61:28]
    _T_2611[1][2] <= _T_2494[2] @[STA_VDBB.scala 61:28]
    _T_2611[1][3] <= _T_2494[3] @[STA_VDBB.scala 61:28]
    _T_2611[1][4] <= _T_2494[4] @[STA_VDBB.scala 61:28]
    _T_2611[1][5] <= _T_2494[5] @[STA_VDBB.scala 61:28]
    _T_2611[1][6] <= _T_2494[6] @[STA_VDBB.scala 61:28]
    _T_2611[1][7] <= _T_2494[7] @[STA_VDBB.scala 61:28]
    reg reg_A_1 : SInt<32>[8][2], clock with : (reset => (reset, _T_2611)) @[STA_VDBB.scala 61:24]
    wire _T_3671 : SInt<32>[8] @[STA_VDBB.scala 62:44]
    _T_3671[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3671[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    wire _T_3693 : SInt<32>[8] @[STA_VDBB.scala 62:44]
    _T_3693[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    _T_3693[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 62:44]
    wire _T_3810 : SInt<32>[8][2] @[STA_VDBB.scala 62:28]
    _T_3810[0][0] <= _T_3671[0] @[STA_VDBB.scala 62:28]
    _T_3810[0][1] <= _T_3671[1] @[STA_VDBB.scala 62:28]
    _T_3810[0][2] <= _T_3671[2] @[STA_VDBB.scala 62:28]
    _T_3810[0][3] <= _T_3671[3] @[STA_VDBB.scala 62:28]
    _T_3810[0][4] <= _T_3671[4] @[STA_VDBB.scala 62:28]
    _T_3810[0][5] <= _T_3671[5] @[STA_VDBB.scala 62:28]
    _T_3810[0][6] <= _T_3671[6] @[STA_VDBB.scala 62:28]
    _T_3810[0][7] <= _T_3671[7] @[STA_VDBB.scala 62:28]
    _T_3810[1][0] <= _T_3693[0] @[STA_VDBB.scala 62:28]
    _T_3810[1][1] <= _T_3693[1] @[STA_VDBB.scala 62:28]
    _T_3810[1][2] <= _T_3693[2] @[STA_VDBB.scala 62:28]
    _T_3810[1][3] <= _T_3693[3] @[STA_VDBB.scala 62:28]
    _T_3810[1][4] <= _T_3693[4] @[STA_VDBB.scala 62:28]
    _T_3810[1][5] <= _T_3693[5] @[STA_VDBB.scala 62:28]
    _T_3810[1][6] <= _T_3693[6] @[STA_VDBB.scala 62:28]
    _T_3810[1][7] <= _T_3693[7] @[STA_VDBB.scala 62:28]
    reg reg_A_2 : SInt<32>[8][2], clock with : (reset => (reset, _T_3810)) @[STA_VDBB.scala 62:24]
    wire _T_4870 : SInt<32>[8] @[STA_VDBB.scala 63:44]
    _T_4870[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4870[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    wire _T_4892 : SInt<32>[8] @[STA_VDBB.scala 63:44]
    _T_4892[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    _T_4892[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 63:44]
    wire _T_5009 : SInt<32>[8][2] @[STA_VDBB.scala 63:28]
    _T_5009[0][0] <= _T_4870[0] @[STA_VDBB.scala 63:28]
    _T_5009[0][1] <= _T_4870[1] @[STA_VDBB.scala 63:28]
    _T_5009[0][2] <= _T_4870[2] @[STA_VDBB.scala 63:28]
    _T_5009[0][3] <= _T_4870[3] @[STA_VDBB.scala 63:28]
    _T_5009[0][4] <= _T_4870[4] @[STA_VDBB.scala 63:28]
    _T_5009[0][5] <= _T_4870[5] @[STA_VDBB.scala 63:28]
    _T_5009[0][6] <= _T_4870[6] @[STA_VDBB.scala 63:28]
    _T_5009[0][7] <= _T_4870[7] @[STA_VDBB.scala 63:28]
    _T_5009[1][0] <= _T_4892[0] @[STA_VDBB.scala 63:28]
    _T_5009[1][1] <= _T_4892[1] @[STA_VDBB.scala 63:28]
    _T_5009[1][2] <= _T_4892[2] @[STA_VDBB.scala 63:28]
    _T_5009[1][3] <= _T_4892[3] @[STA_VDBB.scala 63:28]
    _T_5009[1][4] <= _T_4892[4] @[STA_VDBB.scala 63:28]
    _T_5009[1][5] <= _T_4892[5] @[STA_VDBB.scala 63:28]
    _T_5009[1][6] <= _T_4892[6] @[STA_VDBB.scala 63:28]
    _T_5009[1][7] <= _T_4892[7] @[STA_VDBB.scala 63:28]
    reg reg_A_3 : SInt<32>[8][2], clock with : (reset => (reset, _T_5009)) @[STA_VDBB.scala 63:24]
    wire _T_6069 : SInt<32>[8] @[STA_VDBB.scala 64:44]
    _T_6069[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6069[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    wire _T_6091 : SInt<32>[8] @[STA_VDBB.scala 64:44]
    _T_6091[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    _T_6091[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 64:44]
    wire _T_6208 : SInt<32>[8][2] @[STA_VDBB.scala 64:28]
    _T_6208[0][0] <= _T_6069[0] @[STA_VDBB.scala 64:28]
    _T_6208[0][1] <= _T_6069[1] @[STA_VDBB.scala 64:28]
    _T_6208[0][2] <= _T_6069[2] @[STA_VDBB.scala 64:28]
    _T_6208[0][3] <= _T_6069[3] @[STA_VDBB.scala 64:28]
    _T_6208[0][4] <= _T_6069[4] @[STA_VDBB.scala 64:28]
    _T_6208[0][5] <= _T_6069[5] @[STA_VDBB.scala 64:28]
    _T_6208[0][6] <= _T_6069[6] @[STA_VDBB.scala 64:28]
    _T_6208[0][7] <= _T_6069[7] @[STA_VDBB.scala 64:28]
    _T_6208[1][0] <= _T_6091[0] @[STA_VDBB.scala 64:28]
    _T_6208[1][1] <= _T_6091[1] @[STA_VDBB.scala 64:28]
    _T_6208[1][2] <= _T_6091[2] @[STA_VDBB.scala 64:28]
    _T_6208[1][3] <= _T_6091[3] @[STA_VDBB.scala 64:28]
    _T_6208[1][4] <= _T_6091[4] @[STA_VDBB.scala 64:28]
    _T_6208[1][5] <= _T_6091[5] @[STA_VDBB.scala 64:28]
    _T_6208[1][6] <= _T_6091[6] @[STA_VDBB.scala 64:28]
    _T_6208[1][7] <= _T_6091[7] @[STA_VDBB.scala 64:28]
    reg reg_A_4 : SInt<32>[8][2], clock with : (reset => (reset, _T_6208)) @[STA_VDBB.scala 64:24]
    reg_A_1[0][0] <= io.in_A[0][0] @[STA_VDBB.scala 68:21]
    reg_A_2[0][0] <= io.in_A[0][8] @[STA_VDBB.scala 69:21]
    reg_A_3[0][0] <= io.in_A[2][0] @[STA_VDBB.scala 70:21]
    reg_A_4[0][0] <= io.in_A[2][8] @[STA_VDBB.scala 71:21]
    reg_A_1[0][1] <= io.in_A[0][1] @[STA_VDBB.scala 68:21]
    reg_A_2[0][1] <= io.in_A[0][9] @[STA_VDBB.scala 69:21]
    reg_A_3[0][1] <= io.in_A[2][1] @[STA_VDBB.scala 70:21]
    reg_A_4[0][1] <= io.in_A[2][9] @[STA_VDBB.scala 71:21]
    reg_A_1[0][2] <= io.in_A[0][2] @[STA_VDBB.scala 68:21]
    reg_A_2[0][2] <= io.in_A[0][10] @[STA_VDBB.scala 69:21]
    reg_A_3[0][2] <= io.in_A[2][2] @[STA_VDBB.scala 70:21]
    reg_A_4[0][2] <= io.in_A[2][10] @[STA_VDBB.scala 71:21]
    reg_A_1[0][3] <= io.in_A[0][3] @[STA_VDBB.scala 68:21]
    reg_A_2[0][3] <= io.in_A[0][11] @[STA_VDBB.scala 69:21]
    reg_A_3[0][3] <= io.in_A[2][3] @[STA_VDBB.scala 70:21]
    reg_A_4[0][3] <= io.in_A[2][11] @[STA_VDBB.scala 71:21]
    reg_A_1[0][4] <= io.in_A[0][4] @[STA_VDBB.scala 68:21]
    reg_A_2[0][4] <= io.in_A[0][12] @[STA_VDBB.scala 69:21]
    reg_A_3[0][4] <= io.in_A[2][4] @[STA_VDBB.scala 70:21]
    reg_A_4[0][4] <= io.in_A[2][12] @[STA_VDBB.scala 71:21]
    reg_A_1[0][5] <= io.in_A[0][5] @[STA_VDBB.scala 68:21]
    reg_A_2[0][5] <= io.in_A[0][13] @[STA_VDBB.scala 69:21]
    reg_A_3[0][5] <= io.in_A[2][5] @[STA_VDBB.scala 70:21]
    reg_A_4[0][5] <= io.in_A[2][13] @[STA_VDBB.scala 71:21]
    reg_A_1[0][6] <= io.in_A[0][6] @[STA_VDBB.scala 68:21]
    reg_A_2[0][6] <= io.in_A[0][14] @[STA_VDBB.scala 69:21]
    reg_A_3[0][6] <= io.in_A[2][6] @[STA_VDBB.scala 70:21]
    reg_A_4[0][6] <= io.in_A[2][14] @[STA_VDBB.scala 71:21]
    reg_A_1[0][7] <= io.in_A[0][7] @[STA_VDBB.scala 68:21]
    reg_A_2[0][7] <= io.in_A[0][15] @[STA_VDBB.scala 69:21]
    reg_A_3[0][7] <= io.in_A[2][7] @[STA_VDBB.scala 70:21]
    reg_A_4[0][7] <= io.in_A[2][15] @[STA_VDBB.scala 71:21]
    reg_A_1[1][0] <= io.in_A[1][0] @[STA_VDBB.scala 68:21]
    reg_A_2[1][0] <= io.in_A[1][8] @[STA_VDBB.scala 69:21]
    reg_A_3[1][0] <= io.in_A[3][0] @[STA_VDBB.scala 70:21]
    reg_A_4[1][0] <= io.in_A[3][8] @[STA_VDBB.scala 71:21]
    reg_A_1[1][1] <= io.in_A[1][1] @[STA_VDBB.scala 68:21]
    reg_A_2[1][1] <= io.in_A[1][9] @[STA_VDBB.scala 69:21]
    reg_A_3[1][1] <= io.in_A[3][1] @[STA_VDBB.scala 70:21]
    reg_A_4[1][1] <= io.in_A[3][9] @[STA_VDBB.scala 71:21]
    reg_A_1[1][2] <= io.in_A[1][2] @[STA_VDBB.scala 68:21]
    reg_A_2[1][2] <= io.in_A[1][10] @[STA_VDBB.scala 69:21]
    reg_A_3[1][2] <= io.in_A[3][2] @[STA_VDBB.scala 70:21]
    reg_A_4[1][2] <= io.in_A[3][10] @[STA_VDBB.scala 71:21]
    reg_A_1[1][3] <= io.in_A[1][3] @[STA_VDBB.scala 68:21]
    reg_A_2[1][3] <= io.in_A[1][11] @[STA_VDBB.scala 69:21]
    reg_A_3[1][3] <= io.in_A[3][3] @[STA_VDBB.scala 70:21]
    reg_A_4[1][3] <= io.in_A[3][11] @[STA_VDBB.scala 71:21]
    reg_A_1[1][4] <= io.in_A[1][4] @[STA_VDBB.scala 68:21]
    reg_A_2[1][4] <= io.in_A[1][12] @[STA_VDBB.scala 69:21]
    reg_A_3[1][4] <= io.in_A[3][4] @[STA_VDBB.scala 70:21]
    reg_A_4[1][4] <= io.in_A[3][12] @[STA_VDBB.scala 71:21]
    reg_A_1[1][5] <= io.in_A[1][5] @[STA_VDBB.scala 68:21]
    reg_A_2[1][5] <= io.in_A[1][13] @[STA_VDBB.scala 69:21]
    reg_A_3[1][5] <= io.in_A[3][5] @[STA_VDBB.scala 70:21]
    reg_A_4[1][5] <= io.in_A[3][13] @[STA_VDBB.scala 71:21]
    reg_A_1[1][6] <= io.in_A[1][6] @[STA_VDBB.scala 68:21]
    reg_A_2[1][6] <= io.in_A[1][14] @[STA_VDBB.scala 69:21]
    reg_A_3[1][6] <= io.in_A[3][6] @[STA_VDBB.scala 70:21]
    reg_A_4[1][6] <= io.in_A[3][14] @[STA_VDBB.scala 71:21]
    reg_A_1[1][7] <= io.in_A[1][7] @[STA_VDBB.scala 68:21]
    reg_A_2[1][7] <= io.in_A[1][15] @[STA_VDBB.scala 69:21]
    reg_A_3[1][7] <= io.in_A[3][7] @[STA_VDBB.scala 70:21]
    reg_A_4[1][7] <= io.in_A[3][15] @[STA_VDBB.scala 71:21]
    wire _T_7268 : SInt<32>[8] @[STA_VDBB.scala 75:44]
    _T_7268[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7268[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    wire _T_7290 : SInt<32>[8] @[STA_VDBB.scala 75:44]
    _T_7290[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7290[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    wire _T_7312 : SInt<32>[8] @[STA_VDBB.scala 75:44]
    _T_7312[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7312[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    wire _T_7334 : SInt<32>[8] @[STA_VDBB.scala 75:44]
    _T_7334[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    _T_7334[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 75:44]
    wire _T_7507 : SInt<32>[8][4] @[STA_VDBB.scala 75:28]
    _T_7507[0][0] <= _T_7268[0] @[STA_VDBB.scala 75:28]
    _T_7507[0][1] <= _T_7268[1] @[STA_VDBB.scala 75:28]
    _T_7507[0][2] <= _T_7268[2] @[STA_VDBB.scala 75:28]
    _T_7507[0][3] <= _T_7268[3] @[STA_VDBB.scala 75:28]
    _T_7507[0][4] <= _T_7268[4] @[STA_VDBB.scala 75:28]
    _T_7507[0][5] <= _T_7268[5] @[STA_VDBB.scala 75:28]
    _T_7507[0][6] <= _T_7268[6] @[STA_VDBB.scala 75:28]
    _T_7507[0][7] <= _T_7268[7] @[STA_VDBB.scala 75:28]
    _T_7507[1][0] <= _T_7290[0] @[STA_VDBB.scala 75:28]
    _T_7507[1][1] <= _T_7290[1] @[STA_VDBB.scala 75:28]
    _T_7507[1][2] <= _T_7290[2] @[STA_VDBB.scala 75:28]
    _T_7507[1][3] <= _T_7290[3] @[STA_VDBB.scala 75:28]
    _T_7507[1][4] <= _T_7290[4] @[STA_VDBB.scala 75:28]
    _T_7507[1][5] <= _T_7290[5] @[STA_VDBB.scala 75:28]
    _T_7507[1][6] <= _T_7290[6] @[STA_VDBB.scala 75:28]
    _T_7507[1][7] <= _T_7290[7] @[STA_VDBB.scala 75:28]
    _T_7507[2][0] <= _T_7312[0] @[STA_VDBB.scala 75:28]
    _T_7507[2][1] <= _T_7312[1] @[STA_VDBB.scala 75:28]
    _T_7507[2][2] <= _T_7312[2] @[STA_VDBB.scala 75:28]
    _T_7507[2][3] <= _T_7312[3] @[STA_VDBB.scala 75:28]
    _T_7507[2][4] <= _T_7312[4] @[STA_VDBB.scala 75:28]
    _T_7507[2][5] <= _T_7312[5] @[STA_VDBB.scala 75:28]
    _T_7507[2][6] <= _T_7312[6] @[STA_VDBB.scala 75:28]
    _T_7507[2][7] <= _T_7312[7] @[STA_VDBB.scala 75:28]
    _T_7507[3][0] <= _T_7334[0] @[STA_VDBB.scala 75:28]
    _T_7507[3][1] <= _T_7334[1] @[STA_VDBB.scala 75:28]
    _T_7507[3][2] <= _T_7334[2] @[STA_VDBB.scala 75:28]
    _T_7507[3][3] <= _T_7334[3] @[STA_VDBB.scala 75:28]
    _T_7507[3][4] <= _T_7334[4] @[STA_VDBB.scala 75:28]
    _T_7507[3][5] <= _T_7334[5] @[STA_VDBB.scala 75:28]
    _T_7507[3][6] <= _T_7334[6] @[STA_VDBB.scala 75:28]
    _T_7507[3][7] <= _T_7334[7] @[STA_VDBB.scala 75:28]
    reg reg_B_1 : SInt<32>[8][4], clock with : (reset => (reset, _T_7507)) @[STA_VDBB.scala 75:24]
    wire _T_9263 : SInt<32>[8] @[STA_VDBB.scala 76:44]
    _T_9263[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9263[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    wire _T_9285 : SInt<32>[8] @[STA_VDBB.scala 76:44]
    _T_9285[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9285[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    wire _T_9307 : SInt<32>[8] @[STA_VDBB.scala 76:44]
    _T_9307[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9307[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    wire _T_9329 : SInt<32>[8] @[STA_VDBB.scala 76:44]
    _T_9329[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    _T_9329[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 76:44]
    wire _T_9502 : SInt<32>[8][4] @[STA_VDBB.scala 76:28]
    _T_9502[0][0] <= _T_9263[0] @[STA_VDBB.scala 76:28]
    _T_9502[0][1] <= _T_9263[1] @[STA_VDBB.scala 76:28]
    _T_9502[0][2] <= _T_9263[2] @[STA_VDBB.scala 76:28]
    _T_9502[0][3] <= _T_9263[3] @[STA_VDBB.scala 76:28]
    _T_9502[0][4] <= _T_9263[4] @[STA_VDBB.scala 76:28]
    _T_9502[0][5] <= _T_9263[5] @[STA_VDBB.scala 76:28]
    _T_9502[0][6] <= _T_9263[6] @[STA_VDBB.scala 76:28]
    _T_9502[0][7] <= _T_9263[7] @[STA_VDBB.scala 76:28]
    _T_9502[1][0] <= _T_9285[0] @[STA_VDBB.scala 76:28]
    _T_9502[1][1] <= _T_9285[1] @[STA_VDBB.scala 76:28]
    _T_9502[1][2] <= _T_9285[2] @[STA_VDBB.scala 76:28]
    _T_9502[1][3] <= _T_9285[3] @[STA_VDBB.scala 76:28]
    _T_9502[1][4] <= _T_9285[4] @[STA_VDBB.scala 76:28]
    _T_9502[1][5] <= _T_9285[5] @[STA_VDBB.scala 76:28]
    _T_9502[1][6] <= _T_9285[6] @[STA_VDBB.scala 76:28]
    _T_9502[1][7] <= _T_9285[7] @[STA_VDBB.scala 76:28]
    _T_9502[2][0] <= _T_9307[0] @[STA_VDBB.scala 76:28]
    _T_9502[2][1] <= _T_9307[1] @[STA_VDBB.scala 76:28]
    _T_9502[2][2] <= _T_9307[2] @[STA_VDBB.scala 76:28]
    _T_9502[2][3] <= _T_9307[3] @[STA_VDBB.scala 76:28]
    _T_9502[2][4] <= _T_9307[4] @[STA_VDBB.scala 76:28]
    _T_9502[2][5] <= _T_9307[5] @[STA_VDBB.scala 76:28]
    _T_9502[2][6] <= _T_9307[6] @[STA_VDBB.scala 76:28]
    _T_9502[2][7] <= _T_9307[7] @[STA_VDBB.scala 76:28]
    _T_9502[3][0] <= _T_9329[0] @[STA_VDBB.scala 76:28]
    _T_9502[3][1] <= _T_9329[1] @[STA_VDBB.scala 76:28]
    _T_9502[3][2] <= _T_9329[2] @[STA_VDBB.scala 76:28]
    _T_9502[3][3] <= _T_9329[3] @[STA_VDBB.scala 76:28]
    _T_9502[3][4] <= _T_9329[4] @[STA_VDBB.scala 76:28]
    _T_9502[3][5] <= _T_9329[5] @[STA_VDBB.scala 76:28]
    _T_9502[3][6] <= _T_9329[6] @[STA_VDBB.scala 76:28]
    _T_9502[3][7] <= _T_9329[7] @[STA_VDBB.scala 76:28]
    reg reg_B_2 : SInt<32>[8][4], clock with : (reset => (reset, _T_9502)) @[STA_VDBB.scala 76:24]
    wire _T_11258 : SInt<32>[8] @[STA_VDBB.scala 77:44]
    _T_11258[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11258[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    wire _T_11280 : SInt<32>[8] @[STA_VDBB.scala 77:44]
    _T_11280[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11280[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    wire _T_11302 : SInt<32>[8] @[STA_VDBB.scala 77:44]
    _T_11302[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11302[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    wire _T_11324 : SInt<32>[8] @[STA_VDBB.scala 77:44]
    _T_11324[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    _T_11324[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 77:44]
    wire _T_11497 : SInt<32>[8][4] @[STA_VDBB.scala 77:28]
    _T_11497[0][0] <= _T_11258[0] @[STA_VDBB.scala 77:28]
    _T_11497[0][1] <= _T_11258[1] @[STA_VDBB.scala 77:28]
    _T_11497[0][2] <= _T_11258[2] @[STA_VDBB.scala 77:28]
    _T_11497[0][3] <= _T_11258[3] @[STA_VDBB.scala 77:28]
    _T_11497[0][4] <= _T_11258[4] @[STA_VDBB.scala 77:28]
    _T_11497[0][5] <= _T_11258[5] @[STA_VDBB.scala 77:28]
    _T_11497[0][6] <= _T_11258[6] @[STA_VDBB.scala 77:28]
    _T_11497[0][7] <= _T_11258[7] @[STA_VDBB.scala 77:28]
    _T_11497[1][0] <= _T_11280[0] @[STA_VDBB.scala 77:28]
    _T_11497[1][1] <= _T_11280[1] @[STA_VDBB.scala 77:28]
    _T_11497[1][2] <= _T_11280[2] @[STA_VDBB.scala 77:28]
    _T_11497[1][3] <= _T_11280[3] @[STA_VDBB.scala 77:28]
    _T_11497[1][4] <= _T_11280[4] @[STA_VDBB.scala 77:28]
    _T_11497[1][5] <= _T_11280[5] @[STA_VDBB.scala 77:28]
    _T_11497[1][6] <= _T_11280[6] @[STA_VDBB.scala 77:28]
    _T_11497[1][7] <= _T_11280[7] @[STA_VDBB.scala 77:28]
    _T_11497[2][0] <= _T_11302[0] @[STA_VDBB.scala 77:28]
    _T_11497[2][1] <= _T_11302[1] @[STA_VDBB.scala 77:28]
    _T_11497[2][2] <= _T_11302[2] @[STA_VDBB.scala 77:28]
    _T_11497[2][3] <= _T_11302[3] @[STA_VDBB.scala 77:28]
    _T_11497[2][4] <= _T_11302[4] @[STA_VDBB.scala 77:28]
    _T_11497[2][5] <= _T_11302[5] @[STA_VDBB.scala 77:28]
    _T_11497[2][6] <= _T_11302[6] @[STA_VDBB.scala 77:28]
    _T_11497[2][7] <= _T_11302[7] @[STA_VDBB.scala 77:28]
    _T_11497[3][0] <= _T_11324[0] @[STA_VDBB.scala 77:28]
    _T_11497[3][1] <= _T_11324[1] @[STA_VDBB.scala 77:28]
    _T_11497[3][2] <= _T_11324[2] @[STA_VDBB.scala 77:28]
    _T_11497[3][3] <= _T_11324[3] @[STA_VDBB.scala 77:28]
    _T_11497[3][4] <= _T_11324[4] @[STA_VDBB.scala 77:28]
    _T_11497[3][5] <= _T_11324[5] @[STA_VDBB.scala 77:28]
    _T_11497[3][6] <= _T_11324[6] @[STA_VDBB.scala 77:28]
    _T_11497[3][7] <= _T_11324[7] @[STA_VDBB.scala 77:28]
    reg reg_B_3 : SInt<32>[8][4], clock with : (reset => (reset, _T_11497)) @[STA_VDBB.scala 77:24]
    wire _T_13253 : SInt<32>[8] @[STA_VDBB.scala 78:44]
    _T_13253[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13253[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    wire _T_13275 : SInt<32>[8] @[STA_VDBB.scala 78:44]
    _T_13275[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13275[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    wire _T_13297 : SInt<32>[8] @[STA_VDBB.scala 78:44]
    _T_13297[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13297[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    wire _T_13319 : SInt<32>[8] @[STA_VDBB.scala 78:44]
    _T_13319[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    _T_13319[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 78:44]
    wire _T_13492 : SInt<32>[8][4] @[STA_VDBB.scala 78:28]
    _T_13492[0][0] <= _T_13253[0] @[STA_VDBB.scala 78:28]
    _T_13492[0][1] <= _T_13253[1] @[STA_VDBB.scala 78:28]
    _T_13492[0][2] <= _T_13253[2] @[STA_VDBB.scala 78:28]
    _T_13492[0][3] <= _T_13253[3] @[STA_VDBB.scala 78:28]
    _T_13492[0][4] <= _T_13253[4] @[STA_VDBB.scala 78:28]
    _T_13492[0][5] <= _T_13253[5] @[STA_VDBB.scala 78:28]
    _T_13492[0][6] <= _T_13253[6] @[STA_VDBB.scala 78:28]
    _T_13492[0][7] <= _T_13253[7] @[STA_VDBB.scala 78:28]
    _T_13492[1][0] <= _T_13275[0] @[STA_VDBB.scala 78:28]
    _T_13492[1][1] <= _T_13275[1] @[STA_VDBB.scala 78:28]
    _T_13492[1][2] <= _T_13275[2] @[STA_VDBB.scala 78:28]
    _T_13492[1][3] <= _T_13275[3] @[STA_VDBB.scala 78:28]
    _T_13492[1][4] <= _T_13275[4] @[STA_VDBB.scala 78:28]
    _T_13492[1][5] <= _T_13275[5] @[STA_VDBB.scala 78:28]
    _T_13492[1][6] <= _T_13275[6] @[STA_VDBB.scala 78:28]
    _T_13492[1][7] <= _T_13275[7] @[STA_VDBB.scala 78:28]
    _T_13492[2][0] <= _T_13297[0] @[STA_VDBB.scala 78:28]
    _T_13492[2][1] <= _T_13297[1] @[STA_VDBB.scala 78:28]
    _T_13492[2][2] <= _T_13297[2] @[STA_VDBB.scala 78:28]
    _T_13492[2][3] <= _T_13297[3] @[STA_VDBB.scala 78:28]
    _T_13492[2][4] <= _T_13297[4] @[STA_VDBB.scala 78:28]
    _T_13492[2][5] <= _T_13297[5] @[STA_VDBB.scala 78:28]
    _T_13492[2][6] <= _T_13297[6] @[STA_VDBB.scala 78:28]
    _T_13492[2][7] <= _T_13297[7] @[STA_VDBB.scala 78:28]
    _T_13492[3][0] <= _T_13319[0] @[STA_VDBB.scala 78:28]
    _T_13492[3][1] <= _T_13319[1] @[STA_VDBB.scala 78:28]
    _T_13492[3][2] <= _T_13319[2] @[STA_VDBB.scala 78:28]
    _T_13492[3][3] <= _T_13319[3] @[STA_VDBB.scala 78:28]
    _T_13492[3][4] <= _T_13319[4] @[STA_VDBB.scala 78:28]
    _T_13492[3][5] <= _T_13319[5] @[STA_VDBB.scala 78:28]
    _T_13492[3][6] <= _T_13319[6] @[STA_VDBB.scala 78:28]
    _T_13492[3][7] <= _T_13319[7] @[STA_VDBB.scala 78:28]
    reg reg_B_4 : SInt<32>[8][4], clock with : (reset => (reset, _T_13492)) @[STA_VDBB.scala 78:24]
    reg_B_1[0][0] <= io.in_B[0][0] @[STA_VDBB.scala 82:21]
    reg_B_2[0][0] <= io.in_B[0][8] @[STA_VDBB.scala 83:21]
    reg_B_3[0][0] <= io.in_B[4][0] @[STA_VDBB.scala 84:21]
    reg_B_4[0][0] <= io.in_B[4][8] @[STA_VDBB.scala 85:21]
    reg_B_1[0][1] <= io.in_B[0][1] @[STA_VDBB.scala 82:21]
    reg_B_2[0][1] <= io.in_B[0][9] @[STA_VDBB.scala 83:21]
    reg_B_3[0][1] <= io.in_B[4][1] @[STA_VDBB.scala 84:21]
    reg_B_4[0][1] <= io.in_B[4][9] @[STA_VDBB.scala 85:21]
    reg_B_1[0][2] <= io.in_B[0][2] @[STA_VDBB.scala 82:21]
    reg_B_2[0][2] <= io.in_B[0][10] @[STA_VDBB.scala 83:21]
    reg_B_3[0][2] <= io.in_B[4][2] @[STA_VDBB.scala 84:21]
    reg_B_4[0][2] <= io.in_B[4][10] @[STA_VDBB.scala 85:21]
    reg_B_1[0][3] <= io.in_B[0][3] @[STA_VDBB.scala 82:21]
    reg_B_2[0][3] <= io.in_B[0][11] @[STA_VDBB.scala 83:21]
    reg_B_3[0][3] <= io.in_B[4][3] @[STA_VDBB.scala 84:21]
    reg_B_4[0][3] <= io.in_B[4][11] @[STA_VDBB.scala 85:21]
    reg_B_1[0][4] <= io.in_B[0][4] @[STA_VDBB.scala 82:21]
    reg_B_2[0][4] <= io.in_B[0][12] @[STA_VDBB.scala 83:21]
    reg_B_3[0][4] <= io.in_B[4][4] @[STA_VDBB.scala 84:21]
    reg_B_4[0][4] <= io.in_B[4][12] @[STA_VDBB.scala 85:21]
    reg_B_1[0][5] <= io.in_B[0][5] @[STA_VDBB.scala 82:21]
    reg_B_2[0][5] <= io.in_B[0][13] @[STA_VDBB.scala 83:21]
    reg_B_3[0][5] <= io.in_B[4][5] @[STA_VDBB.scala 84:21]
    reg_B_4[0][5] <= io.in_B[4][13] @[STA_VDBB.scala 85:21]
    reg_B_1[0][6] <= io.in_B[0][6] @[STA_VDBB.scala 82:21]
    reg_B_2[0][6] <= io.in_B[0][14] @[STA_VDBB.scala 83:21]
    reg_B_3[0][6] <= io.in_B[4][6] @[STA_VDBB.scala 84:21]
    reg_B_4[0][6] <= io.in_B[4][14] @[STA_VDBB.scala 85:21]
    reg_B_1[0][7] <= io.in_B[0][7] @[STA_VDBB.scala 82:21]
    reg_B_2[0][7] <= io.in_B[0][15] @[STA_VDBB.scala 83:21]
    reg_B_3[0][7] <= io.in_B[4][7] @[STA_VDBB.scala 84:21]
    reg_B_4[0][7] <= io.in_B[4][15] @[STA_VDBB.scala 85:21]
    reg_B_1[1][0] <= io.in_B[1][0] @[STA_VDBB.scala 82:21]
    reg_B_2[1][0] <= io.in_B[1][8] @[STA_VDBB.scala 83:21]
    reg_B_3[1][0] <= io.in_B[5][0] @[STA_VDBB.scala 84:21]
    reg_B_4[1][0] <= io.in_B[5][8] @[STA_VDBB.scala 85:21]
    reg_B_1[1][1] <= io.in_B[1][1] @[STA_VDBB.scala 82:21]
    reg_B_2[1][1] <= io.in_B[1][9] @[STA_VDBB.scala 83:21]
    reg_B_3[1][1] <= io.in_B[5][1] @[STA_VDBB.scala 84:21]
    reg_B_4[1][1] <= io.in_B[5][9] @[STA_VDBB.scala 85:21]
    reg_B_1[1][2] <= io.in_B[1][2] @[STA_VDBB.scala 82:21]
    reg_B_2[1][2] <= io.in_B[1][10] @[STA_VDBB.scala 83:21]
    reg_B_3[1][2] <= io.in_B[5][2] @[STA_VDBB.scala 84:21]
    reg_B_4[1][2] <= io.in_B[5][10] @[STA_VDBB.scala 85:21]
    reg_B_1[1][3] <= io.in_B[1][3] @[STA_VDBB.scala 82:21]
    reg_B_2[1][3] <= io.in_B[1][11] @[STA_VDBB.scala 83:21]
    reg_B_3[1][3] <= io.in_B[5][3] @[STA_VDBB.scala 84:21]
    reg_B_4[1][3] <= io.in_B[5][11] @[STA_VDBB.scala 85:21]
    reg_B_1[1][4] <= io.in_B[1][4] @[STA_VDBB.scala 82:21]
    reg_B_2[1][4] <= io.in_B[1][12] @[STA_VDBB.scala 83:21]
    reg_B_3[1][4] <= io.in_B[5][4] @[STA_VDBB.scala 84:21]
    reg_B_4[1][4] <= io.in_B[5][12] @[STA_VDBB.scala 85:21]
    reg_B_1[1][5] <= io.in_B[1][5] @[STA_VDBB.scala 82:21]
    reg_B_2[1][5] <= io.in_B[1][13] @[STA_VDBB.scala 83:21]
    reg_B_3[1][5] <= io.in_B[5][5] @[STA_VDBB.scala 84:21]
    reg_B_4[1][5] <= io.in_B[5][13] @[STA_VDBB.scala 85:21]
    reg_B_1[1][6] <= io.in_B[1][6] @[STA_VDBB.scala 82:21]
    reg_B_2[1][6] <= io.in_B[1][14] @[STA_VDBB.scala 83:21]
    reg_B_3[1][6] <= io.in_B[5][6] @[STA_VDBB.scala 84:21]
    reg_B_4[1][6] <= io.in_B[5][14] @[STA_VDBB.scala 85:21]
    reg_B_1[1][7] <= io.in_B[1][7] @[STA_VDBB.scala 82:21]
    reg_B_2[1][7] <= io.in_B[1][15] @[STA_VDBB.scala 83:21]
    reg_B_3[1][7] <= io.in_B[5][7] @[STA_VDBB.scala 84:21]
    reg_B_4[1][7] <= io.in_B[5][15] @[STA_VDBB.scala 85:21]
    reg_B_1[2][0] <= io.in_B[2][0] @[STA_VDBB.scala 82:21]
    reg_B_2[2][0] <= io.in_B[2][8] @[STA_VDBB.scala 83:21]
    reg_B_3[2][0] <= io.in_B[6][0] @[STA_VDBB.scala 84:21]
    reg_B_4[2][0] <= io.in_B[6][8] @[STA_VDBB.scala 85:21]
    reg_B_1[2][1] <= io.in_B[2][1] @[STA_VDBB.scala 82:21]
    reg_B_2[2][1] <= io.in_B[2][9] @[STA_VDBB.scala 83:21]
    reg_B_3[2][1] <= io.in_B[6][1] @[STA_VDBB.scala 84:21]
    reg_B_4[2][1] <= io.in_B[6][9] @[STA_VDBB.scala 85:21]
    reg_B_1[2][2] <= io.in_B[2][2] @[STA_VDBB.scala 82:21]
    reg_B_2[2][2] <= io.in_B[2][10] @[STA_VDBB.scala 83:21]
    reg_B_3[2][2] <= io.in_B[6][2] @[STA_VDBB.scala 84:21]
    reg_B_4[2][2] <= io.in_B[6][10] @[STA_VDBB.scala 85:21]
    reg_B_1[2][3] <= io.in_B[2][3] @[STA_VDBB.scala 82:21]
    reg_B_2[2][3] <= io.in_B[2][11] @[STA_VDBB.scala 83:21]
    reg_B_3[2][3] <= io.in_B[6][3] @[STA_VDBB.scala 84:21]
    reg_B_4[2][3] <= io.in_B[6][11] @[STA_VDBB.scala 85:21]
    reg_B_1[2][4] <= io.in_B[2][4] @[STA_VDBB.scala 82:21]
    reg_B_2[2][4] <= io.in_B[2][12] @[STA_VDBB.scala 83:21]
    reg_B_3[2][4] <= io.in_B[6][4] @[STA_VDBB.scala 84:21]
    reg_B_4[2][4] <= io.in_B[6][12] @[STA_VDBB.scala 85:21]
    reg_B_1[2][5] <= io.in_B[2][5] @[STA_VDBB.scala 82:21]
    reg_B_2[2][5] <= io.in_B[2][13] @[STA_VDBB.scala 83:21]
    reg_B_3[2][5] <= io.in_B[6][5] @[STA_VDBB.scala 84:21]
    reg_B_4[2][5] <= io.in_B[6][13] @[STA_VDBB.scala 85:21]
    reg_B_1[2][6] <= io.in_B[2][6] @[STA_VDBB.scala 82:21]
    reg_B_2[2][6] <= io.in_B[2][14] @[STA_VDBB.scala 83:21]
    reg_B_3[2][6] <= io.in_B[6][6] @[STA_VDBB.scala 84:21]
    reg_B_4[2][6] <= io.in_B[6][14] @[STA_VDBB.scala 85:21]
    reg_B_1[2][7] <= io.in_B[2][7] @[STA_VDBB.scala 82:21]
    reg_B_2[2][7] <= io.in_B[2][15] @[STA_VDBB.scala 83:21]
    reg_B_3[2][7] <= io.in_B[6][7] @[STA_VDBB.scala 84:21]
    reg_B_4[2][7] <= io.in_B[6][15] @[STA_VDBB.scala 85:21]
    reg_B_1[3][0] <= io.in_B[3][0] @[STA_VDBB.scala 82:21]
    reg_B_2[3][0] <= io.in_B[3][8] @[STA_VDBB.scala 83:21]
    reg_B_3[3][0] <= io.in_B[7][0] @[STA_VDBB.scala 84:21]
    reg_B_4[3][0] <= io.in_B[7][8] @[STA_VDBB.scala 85:21]
    reg_B_1[3][1] <= io.in_B[3][1] @[STA_VDBB.scala 82:21]
    reg_B_2[3][1] <= io.in_B[3][9] @[STA_VDBB.scala 83:21]
    reg_B_3[3][1] <= io.in_B[7][1] @[STA_VDBB.scala 84:21]
    reg_B_4[3][1] <= io.in_B[7][9] @[STA_VDBB.scala 85:21]
    reg_B_1[3][2] <= io.in_B[3][2] @[STA_VDBB.scala 82:21]
    reg_B_2[3][2] <= io.in_B[3][10] @[STA_VDBB.scala 83:21]
    reg_B_3[3][2] <= io.in_B[7][2] @[STA_VDBB.scala 84:21]
    reg_B_4[3][2] <= io.in_B[7][10] @[STA_VDBB.scala 85:21]
    reg_B_1[3][3] <= io.in_B[3][3] @[STA_VDBB.scala 82:21]
    reg_B_2[3][3] <= io.in_B[3][11] @[STA_VDBB.scala 83:21]
    reg_B_3[3][3] <= io.in_B[7][3] @[STA_VDBB.scala 84:21]
    reg_B_4[3][3] <= io.in_B[7][11] @[STA_VDBB.scala 85:21]
    reg_B_1[3][4] <= io.in_B[3][4] @[STA_VDBB.scala 82:21]
    reg_B_2[3][4] <= io.in_B[3][12] @[STA_VDBB.scala 83:21]
    reg_B_3[3][4] <= io.in_B[7][4] @[STA_VDBB.scala 84:21]
    reg_B_4[3][4] <= io.in_B[7][12] @[STA_VDBB.scala 85:21]
    reg_B_1[3][5] <= io.in_B[3][5] @[STA_VDBB.scala 82:21]
    reg_B_2[3][5] <= io.in_B[3][13] @[STA_VDBB.scala 83:21]
    reg_B_3[3][5] <= io.in_B[7][5] @[STA_VDBB.scala 84:21]
    reg_B_4[3][5] <= io.in_B[7][13] @[STA_VDBB.scala 85:21]
    reg_B_1[3][6] <= io.in_B[3][6] @[STA_VDBB.scala 82:21]
    reg_B_2[3][6] <= io.in_B[3][14] @[STA_VDBB.scala 83:21]
    reg_B_3[3][6] <= io.in_B[7][6] @[STA_VDBB.scala 84:21]
    reg_B_4[3][6] <= io.in_B[7][14] @[STA_VDBB.scala 85:21]
    reg_B_1[3][7] <= io.in_B[3][7] @[STA_VDBB.scala 82:21]
    reg_B_2[3][7] <= io.in_B[3][15] @[STA_VDBB.scala 83:21]
    reg_B_3[3][7] <= io.in_B[7][7] @[STA_VDBB.scala 84:21]
    reg_B_4[3][7] <= io.in_B[7][15] @[STA_VDBB.scala 85:21]
    inst tagger of tagger_4 @[STA_VDBB.scala 89:22]
    tagger.clock <= clock
    tagger.reset <= reset
    wire _T_15248 : SInt<32>[8] @[STA_VDBB.scala 90:55]
    _T_15248[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15248[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    wire _T_15270 : SInt<32>[8] @[STA_VDBB.scala 90:55]
    _T_15270[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15270[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    wire _T_15292 : SInt<32>[8] @[STA_VDBB.scala 90:55]
    _T_15292[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15292[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    wire _T_15314 : SInt<32>[8] @[STA_VDBB.scala 90:55]
    _T_15314[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    _T_15314[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 90:55]
    wire _T_15487 : SInt<32>[8][4] @[STA_VDBB.scala 90:39]
    _T_15487[0][0] <= _T_15248[0] @[STA_VDBB.scala 90:39]
    _T_15487[0][1] <= _T_15248[1] @[STA_VDBB.scala 90:39]
    _T_15487[0][2] <= _T_15248[2] @[STA_VDBB.scala 90:39]
    _T_15487[0][3] <= _T_15248[3] @[STA_VDBB.scala 90:39]
    _T_15487[0][4] <= _T_15248[4] @[STA_VDBB.scala 90:39]
    _T_15487[0][5] <= _T_15248[5] @[STA_VDBB.scala 90:39]
    _T_15487[0][6] <= _T_15248[6] @[STA_VDBB.scala 90:39]
    _T_15487[0][7] <= _T_15248[7] @[STA_VDBB.scala 90:39]
    _T_15487[1][0] <= _T_15270[0] @[STA_VDBB.scala 90:39]
    _T_15487[1][1] <= _T_15270[1] @[STA_VDBB.scala 90:39]
    _T_15487[1][2] <= _T_15270[2] @[STA_VDBB.scala 90:39]
    _T_15487[1][3] <= _T_15270[3] @[STA_VDBB.scala 90:39]
    _T_15487[1][4] <= _T_15270[4] @[STA_VDBB.scala 90:39]
    _T_15487[1][5] <= _T_15270[5] @[STA_VDBB.scala 90:39]
    _T_15487[1][6] <= _T_15270[6] @[STA_VDBB.scala 90:39]
    _T_15487[1][7] <= _T_15270[7] @[STA_VDBB.scala 90:39]
    _T_15487[2][0] <= _T_15292[0] @[STA_VDBB.scala 90:39]
    _T_15487[2][1] <= _T_15292[1] @[STA_VDBB.scala 90:39]
    _T_15487[2][2] <= _T_15292[2] @[STA_VDBB.scala 90:39]
    _T_15487[2][3] <= _T_15292[3] @[STA_VDBB.scala 90:39]
    _T_15487[2][4] <= _T_15292[4] @[STA_VDBB.scala 90:39]
    _T_15487[2][5] <= _T_15292[5] @[STA_VDBB.scala 90:39]
    _T_15487[2][6] <= _T_15292[6] @[STA_VDBB.scala 90:39]
    _T_15487[2][7] <= _T_15292[7] @[STA_VDBB.scala 90:39]
    _T_15487[3][0] <= _T_15314[0] @[STA_VDBB.scala 90:39]
    _T_15487[3][1] <= _T_15314[1] @[STA_VDBB.scala 90:39]
    _T_15487[3][2] <= _T_15314[2] @[STA_VDBB.scala 90:39]
    _T_15487[3][3] <= _T_15314[3] @[STA_VDBB.scala 90:39]
    _T_15487[3][4] <= _T_15314[4] @[STA_VDBB.scala 90:39]
    _T_15487[3][5] <= _T_15314[5] @[STA_VDBB.scala 90:39]
    _T_15487[3][6] <= _T_15314[6] @[STA_VDBB.scala 90:39]
    _T_15487[3][7] <= _T_15314[7] @[STA_VDBB.scala 90:39]
    reg default_taggers_in : SInt<32>[8][4], clock with : (reset => (reset, _T_15487)) @[STA_VDBB.scala 90:35]
    tagger.io.input[0][0] <= default_taggers_in[0][0] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][1] <= default_taggers_in[0][1] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][2] <= default_taggers_in[0][2] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][3] <= default_taggers_in[0][3] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][4] <= default_taggers_in[0][4] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][5] <= default_taggers_in[0][5] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][6] <= default_taggers_in[0][6] @[STA_VDBB.scala 91:19]
    tagger.io.input[0][7] <= default_taggers_in[0][7] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][0] <= default_taggers_in[1][0] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][1] <= default_taggers_in[1][1] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][2] <= default_taggers_in[1][2] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][3] <= default_taggers_in[1][3] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][4] <= default_taggers_in[1][4] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][5] <= default_taggers_in[1][5] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][6] <= default_taggers_in[1][6] @[STA_VDBB.scala 91:19]
    tagger.io.input[1][7] <= default_taggers_in[1][7] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][0] <= default_taggers_in[2][0] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][1] <= default_taggers_in[2][1] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][2] <= default_taggers_in[2][2] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][3] <= default_taggers_in[2][3] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][4] <= default_taggers_in[2][4] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][5] <= default_taggers_in[2][5] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][6] <= default_taggers_in[2][6] @[STA_VDBB.scala 91:19]
    tagger.io.input[2][7] <= default_taggers_in[2][7] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][0] <= default_taggers_in[3][0] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][1] <= default_taggers_in[3][1] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][2] <= default_taggers_in[3][2] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][3] <= default_taggers_in[3][3] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][4] <= default_taggers_in[3][4] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][5] <= default_taggers_in[3][5] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][6] <= default_taggers_in[3][6] @[STA_VDBB.scala 91:19]
    tagger.io.input[3][7] <= default_taggers_in[3][7] @[STA_VDBB.scala 91:19]
    wire _T_17243 : SInt<32>[8] @[STA_VDBB.scala 93:49]
    _T_17243[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17243[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    wire _T_17265 : SInt<32>[8] @[STA_VDBB.scala 93:49]
    _T_17265[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    _T_17265[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 93:49]
    wire _T_17382 : SInt<32>[8][2] @[STA_VDBB.scala 93:33]
    _T_17382[0][0] <= _T_17243[0] @[STA_VDBB.scala 93:33]
    _T_17382[0][1] <= _T_17243[1] @[STA_VDBB.scala 93:33]
    _T_17382[0][2] <= _T_17243[2] @[STA_VDBB.scala 93:33]
    _T_17382[0][3] <= _T_17243[3] @[STA_VDBB.scala 93:33]
    _T_17382[0][4] <= _T_17243[4] @[STA_VDBB.scala 93:33]
    _T_17382[0][5] <= _T_17243[5] @[STA_VDBB.scala 93:33]
    _T_17382[0][6] <= _T_17243[6] @[STA_VDBB.scala 93:33]
    _T_17382[0][7] <= _T_17243[7] @[STA_VDBB.scala 93:33]
    _T_17382[1][0] <= _T_17265[0] @[STA_VDBB.scala 93:33]
    _T_17382[1][1] <= _T_17265[1] @[STA_VDBB.scala 93:33]
    _T_17382[1][2] <= _T_17265[2] @[STA_VDBB.scala 93:33]
    _T_17382[1][3] <= _T_17265[3] @[STA_VDBB.scala 93:33]
    _T_17382[1][4] <= _T_17265[4] @[STA_VDBB.scala 93:33]
    _T_17382[1][5] <= _T_17265[5] @[STA_VDBB.scala 93:33]
    _T_17382[1][6] <= _T_17265[6] @[STA_VDBB.scala 93:33]
    _T_17382[1][7] <= _T_17265[7] @[STA_VDBB.scala 93:33]
    reg default_in_A : SInt<32>[8][2], clock with : (reset => (reset, _T_17382)) @[STA_VDBB.scala 93:29]
    wire _T_18442 : SInt<32>[8] @[STA_VDBB.scala 94:49]
    _T_18442[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18442[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    wire _T_18464 : SInt<32>[8] @[STA_VDBB.scala 94:49]
    _T_18464[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18464[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    wire _T_18486 : SInt<32>[8] @[STA_VDBB.scala 94:49]
    _T_18486[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18486[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    wire _T_18508 : SInt<32>[8] @[STA_VDBB.scala 94:49]
    _T_18508[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    _T_18508[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 94:49]
    wire _T_18681 : SInt<32>[8][4] @[STA_VDBB.scala 94:33]
    _T_18681[0][0] <= _T_18442[0] @[STA_VDBB.scala 94:33]
    _T_18681[0][1] <= _T_18442[1] @[STA_VDBB.scala 94:33]
    _T_18681[0][2] <= _T_18442[2] @[STA_VDBB.scala 94:33]
    _T_18681[0][3] <= _T_18442[3] @[STA_VDBB.scala 94:33]
    _T_18681[0][4] <= _T_18442[4] @[STA_VDBB.scala 94:33]
    _T_18681[0][5] <= _T_18442[5] @[STA_VDBB.scala 94:33]
    _T_18681[0][6] <= _T_18442[6] @[STA_VDBB.scala 94:33]
    _T_18681[0][7] <= _T_18442[7] @[STA_VDBB.scala 94:33]
    _T_18681[1][0] <= _T_18464[0] @[STA_VDBB.scala 94:33]
    _T_18681[1][1] <= _T_18464[1] @[STA_VDBB.scala 94:33]
    _T_18681[1][2] <= _T_18464[2] @[STA_VDBB.scala 94:33]
    _T_18681[1][3] <= _T_18464[3] @[STA_VDBB.scala 94:33]
    _T_18681[1][4] <= _T_18464[4] @[STA_VDBB.scala 94:33]
    _T_18681[1][5] <= _T_18464[5] @[STA_VDBB.scala 94:33]
    _T_18681[1][6] <= _T_18464[6] @[STA_VDBB.scala 94:33]
    _T_18681[1][7] <= _T_18464[7] @[STA_VDBB.scala 94:33]
    _T_18681[2][0] <= _T_18486[0] @[STA_VDBB.scala 94:33]
    _T_18681[2][1] <= _T_18486[1] @[STA_VDBB.scala 94:33]
    _T_18681[2][2] <= _T_18486[2] @[STA_VDBB.scala 94:33]
    _T_18681[2][3] <= _T_18486[3] @[STA_VDBB.scala 94:33]
    _T_18681[2][4] <= _T_18486[4] @[STA_VDBB.scala 94:33]
    _T_18681[2][5] <= _T_18486[5] @[STA_VDBB.scala 94:33]
    _T_18681[2][6] <= _T_18486[6] @[STA_VDBB.scala 94:33]
    _T_18681[2][7] <= _T_18486[7] @[STA_VDBB.scala 94:33]
    _T_18681[3][0] <= _T_18508[0] @[STA_VDBB.scala 94:33]
    _T_18681[3][1] <= _T_18508[1] @[STA_VDBB.scala 94:33]
    _T_18681[3][2] <= _T_18508[2] @[STA_VDBB.scala 94:33]
    _T_18681[3][3] <= _T_18508[3] @[STA_VDBB.scala 94:33]
    _T_18681[3][4] <= _T_18508[4] @[STA_VDBB.scala 94:33]
    _T_18681[3][5] <= _T_18508[5] @[STA_VDBB.scala 94:33]
    _T_18681[3][6] <= _T_18508[6] @[STA_VDBB.scala 94:33]
    _T_18681[3][7] <= _T_18508[7] @[STA_VDBB.scala 94:33]
    reg default_in_B : SInt<32>[8][4], clock with : (reset => (reset, _T_18681)) @[STA_VDBB.scala 94:29]
    wire _T_20437 : UInt<1>[8] @[STA_VDBB.scala 95:48]
    _T_20437[0] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[1] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[2] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[3] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[4] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[5] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[6] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20437[7] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    wire _T_20459 : UInt<1>[8] @[STA_VDBB.scala 95:48]
    _T_20459[0] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[1] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[2] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[3] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[4] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[5] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[6] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20459[7] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    wire _T_20481 : UInt<1>[8] @[STA_VDBB.scala 95:48]
    _T_20481[0] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[1] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[2] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[3] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[4] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[5] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[6] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20481[7] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    wire _T_20503 : UInt<1>[8] @[STA_VDBB.scala 95:48]
    _T_20503[0] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[1] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[2] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[3] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[4] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[5] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[6] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    _T_20503[7] <= UInt<1>("h00") @[STA_VDBB.scala 95:48]
    wire _T_20676 : UInt<1>[8][4] @[STA_VDBB.scala 95:32]
    _T_20676[0][0] <= _T_20437[0] @[STA_VDBB.scala 95:32]
    _T_20676[0][1] <= _T_20437[1] @[STA_VDBB.scala 95:32]
    _T_20676[0][2] <= _T_20437[2] @[STA_VDBB.scala 95:32]
    _T_20676[0][3] <= _T_20437[3] @[STA_VDBB.scala 95:32]
    _T_20676[0][4] <= _T_20437[4] @[STA_VDBB.scala 95:32]
    _T_20676[0][5] <= _T_20437[5] @[STA_VDBB.scala 95:32]
    _T_20676[0][6] <= _T_20437[6] @[STA_VDBB.scala 95:32]
    _T_20676[0][7] <= _T_20437[7] @[STA_VDBB.scala 95:32]
    _T_20676[1][0] <= _T_20459[0] @[STA_VDBB.scala 95:32]
    _T_20676[1][1] <= _T_20459[1] @[STA_VDBB.scala 95:32]
    _T_20676[1][2] <= _T_20459[2] @[STA_VDBB.scala 95:32]
    _T_20676[1][3] <= _T_20459[3] @[STA_VDBB.scala 95:32]
    _T_20676[1][4] <= _T_20459[4] @[STA_VDBB.scala 95:32]
    _T_20676[1][5] <= _T_20459[5] @[STA_VDBB.scala 95:32]
    _T_20676[1][6] <= _T_20459[6] @[STA_VDBB.scala 95:32]
    _T_20676[1][7] <= _T_20459[7] @[STA_VDBB.scala 95:32]
    _T_20676[2][0] <= _T_20481[0] @[STA_VDBB.scala 95:32]
    _T_20676[2][1] <= _T_20481[1] @[STA_VDBB.scala 95:32]
    _T_20676[2][2] <= _T_20481[2] @[STA_VDBB.scala 95:32]
    _T_20676[2][3] <= _T_20481[3] @[STA_VDBB.scala 95:32]
    _T_20676[2][4] <= _T_20481[4] @[STA_VDBB.scala 95:32]
    _T_20676[2][5] <= _T_20481[5] @[STA_VDBB.scala 95:32]
    _T_20676[2][6] <= _T_20481[6] @[STA_VDBB.scala 95:32]
    _T_20676[2][7] <= _T_20481[7] @[STA_VDBB.scala 95:32]
    _T_20676[3][0] <= _T_20503[0] @[STA_VDBB.scala 95:32]
    _T_20676[3][1] <= _T_20503[1] @[STA_VDBB.scala 95:32]
    _T_20676[3][2] <= _T_20503[2] @[STA_VDBB.scala 95:32]
    _T_20676[3][3] <= _T_20503[3] @[STA_VDBB.scala 95:32]
    _T_20676[3][4] <= _T_20503[4] @[STA_VDBB.scala 95:32]
    _T_20676[3][5] <= _T_20503[5] @[STA_VDBB.scala 95:32]
    _T_20676[3][6] <= _T_20503[6] @[STA_VDBB.scala 95:32]
    _T_20676[3][7] <= _T_20503[7] @[STA_VDBB.scala 95:32]
    reg default_tag : UInt<1>[8][4], clock with : (reset => (reset, _T_20676)) @[STA_VDBB.scala 95:28]
    inst TPU of TPU @[STA_VDBB.scala 97:36]
    TPU.clock <= clock
    TPU.reset <= reset
    inst TPU_1 of TPU_1 @[STA_VDBB.scala 97:36]
    TPU_1.clock <= clock
    TPU_1.reset <= reset
    inst TPU_2 of TPU_2 @[STA_VDBB.scala 97:36]
    TPU_2.clock <= clock
    TPU_2.reset <= reset
    inst TPU_3 of TPU_3 @[STA_VDBB.scala 97:36]
    TPU_3.clock <= clock
    TPU_3.reset <= reset
    wire TPUs : {flip in_A : SInt<32>[8][2], flip in_B : SInt<32>[8][4], flip in_tag : UInt<1>[8][4], flip in_cal : UInt<1>, out_A : SInt<32>[8][2], out_B : SInt<32>[8][4], out_tag : UInt<1>[8][4], out_result : SInt<32>[4][2], out_cal : UInt<1>}[4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_cal <= TPU.io.out_cal @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[0][0] <= TPU.io.out_result[0][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[0][1] <= TPU.io.out_result[0][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[0][2] <= TPU.io.out_result[0][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[0][3] <= TPU.io.out_result[0][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[1][0] <= TPU.io.out_result[1][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[1][1] <= TPU.io.out_result[1][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[1][2] <= TPU.io.out_result[1][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_result[1][3] <= TPU.io.out_result[1][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][0] <= TPU.io.out_tag[0][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][1] <= TPU.io.out_tag[0][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][2] <= TPU.io.out_tag[0][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][3] <= TPU.io.out_tag[0][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][4] <= TPU.io.out_tag[0][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][5] <= TPU.io.out_tag[0][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][6] <= TPU.io.out_tag[0][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[0][7] <= TPU.io.out_tag[0][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][0] <= TPU.io.out_tag[1][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][1] <= TPU.io.out_tag[1][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][2] <= TPU.io.out_tag[1][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][3] <= TPU.io.out_tag[1][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][4] <= TPU.io.out_tag[1][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][5] <= TPU.io.out_tag[1][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][6] <= TPU.io.out_tag[1][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[1][7] <= TPU.io.out_tag[1][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][0] <= TPU.io.out_tag[2][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][1] <= TPU.io.out_tag[2][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][2] <= TPU.io.out_tag[2][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][3] <= TPU.io.out_tag[2][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][4] <= TPU.io.out_tag[2][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][5] <= TPU.io.out_tag[2][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][6] <= TPU.io.out_tag[2][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[2][7] <= TPU.io.out_tag[2][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][0] <= TPU.io.out_tag[3][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][1] <= TPU.io.out_tag[3][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][2] <= TPU.io.out_tag[3][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][3] <= TPU.io.out_tag[3][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][4] <= TPU.io.out_tag[3][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][5] <= TPU.io.out_tag[3][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][6] <= TPU.io.out_tag[3][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_tag[3][7] <= TPU.io.out_tag[3][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][0] <= TPU.io.out_B[0][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][1] <= TPU.io.out_B[0][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][2] <= TPU.io.out_B[0][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][3] <= TPU.io.out_B[0][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][4] <= TPU.io.out_B[0][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][5] <= TPU.io.out_B[0][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][6] <= TPU.io.out_B[0][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[0][7] <= TPU.io.out_B[0][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][0] <= TPU.io.out_B[1][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][1] <= TPU.io.out_B[1][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][2] <= TPU.io.out_B[1][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][3] <= TPU.io.out_B[1][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][4] <= TPU.io.out_B[1][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][5] <= TPU.io.out_B[1][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][6] <= TPU.io.out_B[1][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[1][7] <= TPU.io.out_B[1][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][0] <= TPU.io.out_B[2][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][1] <= TPU.io.out_B[2][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][2] <= TPU.io.out_B[2][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][3] <= TPU.io.out_B[2][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][4] <= TPU.io.out_B[2][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][5] <= TPU.io.out_B[2][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][6] <= TPU.io.out_B[2][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[2][7] <= TPU.io.out_B[2][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][0] <= TPU.io.out_B[3][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][1] <= TPU.io.out_B[3][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][2] <= TPU.io.out_B[3][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][3] <= TPU.io.out_B[3][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][4] <= TPU.io.out_B[3][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][5] <= TPU.io.out_B[3][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][6] <= TPU.io.out_B[3][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_B[3][7] <= TPU.io.out_B[3][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][0] <= TPU.io.out_A[0][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][1] <= TPU.io.out_A[0][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][2] <= TPU.io.out_A[0][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][3] <= TPU.io.out_A[0][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][4] <= TPU.io.out_A[0][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][5] <= TPU.io.out_A[0][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][6] <= TPU.io.out_A[0][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[0][7] <= TPU.io.out_A[0][7] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][0] <= TPU.io.out_A[1][0] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][1] <= TPU.io.out_A[1][1] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][2] <= TPU.io.out_A[1][2] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][3] <= TPU.io.out_A[1][3] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][4] <= TPU.io.out_A[1][4] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][5] <= TPU.io.out_A[1][5] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][6] <= TPU.io.out_A[1][6] @[STA_VDBB.scala 97:17]
    TPUs[0].out_A[1][7] <= TPU.io.out_A[1][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_cal <= TPUs[0].in_cal @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][0] <= TPUs[0].in_tag[0][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][1] <= TPUs[0].in_tag[0][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][2] <= TPUs[0].in_tag[0][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][3] <= TPUs[0].in_tag[0][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][4] <= TPUs[0].in_tag[0][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][5] <= TPUs[0].in_tag[0][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][6] <= TPUs[0].in_tag[0][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[0][7] <= TPUs[0].in_tag[0][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][0] <= TPUs[0].in_tag[1][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][1] <= TPUs[0].in_tag[1][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][2] <= TPUs[0].in_tag[1][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][3] <= TPUs[0].in_tag[1][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][4] <= TPUs[0].in_tag[1][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][5] <= TPUs[0].in_tag[1][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][6] <= TPUs[0].in_tag[1][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[1][7] <= TPUs[0].in_tag[1][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][0] <= TPUs[0].in_tag[2][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][1] <= TPUs[0].in_tag[2][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][2] <= TPUs[0].in_tag[2][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][3] <= TPUs[0].in_tag[2][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][4] <= TPUs[0].in_tag[2][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][5] <= TPUs[0].in_tag[2][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][6] <= TPUs[0].in_tag[2][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[2][7] <= TPUs[0].in_tag[2][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][0] <= TPUs[0].in_tag[3][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][1] <= TPUs[0].in_tag[3][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][2] <= TPUs[0].in_tag[3][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][3] <= TPUs[0].in_tag[3][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][4] <= TPUs[0].in_tag[3][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][5] <= TPUs[0].in_tag[3][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][6] <= TPUs[0].in_tag[3][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_tag[3][7] <= TPUs[0].in_tag[3][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][0] <= TPUs[0].in_B[0][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][1] <= TPUs[0].in_B[0][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][2] <= TPUs[0].in_B[0][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][3] <= TPUs[0].in_B[0][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][4] <= TPUs[0].in_B[0][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][5] <= TPUs[0].in_B[0][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][6] <= TPUs[0].in_B[0][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[0][7] <= TPUs[0].in_B[0][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][0] <= TPUs[0].in_B[1][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][1] <= TPUs[0].in_B[1][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][2] <= TPUs[0].in_B[1][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][3] <= TPUs[0].in_B[1][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][4] <= TPUs[0].in_B[1][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][5] <= TPUs[0].in_B[1][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][6] <= TPUs[0].in_B[1][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[1][7] <= TPUs[0].in_B[1][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][0] <= TPUs[0].in_B[2][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][1] <= TPUs[0].in_B[2][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][2] <= TPUs[0].in_B[2][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][3] <= TPUs[0].in_B[2][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][4] <= TPUs[0].in_B[2][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][5] <= TPUs[0].in_B[2][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][6] <= TPUs[0].in_B[2][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[2][7] <= TPUs[0].in_B[2][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][0] <= TPUs[0].in_B[3][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][1] <= TPUs[0].in_B[3][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][2] <= TPUs[0].in_B[3][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][3] <= TPUs[0].in_B[3][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][4] <= TPUs[0].in_B[3][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][5] <= TPUs[0].in_B[3][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][6] <= TPUs[0].in_B[3][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_B[3][7] <= TPUs[0].in_B[3][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][0] <= TPUs[0].in_A[0][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][1] <= TPUs[0].in_A[0][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][2] <= TPUs[0].in_A[0][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][3] <= TPUs[0].in_A[0][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][4] <= TPUs[0].in_A[0][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][5] <= TPUs[0].in_A[0][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][6] <= TPUs[0].in_A[0][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[0][7] <= TPUs[0].in_A[0][7] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][0] <= TPUs[0].in_A[1][0] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][1] <= TPUs[0].in_A[1][1] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][2] <= TPUs[0].in_A[1][2] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][3] <= TPUs[0].in_A[1][3] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][4] <= TPUs[0].in_A[1][4] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][5] <= TPUs[0].in_A[1][5] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][6] <= TPUs[0].in_A[1][6] @[STA_VDBB.scala 97:17]
    TPU.io.in_A[1][7] <= TPUs[0].in_A[1][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_cal <= TPU_1.io.out_cal @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[0][0] <= TPU_1.io.out_result[0][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[0][1] <= TPU_1.io.out_result[0][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[0][2] <= TPU_1.io.out_result[0][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[0][3] <= TPU_1.io.out_result[0][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[1][0] <= TPU_1.io.out_result[1][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[1][1] <= TPU_1.io.out_result[1][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[1][2] <= TPU_1.io.out_result[1][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_result[1][3] <= TPU_1.io.out_result[1][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][0] <= TPU_1.io.out_tag[0][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][1] <= TPU_1.io.out_tag[0][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][2] <= TPU_1.io.out_tag[0][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][3] <= TPU_1.io.out_tag[0][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][4] <= TPU_1.io.out_tag[0][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][5] <= TPU_1.io.out_tag[0][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][6] <= TPU_1.io.out_tag[0][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[0][7] <= TPU_1.io.out_tag[0][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][0] <= TPU_1.io.out_tag[1][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][1] <= TPU_1.io.out_tag[1][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][2] <= TPU_1.io.out_tag[1][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][3] <= TPU_1.io.out_tag[1][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][4] <= TPU_1.io.out_tag[1][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][5] <= TPU_1.io.out_tag[1][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][6] <= TPU_1.io.out_tag[1][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[1][7] <= TPU_1.io.out_tag[1][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][0] <= TPU_1.io.out_tag[2][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][1] <= TPU_1.io.out_tag[2][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][2] <= TPU_1.io.out_tag[2][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][3] <= TPU_1.io.out_tag[2][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][4] <= TPU_1.io.out_tag[2][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][5] <= TPU_1.io.out_tag[2][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][6] <= TPU_1.io.out_tag[2][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[2][7] <= TPU_1.io.out_tag[2][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][0] <= TPU_1.io.out_tag[3][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][1] <= TPU_1.io.out_tag[3][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][2] <= TPU_1.io.out_tag[3][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][3] <= TPU_1.io.out_tag[3][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][4] <= TPU_1.io.out_tag[3][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][5] <= TPU_1.io.out_tag[3][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][6] <= TPU_1.io.out_tag[3][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_tag[3][7] <= TPU_1.io.out_tag[3][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][0] <= TPU_1.io.out_B[0][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][1] <= TPU_1.io.out_B[0][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][2] <= TPU_1.io.out_B[0][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][3] <= TPU_1.io.out_B[0][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][4] <= TPU_1.io.out_B[0][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][5] <= TPU_1.io.out_B[0][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][6] <= TPU_1.io.out_B[0][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[0][7] <= TPU_1.io.out_B[0][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][0] <= TPU_1.io.out_B[1][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][1] <= TPU_1.io.out_B[1][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][2] <= TPU_1.io.out_B[1][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][3] <= TPU_1.io.out_B[1][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][4] <= TPU_1.io.out_B[1][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][5] <= TPU_1.io.out_B[1][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][6] <= TPU_1.io.out_B[1][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[1][7] <= TPU_1.io.out_B[1][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][0] <= TPU_1.io.out_B[2][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][1] <= TPU_1.io.out_B[2][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][2] <= TPU_1.io.out_B[2][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][3] <= TPU_1.io.out_B[2][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][4] <= TPU_1.io.out_B[2][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][5] <= TPU_1.io.out_B[2][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][6] <= TPU_1.io.out_B[2][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[2][7] <= TPU_1.io.out_B[2][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][0] <= TPU_1.io.out_B[3][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][1] <= TPU_1.io.out_B[3][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][2] <= TPU_1.io.out_B[3][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][3] <= TPU_1.io.out_B[3][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][4] <= TPU_1.io.out_B[3][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][5] <= TPU_1.io.out_B[3][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][6] <= TPU_1.io.out_B[3][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_B[3][7] <= TPU_1.io.out_B[3][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][0] <= TPU_1.io.out_A[0][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][1] <= TPU_1.io.out_A[0][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][2] <= TPU_1.io.out_A[0][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][3] <= TPU_1.io.out_A[0][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][4] <= TPU_1.io.out_A[0][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][5] <= TPU_1.io.out_A[0][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][6] <= TPU_1.io.out_A[0][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[0][7] <= TPU_1.io.out_A[0][7] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][0] <= TPU_1.io.out_A[1][0] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][1] <= TPU_1.io.out_A[1][1] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][2] <= TPU_1.io.out_A[1][2] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][3] <= TPU_1.io.out_A[1][3] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][4] <= TPU_1.io.out_A[1][4] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][5] <= TPU_1.io.out_A[1][5] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][6] <= TPU_1.io.out_A[1][6] @[STA_VDBB.scala 97:17]
    TPUs[1].out_A[1][7] <= TPU_1.io.out_A[1][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_cal <= TPUs[1].in_cal @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][0] <= TPUs[1].in_tag[0][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][1] <= TPUs[1].in_tag[0][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][2] <= TPUs[1].in_tag[0][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][3] <= TPUs[1].in_tag[0][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][4] <= TPUs[1].in_tag[0][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][5] <= TPUs[1].in_tag[0][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][6] <= TPUs[1].in_tag[0][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[0][7] <= TPUs[1].in_tag[0][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][0] <= TPUs[1].in_tag[1][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][1] <= TPUs[1].in_tag[1][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][2] <= TPUs[1].in_tag[1][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][3] <= TPUs[1].in_tag[1][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][4] <= TPUs[1].in_tag[1][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][5] <= TPUs[1].in_tag[1][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][6] <= TPUs[1].in_tag[1][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[1][7] <= TPUs[1].in_tag[1][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][0] <= TPUs[1].in_tag[2][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][1] <= TPUs[1].in_tag[2][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][2] <= TPUs[1].in_tag[2][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][3] <= TPUs[1].in_tag[2][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][4] <= TPUs[1].in_tag[2][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][5] <= TPUs[1].in_tag[2][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][6] <= TPUs[1].in_tag[2][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[2][7] <= TPUs[1].in_tag[2][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][0] <= TPUs[1].in_tag[3][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][1] <= TPUs[1].in_tag[3][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][2] <= TPUs[1].in_tag[3][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][3] <= TPUs[1].in_tag[3][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][4] <= TPUs[1].in_tag[3][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][5] <= TPUs[1].in_tag[3][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][6] <= TPUs[1].in_tag[3][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_tag[3][7] <= TPUs[1].in_tag[3][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][0] <= TPUs[1].in_B[0][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][1] <= TPUs[1].in_B[0][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][2] <= TPUs[1].in_B[0][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][3] <= TPUs[1].in_B[0][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][4] <= TPUs[1].in_B[0][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][5] <= TPUs[1].in_B[0][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][6] <= TPUs[1].in_B[0][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[0][7] <= TPUs[1].in_B[0][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][0] <= TPUs[1].in_B[1][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][1] <= TPUs[1].in_B[1][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][2] <= TPUs[1].in_B[1][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][3] <= TPUs[1].in_B[1][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][4] <= TPUs[1].in_B[1][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][5] <= TPUs[1].in_B[1][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][6] <= TPUs[1].in_B[1][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[1][7] <= TPUs[1].in_B[1][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][0] <= TPUs[1].in_B[2][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][1] <= TPUs[1].in_B[2][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][2] <= TPUs[1].in_B[2][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][3] <= TPUs[1].in_B[2][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][4] <= TPUs[1].in_B[2][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][5] <= TPUs[1].in_B[2][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][6] <= TPUs[1].in_B[2][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[2][7] <= TPUs[1].in_B[2][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][0] <= TPUs[1].in_B[3][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][1] <= TPUs[1].in_B[3][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][2] <= TPUs[1].in_B[3][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][3] <= TPUs[1].in_B[3][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][4] <= TPUs[1].in_B[3][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][5] <= TPUs[1].in_B[3][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][6] <= TPUs[1].in_B[3][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_B[3][7] <= TPUs[1].in_B[3][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][0] <= TPUs[1].in_A[0][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][1] <= TPUs[1].in_A[0][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][2] <= TPUs[1].in_A[0][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][3] <= TPUs[1].in_A[0][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][4] <= TPUs[1].in_A[0][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][5] <= TPUs[1].in_A[0][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][6] <= TPUs[1].in_A[0][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[0][7] <= TPUs[1].in_A[0][7] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][0] <= TPUs[1].in_A[1][0] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][1] <= TPUs[1].in_A[1][1] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][2] <= TPUs[1].in_A[1][2] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][3] <= TPUs[1].in_A[1][3] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][4] <= TPUs[1].in_A[1][4] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][5] <= TPUs[1].in_A[1][5] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][6] <= TPUs[1].in_A[1][6] @[STA_VDBB.scala 97:17]
    TPU_1.io.in_A[1][7] <= TPUs[1].in_A[1][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_cal <= TPU_2.io.out_cal @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[0][0] <= TPU_2.io.out_result[0][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[0][1] <= TPU_2.io.out_result[0][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[0][2] <= TPU_2.io.out_result[0][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[0][3] <= TPU_2.io.out_result[0][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[1][0] <= TPU_2.io.out_result[1][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[1][1] <= TPU_2.io.out_result[1][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[1][2] <= TPU_2.io.out_result[1][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_result[1][3] <= TPU_2.io.out_result[1][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][0] <= TPU_2.io.out_tag[0][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][1] <= TPU_2.io.out_tag[0][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][2] <= TPU_2.io.out_tag[0][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][3] <= TPU_2.io.out_tag[0][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][4] <= TPU_2.io.out_tag[0][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][5] <= TPU_2.io.out_tag[0][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][6] <= TPU_2.io.out_tag[0][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[0][7] <= TPU_2.io.out_tag[0][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][0] <= TPU_2.io.out_tag[1][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][1] <= TPU_2.io.out_tag[1][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][2] <= TPU_2.io.out_tag[1][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][3] <= TPU_2.io.out_tag[1][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][4] <= TPU_2.io.out_tag[1][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][5] <= TPU_2.io.out_tag[1][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][6] <= TPU_2.io.out_tag[1][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[1][7] <= TPU_2.io.out_tag[1][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][0] <= TPU_2.io.out_tag[2][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][1] <= TPU_2.io.out_tag[2][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][2] <= TPU_2.io.out_tag[2][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][3] <= TPU_2.io.out_tag[2][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][4] <= TPU_2.io.out_tag[2][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][5] <= TPU_2.io.out_tag[2][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][6] <= TPU_2.io.out_tag[2][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[2][7] <= TPU_2.io.out_tag[2][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][0] <= TPU_2.io.out_tag[3][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][1] <= TPU_2.io.out_tag[3][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][2] <= TPU_2.io.out_tag[3][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][3] <= TPU_2.io.out_tag[3][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][4] <= TPU_2.io.out_tag[3][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][5] <= TPU_2.io.out_tag[3][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][6] <= TPU_2.io.out_tag[3][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_tag[3][7] <= TPU_2.io.out_tag[3][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][0] <= TPU_2.io.out_B[0][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][1] <= TPU_2.io.out_B[0][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][2] <= TPU_2.io.out_B[0][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][3] <= TPU_2.io.out_B[0][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][4] <= TPU_2.io.out_B[0][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][5] <= TPU_2.io.out_B[0][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][6] <= TPU_2.io.out_B[0][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[0][7] <= TPU_2.io.out_B[0][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][0] <= TPU_2.io.out_B[1][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][1] <= TPU_2.io.out_B[1][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][2] <= TPU_2.io.out_B[1][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][3] <= TPU_2.io.out_B[1][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][4] <= TPU_2.io.out_B[1][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][5] <= TPU_2.io.out_B[1][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][6] <= TPU_2.io.out_B[1][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[1][7] <= TPU_2.io.out_B[1][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][0] <= TPU_2.io.out_B[2][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][1] <= TPU_2.io.out_B[2][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][2] <= TPU_2.io.out_B[2][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][3] <= TPU_2.io.out_B[2][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][4] <= TPU_2.io.out_B[2][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][5] <= TPU_2.io.out_B[2][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][6] <= TPU_2.io.out_B[2][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[2][7] <= TPU_2.io.out_B[2][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][0] <= TPU_2.io.out_B[3][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][1] <= TPU_2.io.out_B[3][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][2] <= TPU_2.io.out_B[3][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][3] <= TPU_2.io.out_B[3][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][4] <= TPU_2.io.out_B[3][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][5] <= TPU_2.io.out_B[3][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][6] <= TPU_2.io.out_B[3][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_B[3][7] <= TPU_2.io.out_B[3][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][0] <= TPU_2.io.out_A[0][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][1] <= TPU_2.io.out_A[0][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][2] <= TPU_2.io.out_A[0][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][3] <= TPU_2.io.out_A[0][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][4] <= TPU_2.io.out_A[0][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][5] <= TPU_2.io.out_A[0][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][6] <= TPU_2.io.out_A[0][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[0][7] <= TPU_2.io.out_A[0][7] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][0] <= TPU_2.io.out_A[1][0] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][1] <= TPU_2.io.out_A[1][1] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][2] <= TPU_2.io.out_A[1][2] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][3] <= TPU_2.io.out_A[1][3] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][4] <= TPU_2.io.out_A[1][4] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][5] <= TPU_2.io.out_A[1][5] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][6] <= TPU_2.io.out_A[1][6] @[STA_VDBB.scala 97:17]
    TPUs[2].out_A[1][7] <= TPU_2.io.out_A[1][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_cal <= TPUs[2].in_cal @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][0] <= TPUs[2].in_tag[0][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][1] <= TPUs[2].in_tag[0][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][2] <= TPUs[2].in_tag[0][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][3] <= TPUs[2].in_tag[0][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][4] <= TPUs[2].in_tag[0][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][5] <= TPUs[2].in_tag[0][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][6] <= TPUs[2].in_tag[0][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[0][7] <= TPUs[2].in_tag[0][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][0] <= TPUs[2].in_tag[1][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][1] <= TPUs[2].in_tag[1][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][2] <= TPUs[2].in_tag[1][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][3] <= TPUs[2].in_tag[1][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][4] <= TPUs[2].in_tag[1][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][5] <= TPUs[2].in_tag[1][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][6] <= TPUs[2].in_tag[1][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[1][7] <= TPUs[2].in_tag[1][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][0] <= TPUs[2].in_tag[2][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][1] <= TPUs[2].in_tag[2][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][2] <= TPUs[2].in_tag[2][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][3] <= TPUs[2].in_tag[2][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][4] <= TPUs[2].in_tag[2][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][5] <= TPUs[2].in_tag[2][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][6] <= TPUs[2].in_tag[2][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[2][7] <= TPUs[2].in_tag[2][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][0] <= TPUs[2].in_tag[3][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][1] <= TPUs[2].in_tag[3][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][2] <= TPUs[2].in_tag[3][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][3] <= TPUs[2].in_tag[3][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][4] <= TPUs[2].in_tag[3][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][5] <= TPUs[2].in_tag[3][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][6] <= TPUs[2].in_tag[3][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_tag[3][7] <= TPUs[2].in_tag[3][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][0] <= TPUs[2].in_B[0][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][1] <= TPUs[2].in_B[0][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][2] <= TPUs[2].in_B[0][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][3] <= TPUs[2].in_B[0][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][4] <= TPUs[2].in_B[0][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][5] <= TPUs[2].in_B[0][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][6] <= TPUs[2].in_B[0][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[0][7] <= TPUs[2].in_B[0][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][0] <= TPUs[2].in_B[1][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][1] <= TPUs[2].in_B[1][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][2] <= TPUs[2].in_B[1][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][3] <= TPUs[2].in_B[1][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][4] <= TPUs[2].in_B[1][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][5] <= TPUs[2].in_B[1][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][6] <= TPUs[2].in_B[1][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[1][7] <= TPUs[2].in_B[1][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][0] <= TPUs[2].in_B[2][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][1] <= TPUs[2].in_B[2][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][2] <= TPUs[2].in_B[2][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][3] <= TPUs[2].in_B[2][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][4] <= TPUs[2].in_B[2][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][5] <= TPUs[2].in_B[2][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][6] <= TPUs[2].in_B[2][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[2][7] <= TPUs[2].in_B[2][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][0] <= TPUs[2].in_B[3][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][1] <= TPUs[2].in_B[3][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][2] <= TPUs[2].in_B[3][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][3] <= TPUs[2].in_B[3][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][4] <= TPUs[2].in_B[3][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][5] <= TPUs[2].in_B[3][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][6] <= TPUs[2].in_B[3][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_B[3][7] <= TPUs[2].in_B[3][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][0] <= TPUs[2].in_A[0][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][1] <= TPUs[2].in_A[0][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][2] <= TPUs[2].in_A[0][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][3] <= TPUs[2].in_A[0][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][4] <= TPUs[2].in_A[0][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][5] <= TPUs[2].in_A[0][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][6] <= TPUs[2].in_A[0][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[0][7] <= TPUs[2].in_A[0][7] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][0] <= TPUs[2].in_A[1][0] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][1] <= TPUs[2].in_A[1][1] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][2] <= TPUs[2].in_A[1][2] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][3] <= TPUs[2].in_A[1][3] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][4] <= TPUs[2].in_A[1][4] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][5] <= TPUs[2].in_A[1][5] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][6] <= TPUs[2].in_A[1][6] @[STA_VDBB.scala 97:17]
    TPU_2.io.in_A[1][7] <= TPUs[2].in_A[1][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_cal <= TPU_3.io.out_cal @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[0][0] <= TPU_3.io.out_result[0][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[0][1] <= TPU_3.io.out_result[0][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[0][2] <= TPU_3.io.out_result[0][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[0][3] <= TPU_3.io.out_result[0][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[1][0] <= TPU_3.io.out_result[1][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[1][1] <= TPU_3.io.out_result[1][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[1][2] <= TPU_3.io.out_result[1][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_result[1][3] <= TPU_3.io.out_result[1][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][0] <= TPU_3.io.out_tag[0][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][1] <= TPU_3.io.out_tag[0][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][2] <= TPU_3.io.out_tag[0][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][3] <= TPU_3.io.out_tag[0][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][4] <= TPU_3.io.out_tag[0][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][5] <= TPU_3.io.out_tag[0][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][6] <= TPU_3.io.out_tag[0][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[0][7] <= TPU_3.io.out_tag[0][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][0] <= TPU_3.io.out_tag[1][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][1] <= TPU_3.io.out_tag[1][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][2] <= TPU_3.io.out_tag[1][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][3] <= TPU_3.io.out_tag[1][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][4] <= TPU_3.io.out_tag[1][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][5] <= TPU_3.io.out_tag[1][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][6] <= TPU_3.io.out_tag[1][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[1][7] <= TPU_3.io.out_tag[1][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][0] <= TPU_3.io.out_tag[2][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][1] <= TPU_3.io.out_tag[2][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][2] <= TPU_3.io.out_tag[2][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][3] <= TPU_3.io.out_tag[2][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][4] <= TPU_3.io.out_tag[2][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][5] <= TPU_3.io.out_tag[2][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][6] <= TPU_3.io.out_tag[2][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[2][7] <= TPU_3.io.out_tag[2][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][0] <= TPU_3.io.out_tag[3][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][1] <= TPU_3.io.out_tag[3][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][2] <= TPU_3.io.out_tag[3][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][3] <= TPU_3.io.out_tag[3][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][4] <= TPU_3.io.out_tag[3][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][5] <= TPU_3.io.out_tag[3][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][6] <= TPU_3.io.out_tag[3][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_tag[3][7] <= TPU_3.io.out_tag[3][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][0] <= TPU_3.io.out_B[0][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][1] <= TPU_3.io.out_B[0][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][2] <= TPU_3.io.out_B[0][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][3] <= TPU_3.io.out_B[0][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][4] <= TPU_3.io.out_B[0][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][5] <= TPU_3.io.out_B[0][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][6] <= TPU_3.io.out_B[0][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[0][7] <= TPU_3.io.out_B[0][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][0] <= TPU_3.io.out_B[1][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][1] <= TPU_3.io.out_B[1][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][2] <= TPU_3.io.out_B[1][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][3] <= TPU_3.io.out_B[1][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][4] <= TPU_3.io.out_B[1][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][5] <= TPU_3.io.out_B[1][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][6] <= TPU_3.io.out_B[1][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[1][7] <= TPU_3.io.out_B[1][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][0] <= TPU_3.io.out_B[2][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][1] <= TPU_3.io.out_B[2][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][2] <= TPU_3.io.out_B[2][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][3] <= TPU_3.io.out_B[2][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][4] <= TPU_3.io.out_B[2][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][5] <= TPU_3.io.out_B[2][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][6] <= TPU_3.io.out_B[2][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[2][7] <= TPU_3.io.out_B[2][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][0] <= TPU_3.io.out_B[3][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][1] <= TPU_3.io.out_B[3][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][2] <= TPU_3.io.out_B[3][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][3] <= TPU_3.io.out_B[3][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][4] <= TPU_3.io.out_B[3][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][5] <= TPU_3.io.out_B[3][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][6] <= TPU_3.io.out_B[3][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_B[3][7] <= TPU_3.io.out_B[3][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][0] <= TPU_3.io.out_A[0][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][1] <= TPU_3.io.out_A[0][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][2] <= TPU_3.io.out_A[0][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][3] <= TPU_3.io.out_A[0][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][4] <= TPU_3.io.out_A[0][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][5] <= TPU_3.io.out_A[0][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][6] <= TPU_3.io.out_A[0][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[0][7] <= TPU_3.io.out_A[0][7] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][0] <= TPU_3.io.out_A[1][0] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][1] <= TPU_3.io.out_A[1][1] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][2] <= TPU_3.io.out_A[1][2] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][3] <= TPU_3.io.out_A[1][3] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][4] <= TPU_3.io.out_A[1][4] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][5] <= TPU_3.io.out_A[1][5] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][6] <= TPU_3.io.out_A[1][6] @[STA_VDBB.scala 97:17]
    TPUs[3].out_A[1][7] <= TPU_3.io.out_A[1][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_cal <= TPUs[3].in_cal @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][0] <= TPUs[3].in_tag[0][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][1] <= TPUs[3].in_tag[0][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][2] <= TPUs[3].in_tag[0][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][3] <= TPUs[3].in_tag[0][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][4] <= TPUs[3].in_tag[0][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][5] <= TPUs[3].in_tag[0][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][6] <= TPUs[3].in_tag[0][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[0][7] <= TPUs[3].in_tag[0][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][0] <= TPUs[3].in_tag[1][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][1] <= TPUs[3].in_tag[1][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][2] <= TPUs[3].in_tag[1][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][3] <= TPUs[3].in_tag[1][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][4] <= TPUs[3].in_tag[1][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][5] <= TPUs[3].in_tag[1][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][6] <= TPUs[3].in_tag[1][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[1][7] <= TPUs[3].in_tag[1][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][0] <= TPUs[3].in_tag[2][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][1] <= TPUs[3].in_tag[2][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][2] <= TPUs[3].in_tag[2][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][3] <= TPUs[3].in_tag[2][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][4] <= TPUs[3].in_tag[2][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][5] <= TPUs[3].in_tag[2][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][6] <= TPUs[3].in_tag[2][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[2][7] <= TPUs[3].in_tag[2][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][0] <= TPUs[3].in_tag[3][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][1] <= TPUs[3].in_tag[3][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][2] <= TPUs[3].in_tag[3][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][3] <= TPUs[3].in_tag[3][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][4] <= TPUs[3].in_tag[3][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][5] <= TPUs[3].in_tag[3][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][6] <= TPUs[3].in_tag[3][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_tag[3][7] <= TPUs[3].in_tag[3][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][0] <= TPUs[3].in_B[0][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][1] <= TPUs[3].in_B[0][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][2] <= TPUs[3].in_B[0][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][3] <= TPUs[3].in_B[0][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][4] <= TPUs[3].in_B[0][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][5] <= TPUs[3].in_B[0][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][6] <= TPUs[3].in_B[0][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[0][7] <= TPUs[3].in_B[0][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][0] <= TPUs[3].in_B[1][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][1] <= TPUs[3].in_B[1][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][2] <= TPUs[3].in_B[1][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][3] <= TPUs[3].in_B[1][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][4] <= TPUs[3].in_B[1][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][5] <= TPUs[3].in_B[1][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][6] <= TPUs[3].in_B[1][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[1][7] <= TPUs[3].in_B[1][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][0] <= TPUs[3].in_B[2][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][1] <= TPUs[3].in_B[2][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][2] <= TPUs[3].in_B[2][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][3] <= TPUs[3].in_B[2][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][4] <= TPUs[3].in_B[2][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][5] <= TPUs[3].in_B[2][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][6] <= TPUs[3].in_B[2][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[2][7] <= TPUs[3].in_B[2][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][0] <= TPUs[3].in_B[3][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][1] <= TPUs[3].in_B[3][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][2] <= TPUs[3].in_B[3][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][3] <= TPUs[3].in_B[3][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][4] <= TPUs[3].in_B[3][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][5] <= TPUs[3].in_B[3][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][6] <= TPUs[3].in_B[3][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_B[3][7] <= TPUs[3].in_B[3][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][0] <= TPUs[3].in_A[0][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][1] <= TPUs[3].in_A[0][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][2] <= TPUs[3].in_A[0][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][3] <= TPUs[3].in_A[0][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][4] <= TPUs[3].in_A[0][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][5] <= TPUs[3].in_A[0][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][6] <= TPUs[3].in_A[0][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[0][7] <= TPUs[3].in_A[0][7] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][0] <= TPUs[3].in_A[1][0] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][1] <= TPUs[3].in_A[1][1] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][2] <= TPUs[3].in_A[1][2] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][3] <= TPUs[3].in_A[1][3] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][4] <= TPUs[3].in_A[1][4] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][5] <= TPUs[3].in_A[1][5] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][6] <= TPUs[3].in_A[1][6] @[STA_VDBB.scala 97:17]
    TPU_3.io.in_A[1][7] <= TPUs[3].in_A[1][7] @[STA_VDBB.scala 97:17]
    TPUs[0].in_A[0][0] <= default_in_A[0][0] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][1] <= default_in_A[0][1] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][2] <= default_in_A[0][2] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][3] <= default_in_A[0][3] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][4] <= default_in_A[0][4] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][5] <= default_in_A[0][5] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][6] <= default_in_A[0][6] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[0][7] <= default_in_A[0][7] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][0] <= default_in_A[1][0] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][1] <= default_in_A[1][1] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][2] <= default_in_A[1][2] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][3] <= default_in_A[1][3] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][4] <= default_in_A[1][4] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][5] <= default_in_A[1][5] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][6] <= default_in_A[1][6] @[STA_VDBB.scala 99:18]
    TPUs[0].in_A[1][7] <= default_in_A[1][7] @[STA_VDBB.scala 99:18]
    TPUs[0].in_B[0][0] <= default_in_B[0][0] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][1] <= default_in_B[0][1] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][2] <= default_in_B[0][2] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][3] <= default_in_B[0][3] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][4] <= default_in_B[0][4] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][5] <= default_in_B[0][5] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][6] <= default_in_B[0][6] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[0][7] <= default_in_B[0][7] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][0] <= default_in_B[1][0] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][1] <= default_in_B[1][1] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][2] <= default_in_B[1][2] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][3] <= default_in_B[1][3] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][4] <= default_in_B[1][4] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][5] <= default_in_B[1][5] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][6] <= default_in_B[1][6] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[1][7] <= default_in_B[1][7] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][0] <= default_in_B[2][0] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][1] <= default_in_B[2][1] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][2] <= default_in_B[2][2] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][3] <= default_in_B[2][3] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][4] <= default_in_B[2][4] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][5] <= default_in_B[2][5] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][6] <= default_in_B[2][6] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[2][7] <= default_in_B[2][7] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][0] <= default_in_B[3][0] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][1] <= default_in_B[3][1] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][2] <= default_in_B[3][2] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][3] <= default_in_B[3][3] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][4] <= default_in_B[3][4] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][5] <= default_in_B[3][5] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][6] <= default_in_B[3][6] @[STA_VDBB.scala 100:18]
    TPUs[0].in_B[3][7] <= default_in_B[3][7] @[STA_VDBB.scala 100:18]
    TPUs[0].in_tag[0][0] <= default_tag[0][0] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][1] <= default_tag[0][1] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][2] <= default_tag[0][2] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][3] <= default_tag[0][3] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][4] <= default_tag[0][4] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][5] <= default_tag[0][5] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][6] <= default_tag[0][6] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[0][7] <= default_tag[0][7] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][0] <= default_tag[1][0] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][1] <= default_tag[1][1] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][2] <= default_tag[1][2] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][3] <= default_tag[1][3] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][4] <= default_tag[1][4] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][5] <= default_tag[1][5] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][6] <= default_tag[1][6] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[1][7] <= default_tag[1][7] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][0] <= default_tag[2][0] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][1] <= default_tag[2][1] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][2] <= default_tag[2][2] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][3] <= default_tag[2][3] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][4] <= default_tag[2][4] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][5] <= default_tag[2][5] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][6] <= default_tag[2][6] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[2][7] <= default_tag[2][7] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][0] <= default_tag[3][0] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][1] <= default_tag[3][1] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][2] <= default_tag[3][2] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][3] <= default_tag[3][3] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][4] <= default_tag[3][4] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][5] <= default_tag[3][5] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][6] <= default_tag[3][6] @[STA_VDBB.scala 101:20]
    TPUs[0].in_tag[3][7] <= default_tag[3][7] @[STA_VDBB.scala 101:20]
    TPUs[0].in_cal <= UInt<1>("h00") @[STA_VDBB.scala 102:20]
    TPUs[1].in_A[0][0] <= default_in_A[0][0] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][1] <= default_in_A[0][1] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][2] <= default_in_A[0][2] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][3] <= default_in_A[0][3] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][4] <= default_in_A[0][4] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][5] <= default_in_A[0][5] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][6] <= default_in_A[0][6] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[0][7] <= default_in_A[0][7] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][0] <= default_in_A[1][0] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][1] <= default_in_A[1][1] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][2] <= default_in_A[1][2] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][3] <= default_in_A[1][3] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][4] <= default_in_A[1][4] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][5] <= default_in_A[1][5] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][6] <= default_in_A[1][6] @[STA_VDBB.scala 99:18]
    TPUs[1].in_A[1][7] <= default_in_A[1][7] @[STA_VDBB.scala 99:18]
    TPUs[1].in_B[0][0] <= default_in_B[0][0] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][1] <= default_in_B[0][1] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][2] <= default_in_B[0][2] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][3] <= default_in_B[0][3] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][4] <= default_in_B[0][4] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][5] <= default_in_B[0][5] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][6] <= default_in_B[0][6] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[0][7] <= default_in_B[0][7] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][0] <= default_in_B[1][0] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][1] <= default_in_B[1][1] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][2] <= default_in_B[1][2] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][3] <= default_in_B[1][3] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][4] <= default_in_B[1][4] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][5] <= default_in_B[1][5] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][6] <= default_in_B[1][6] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[1][7] <= default_in_B[1][7] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][0] <= default_in_B[2][0] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][1] <= default_in_B[2][1] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][2] <= default_in_B[2][2] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][3] <= default_in_B[2][3] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][4] <= default_in_B[2][4] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][5] <= default_in_B[2][5] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][6] <= default_in_B[2][6] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[2][7] <= default_in_B[2][7] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][0] <= default_in_B[3][0] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][1] <= default_in_B[3][1] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][2] <= default_in_B[3][2] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][3] <= default_in_B[3][3] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][4] <= default_in_B[3][4] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][5] <= default_in_B[3][5] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][6] <= default_in_B[3][6] @[STA_VDBB.scala 100:18]
    TPUs[1].in_B[3][7] <= default_in_B[3][7] @[STA_VDBB.scala 100:18]
    TPUs[1].in_tag[0][0] <= default_tag[0][0] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][1] <= default_tag[0][1] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][2] <= default_tag[0][2] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][3] <= default_tag[0][3] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][4] <= default_tag[0][4] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][5] <= default_tag[0][5] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][6] <= default_tag[0][6] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[0][7] <= default_tag[0][7] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][0] <= default_tag[1][0] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][1] <= default_tag[1][1] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][2] <= default_tag[1][2] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][3] <= default_tag[1][3] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][4] <= default_tag[1][4] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][5] <= default_tag[1][5] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][6] <= default_tag[1][6] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[1][7] <= default_tag[1][7] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][0] <= default_tag[2][0] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][1] <= default_tag[2][1] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][2] <= default_tag[2][2] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][3] <= default_tag[2][3] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][4] <= default_tag[2][4] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][5] <= default_tag[2][5] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][6] <= default_tag[2][6] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[2][7] <= default_tag[2][7] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][0] <= default_tag[3][0] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][1] <= default_tag[3][1] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][2] <= default_tag[3][2] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][3] <= default_tag[3][3] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][4] <= default_tag[3][4] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][5] <= default_tag[3][5] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][6] <= default_tag[3][6] @[STA_VDBB.scala 101:20]
    TPUs[1].in_tag[3][7] <= default_tag[3][7] @[STA_VDBB.scala 101:20]
    TPUs[1].in_cal <= UInt<1>("h00") @[STA_VDBB.scala 102:20]
    TPUs[2].in_A[0][0] <= default_in_A[0][0] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][1] <= default_in_A[0][1] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][2] <= default_in_A[0][2] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][3] <= default_in_A[0][3] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][4] <= default_in_A[0][4] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][5] <= default_in_A[0][5] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][6] <= default_in_A[0][6] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[0][7] <= default_in_A[0][7] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][0] <= default_in_A[1][0] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][1] <= default_in_A[1][1] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][2] <= default_in_A[1][2] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][3] <= default_in_A[1][3] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][4] <= default_in_A[1][4] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][5] <= default_in_A[1][5] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][6] <= default_in_A[1][6] @[STA_VDBB.scala 99:18]
    TPUs[2].in_A[1][7] <= default_in_A[1][7] @[STA_VDBB.scala 99:18]
    TPUs[2].in_B[0][0] <= default_in_B[0][0] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][1] <= default_in_B[0][1] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][2] <= default_in_B[0][2] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][3] <= default_in_B[0][3] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][4] <= default_in_B[0][4] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][5] <= default_in_B[0][5] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][6] <= default_in_B[0][6] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[0][7] <= default_in_B[0][7] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][0] <= default_in_B[1][0] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][1] <= default_in_B[1][1] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][2] <= default_in_B[1][2] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][3] <= default_in_B[1][3] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][4] <= default_in_B[1][4] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][5] <= default_in_B[1][5] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][6] <= default_in_B[1][6] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[1][7] <= default_in_B[1][7] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][0] <= default_in_B[2][0] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][1] <= default_in_B[2][1] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][2] <= default_in_B[2][2] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][3] <= default_in_B[2][3] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][4] <= default_in_B[2][4] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][5] <= default_in_B[2][5] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][6] <= default_in_B[2][6] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[2][7] <= default_in_B[2][7] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][0] <= default_in_B[3][0] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][1] <= default_in_B[3][1] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][2] <= default_in_B[3][2] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][3] <= default_in_B[3][3] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][4] <= default_in_B[3][4] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][5] <= default_in_B[3][5] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][6] <= default_in_B[3][6] @[STA_VDBB.scala 100:18]
    TPUs[2].in_B[3][7] <= default_in_B[3][7] @[STA_VDBB.scala 100:18]
    TPUs[2].in_tag[0][0] <= default_tag[0][0] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][1] <= default_tag[0][1] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][2] <= default_tag[0][2] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][3] <= default_tag[0][3] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][4] <= default_tag[0][4] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][5] <= default_tag[0][5] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][6] <= default_tag[0][6] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[0][7] <= default_tag[0][7] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][0] <= default_tag[1][0] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][1] <= default_tag[1][1] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][2] <= default_tag[1][2] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][3] <= default_tag[1][3] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][4] <= default_tag[1][4] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][5] <= default_tag[1][5] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][6] <= default_tag[1][6] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[1][7] <= default_tag[1][7] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][0] <= default_tag[2][0] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][1] <= default_tag[2][1] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][2] <= default_tag[2][2] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][3] <= default_tag[2][3] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][4] <= default_tag[2][4] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][5] <= default_tag[2][5] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][6] <= default_tag[2][6] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[2][7] <= default_tag[2][7] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][0] <= default_tag[3][0] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][1] <= default_tag[3][1] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][2] <= default_tag[3][2] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][3] <= default_tag[3][3] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][4] <= default_tag[3][4] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][5] <= default_tag[3][5] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][6] <= default_tag[3][6] @[STA_VDBB.scala 101:20]
    TPUs[2].in_tag[3][7] <= default_tag[3][7] @[STA_VDBB.scala 101:20]
    TPUs[2].in_cal <= UInt<1>("h00") @[STA_VDBB.scala 102:20]
    TPUs[3].in_A[0][0] <= default_in_A[0][0] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][1] <= default_in_A[0][1] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][2] <= default_in_A[0][2] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][3] <= default_in_A[0][3] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][4] <= default_in_A[0][4] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][5] <= default_in_A[0][5] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][6] <= default_in_A[0][6] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[0][7] <= default_in_A[0][7] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][0] <= default_in_A[1][0] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][1] <= default_in_A[1][1] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][2] <= default_in_A[1][2] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][3] <= default_in_A[1][3] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][4] <= default_in_A[1][4] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][5] <= default_in_A[1][5] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][6] <= default_in_A[1][6] @[STA_VDBB.scala 99:18]
    TPUs[3].in_A[1][7] <= default_in_A[1][7] @[STA_VDBB.scala 99:18]
    TPUs[3].in_B[0][0] <= default_in_B[0][0] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][1] <= default_in_B[0][1] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][2] <= default_in_B[0][2] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][3] <= default_in_B[0][3] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][4] <= default_in_B[0][4] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][5] <= default_in_B[0][5] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][6] <= default_in_B[0][6] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[0][7] <= default_in_B[0][7] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][0] <= default_in_B[1][0] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][1] <= default_in_B[1][1] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][2] <= default_in_B[1][2] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][3] <= default_in_B[1][3] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][4] <= default_in_B[1][4] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][5] <= default_in_B[1][5] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][6] <= default_in_B[1][6] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[1][7] <= default_in_B[1][7] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][0] <= default_in_B[2][0] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][1] <= default_in_B[2][1] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][2] <= default_in_B[2][2] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][3] <= default_in_B[2][3] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][4] <= default_in_B[2][4] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][5] <= default_in_B[2][5] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][6] <= default_in_B[2][6] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[2][7] <= default_in_B[2][7] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][0] <= default_in_B[3][0] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][1] <= default_in_B[3][1] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][2] <= default_in_B[3][2] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][3] <= default_in_B[3][3] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][4] <= default_in_B[3][4] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][5] <= default_in_B[3][5] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][6] <= default_in_B[3][6] @[STA_VDBB.scala 100:18]
    TPUs[3].in_B[3][7] <= default_in_B[3][7] @[STA_VDBB.scala 100:18]
    TPUs[3].in_tag[0][0] <= default_tag[0][0] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][1] <= default_tag[0][1] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][2] <= default_tag[0][2] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][3] <= default_tag[0][3] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][4] <= default_tag[0][4] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][5] <= default_tag[0][5] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][6] <= default_tag[0][6] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[0][7] <= default_tag[0][7] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][0] <= default_tag[1][0] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][1] <= default_tag[1][1] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][2] <= default_tag[1][2] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][3] <= default_tag[1][3] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][4] <= default_tag[1][4] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][5] <= default_tag[1][5] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][6] <= default_tag[1][6] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[1][7] <= default_tag[1][7] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][0] <= default_tag[2][0] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][1] <= default_tag[2][1] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][2] <= default_tag[2][2] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][3] <= default_tag[2][3] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][4] <= default_tag[2][4] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][5] <= default_tag[2][5] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][6] <= default_tag[2][6] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[2][7] <= default_tag[2][7] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][0] <= default_tag[3][0] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][1] <= default_tag[3][1] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][2] <= default_tag[3][2] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][3] <= default_tag[3][3] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][4] <= default_tag[3][4] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][5] <= default_tag[3][5] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][6] <= default_tag[3][6] @[STA_VDBB.scala 101:20]
    TPUs[3].in_tag[3][7] <= default_tag[3][7] @[STA_VDBB.scala 101:20]
    TPUs[3].in_cal <= UInt<1>("h00") @[STA_VDBB.scala 102:20]
    TPUs[1].in_A[0][0] <= TPUs[0].out_A[0][0] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][1] <= TPUs[0].out_A[0][1] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][2] <= TPUs[0].out_A[0][2] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][3] <= TPUs[0].out_A[0][3] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][4] <= TPUs[0].out_A[0][4] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][5] <= TPUs[0].out_A[0][5] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][6] <= TPUs[0].out_A[0][6] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[0][7] <= TPUs[0].out_A[0][7] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][0] <= TPUs[0].out_A[1][0] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][1] <= TPUs[0].out_A[1][1] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][2] <= TPUs[0].out_A[1][2] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][3] <= TPUs[0].out_A[1][3] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][4] <= TPUs[0].out_A[1][4] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][5] <= TPUs[0].out_A[1][5] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][6] <= TPUs[0].out_A[1][6] @[STA_VDBB.scala 105:16]
    TPUs[1].in_A[1][7] <= TPUs[0].out_A[1][7] @[STA_VDBB.scala 105:16]
    TPUs[3].in_A[0][0] <= TPUs[2].out_A[0][0] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][1] <= TPUs[2].out_A[0][1] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][2] <= TPUs[2].out_A[0][2] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][3] <= TPUs[2].out_A[0][3] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][4] <= TPUs[2].out_A[0][4] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][5] <= TPUs[2].out_A[0][5] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][6] <= TPUs[2].out_A[0][6] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[0][7] <= TPUs[2].out_A[0][7] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][0] <= TPUs[2].out_A[1][0] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][1] <= TPUs[2].out_A[1][1] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][2] <= TPUs[2].out_A[1][2] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][3] <= TPUs[2].out_A[1][3] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][4] <= TPUs[2].out_A[1][4] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][5] <= TPUs[2].out_A[1][5] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][6] <= TPUs[2].out_A[1][6] @[STA_VDBB.scala 106:16]
    TPUs[3].in_A[1][7] <= TPUs[2].out_A[1][7] @[STA_VDBB.scala 106:16]
    TPUs[2].in_B[0][0] <= TPUs[0].out_B[0][0] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][1] <= TPUs[0].out_B[0][1] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][2] <= TPUs[0].out_B[0][2] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][3] <= TPUs[0].out_B[0][3] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][4] <= TPUs[0].out_B[0][4] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][5] <= TPUs[0].out_B[0][5] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][6] <= TPUs[0].out_B[0][6] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[0][7] <= TPUs[0].out_B[0][7] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][0] <= TPUs[0].out_B[1][0] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][1] <= TPUs[0].out_B[1][1] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][2] <= TPUs[0].out_B[1][2] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][3] <= TPUs[0].out_B[1][3] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][4] <= TPUs[0].out_B[1][4] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][5] <= TPUs[0].out_B[1][5] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][6] <= TPUs[0].out_B[1][6] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[1][7] <= TPUs[0].out_B[1][7] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][0] <= TPUs[0].out_B[2][0] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][1] <= TPUs[0].out_B[2][1] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][2] <= TPUs[0].out_B[2][2] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][3] <= TPUs[0].out_B[2][3] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][4] <= TPUs[0].out_B[2][4] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][5] <= TPUs[0].out_B[2][5] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][6] <= TPUs[0].out_B[2][6] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[2][7] <= TPUs[0].out_B[2][7] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][0] <= TPUs[0].out_B[3][0] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][1] <= TPUs[0].out_B[3][1] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][2] <= TPUs[0].out_B[3][2] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][3] <= TPUs[0].out_B[3][3] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][4] <= TPUs[0].out_B[3][4] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][5] <= TPUs[0].out_B[3][5] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][6] <= TPUs[0].out_B[3][6] @[STA_VDBB.scala 107:16]
    TPUs[2].in_B[3][7] <= TPUs[0].out_B[3][7] @[STA_VDBB.scala 107:16]
    TPUs[3].in_B[0][0] <= TPUs[1].out_B[0][0] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][1] <= TPUs[1].out_B[0][1] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][2] <= TPUs[1].out_B[0][2] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][3] <= TPUs[1].out_B[0][3] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][4] <= TPUs[1].out_B[0][4] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][5] <= TPUs[1].out_B[0][5] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][6] <= TPUs[1].out_B[0][6] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[0][7] <= TPUs[1].out_B[0][7] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][0] <= TPUs[1].out_B[1][0] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][1] <= TPUs[1].out_B[1][1] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][2] <= TPUs[1].out_B[1][2] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][3] <= TPUs[1].out_B[1][3] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][4] <= TPUs[1].out_B[1][4] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][5] <= TPUs[1].out_B[1][5] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][6] <= TPUs[1].out_B[1][6] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[1][7] <= TPUs[1].out_B[1][7] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][0] <= TPUs[1].out_B[2][0] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][1] <= TPUs[1].out_B[2][1] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][2] <= TPUs[1].out_B[2][2] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][3] <= TPUs[1].out_B[2][3] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][4] <= TPUs[1].out_B[2][4] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][5] <= TPUs[1].out_B[2][5] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][6] <= TPUs[1].out_B[2][6] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[2][7] <= TPUs[1].out_B[2][7] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][0] <= TPUs[1].out_B[3][0] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][1] <= TPUs[1].out_B[3][1] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][2] <= TPUs[1].out_B[3][2] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][3] <= TPUs[1].out_B[3][3] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][4] <= TPUs[1].out_B[3][4] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][5] <= TPUs[1].out_B[3][5] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][6] <= TPUs[1].out_B[3][6] @[STA_VDBB.scala 108:16]
    TPUs[3].in_B[3][7] <= TPUs[1].out_B[3][7] @[STA_VDBB.scala 108:16]
    TPUs[2].in_tag[0][0] <= TPUs[0].out_tag[0][0] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][1] <= TPUs[0].out_tag[0][1] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][2] <= TPUs[0].out_tag[0][2] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][3] <= TPUs[0].out_tag[0][3] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][4] <= TPUs[0].out_tag[0][4] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][5] <= TPUs[0].out_tag[0][5] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][6] <= TPUs[0].out_tag[0][6] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[0][7] <= TPUs[0].out_tag[0][7] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][0] <= TPUs[0].out_tag[1][0] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][1] <= TPUs[0].out_tag[1][1] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][2] <= TPUs[0].out_tag[1][2] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][3] <= TPUs[0].out_tag[1][3] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][4] <= TPUs[0].out_tag[1][4] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][5] <= TPUs[0].out_tag[1][5] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][6] <= TPUs[0].out_tag[1][6] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[1][7] <= TPUs[0].out_tag[1][7] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][0] <= TPUs[0].out_tag[2][0] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][1] <= TPUs[0].out_tag[2][1] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][2] <= TPUs[0].out_tag[2][2] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][3] <= TPUs[0].out_tag[2][3] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][4] <= TPUs[0].out_tag[2][4] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][5] <= TPUs[0].out_tag[2][5] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][6] <= TPUs[0].out_tag[2][6] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[2][7] <= TPUs[0].out_tag[2][7] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][0] <= TPUs[0].out_tag[3][0] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][1] <= TPUs[0].out_tag[3][1] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][2] <= TPUs[0].out_tag[3][2] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][3] <= TPUs[0].out_tag[3][3] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][4] <= TPUs[0].out_tag[3][4] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][5] <= TPUs[0].out_tag[3][5] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][6] <= TPUs[0].out_tag[3][6] @[STA_VDBB.scala 109:18]
    TPUs[2].in_tag[3][7] <= TPUs[0].out_tag[3][7] @[STA_VDBB.scala 109:18]
    TPUs[3].in_tag[0][0] <= TPUs[1].out_tag[0][0] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][1] <= TPUs[1].out_tag[0][1] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][2] <= TPUs[1].out_tag[0][2] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][3] <= TPUs[1].out_tag[0][3] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][4] <= TPUs[1].out_tag[0][4] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][5] <= TPUs[1].out_tag[0][5] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][6] <= TPUs[1].out_tag[0][6] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[0][7] <= TPUs[1].out_tag[0][7] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][0] <= TPUs[1].out_tag[1][0] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][1] <= TPUs[1].out_tag[1][1] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][2] <= TPUs[1].out_tag[1][2] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][3] <= TPUs[1].out_tag[1][3] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][4] <= TPUs[1].out_tag[1][4] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][5] <= TPUs[1].out_tag[1][5] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][6] <= TPUs[1].out_tag[1][6] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[1][7] <= TPUs[1].out_tag[1][7] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][0] <= TPUs[1].out_tag[2][0] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][1] <= TPUs[1].out_tag[2][1] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][2] <= TPUs[1].out_tag[2][2] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][3] <= TPUs[1].out_tag[2][3] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][4] <= TPUs[1].out_tag[2][4] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][5] <= TPUs[1].out_tag[2][5] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][6] <= TPUs[1].out_tag[2][6] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[2][7] <= TPUs[1].out_tag[2][7] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][0] <= TPUs[1].out_tag[3][0] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][1] <= TPUs[1].out_tag[3][1] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][2] <= TPUs[1].out_tag[3][2] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][3] <= TPUs[1].out_tag[3][3] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][4] <= TPUs[1].out_tag[3][4] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][5] <= TPUs[1].out_tag[3][5] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][6] <= TPUs[1].out_tag[3][6] @[STA_VDBB.scala 110:18]
    TPUs[3].in_tag[3][7] <= TPUs[1].out_tag[3][7] @[STA_VDBB.scala 110:18]
    wire _T_40936 : UInt<1>[3] @[STA_VDBB.scala 113:30]
    _T_40936[0] <= UInt<1>("h00") @[STA_VDBB.scala 113:30]
    _T_40936[1] <= UInt<1>("h00") @[STA_VDBB.scala 113:30]
    _T_40936[2] <= UInt<1>("h00") @[STA_VDBB.scala 113:30]
    reg cal_state : UInt<1>[3], clock with : (reset => (reset, _T_40936)) @[STA_VDBB.scala 113:26]
    cal_state[0] <= TPUs[0].out_cal @[STA_VDBB.scala 114:16]
    node _T_40965 = and(TPUs[1].out_cal, TPUs[2].out_cal) @[STA_VDBB.scala 115:35]
    cal_state[1] <= _T_40965 @[STA_VDBB.scala 115:16]
    cal_state[2] <= TPUs[3].out_cal @[STA_VDBB.scala 116:16]
    node _T_40966 = and(cal_state[0], cal_state[1]) @[STA_VDBB.scala 117:30]
    node _T_40967 = and(_T_40966, cal_state[2]) @[STA_VDBB.scala 117:46]
    io.out_cal <= _T_40967 @[STA_VDBB.scala 117:14]
    wire _T_40979 : SInt<32>[8] @[STA_VDBB.scala 119:43]
    _T_40979[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_40979[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    wire _T_41001 : SInt<32>[8] @[STA_VDBB.scala 119:43]
    _T_41001[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41001[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    wire _T_41023 : SInt<32>[8] @[STA_VDBB.scala 119:43]
    _T_41023[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41023[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    wire _T_41045 : SInt<32>[8] @[STA_VDBB.scala 119:43]
    _T_41045[0] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[1] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[2] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[3] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[4] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[5] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[6] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    _T_41045[7] <= asSInt(UInt<32>("h00")) @[STA_VDBB.scala 119:43]
    wire _T_41218 : SInt<32>[8][4] @[STA_VDBB.scala 119:27]
    _T_41218[0][0] <= _T_40979[0] @[STA_VDBB.scala 119:27]
    _T_41218[0][1] <= _T_40979[1] @[STA_VDBB.scala 119:27]
    _T_41218[0][2] <= _T_40979[2] @[STA_VDBB.scala 119:27]
    _T_41218[0][3] <= _T_40979[3] @[STA_VDBB.scala 119:27]
    _T_41218[0][4] <= _T_40979[4] @[STA_VDBB.scala 119:27]
    _T_41218[0][5] <= _T_40979[5] @[STA_VDBB.scala 119:27]
    _T_41218[0][6] <= _T_40979[6] @[STA_VDBB.scala 119:27]
    _T_41218[0][7] <= _T_40979[7] @[STA_VDBB.scala 119:27]
    _T_41218[1][0] <= _T_41001[0] @[STA_VDBB.scala 119:27]
    _T_41218[1][1] <= _T_41001[1] @[STA_VDBB.scala 119:27]
    _T_41218[1][2] <= _T_41001[2] @[STA_VDBB.scala 119:27]
    _T_41218[1][3] <= _T_41001[3] @[STA_VDBB.scala 119:27]
    _T_41218[1][4] <= _T_41001[4] @[STA_VDBB.scala 119:27]
    _T_41218[1][5] <= _T_41001[5] @[STA_VDBB.scala 119:27]
    _T_41218[1][6] <= _T_41001[6] @[STA_VDBB.scala 119:27]
    _T_41218[1][7] <= _T_41001[7] @[STA_VDBB.scala 119:27]
    _T_41218[2][0] <= _T_41023[0] @[STA_VDBB.scala 119:27]
    _T_41218[2][1] <= _T_41023[1] @[STA_VDBB.scala 119:27]
    _T_41218[2][2] <= _T_41023[2] @[STA_VDBB.scala 119:27]
    _T_41218[2][3] <= _T_41023[3] @[STA_VDBB.scala 119:27]
    _T_41218[2][4] <= _T_41023[4] @[STA_VDBB.scala 119:27]
    _T_41218[2][5] <= _T_41023[5] @[STA_VDBB.scala 119:27]
    _T_41218[2][6] <= _T_41023[6] @[STA_VDBB.scala 119:27]
    _T_41218[2][7] <= _T_41023[7] @[STA_VDBB.scala 119:27]
    _T_41218[3][0] <= _T_41045[0] @[STA_VDBB.scala 119:27]
    _T_41218[3][1] <= _T_41045[1] @[STA_VDBB.scala 119:27]
    _T_41218[3][2] <= _T_41045[2] @[STA_VDBB.scala 119:27]
    _T_41218[3][3] <= _T_41045[3] @[STA_VDBB.scala 119:27]
    _T_41218[3][4] <= _T_41045[4] @[STA_VDBB.scala 119:27]
    _T_41218[3][5] <= _T_41045[5] @[STA_VDBB.scala 119:27]
    _T_41218[3][6] <= _T_41045[6] @[STA_VDBB.scala 119:27]
    _T_41218[3][7] <= _T_41045[7] @[STA_VDBB.scala 119:27]
    reg result : SInt<32>[8][4], clock with : (reset => (reset, _T_41218)) @[STA_VDBB.scala 119:23]
    io.out_C[0][0] <= result[0][0] @[STA_VDBB.scala 120:12]
    io.out_C[0][1] <= result[0][1] @[STA_VDBB.scala 120:12]
    io.out_C[0][2] <= result[0][2] @[STA_VDBB.scala 120:12]
    io.out_C[0][3] <= result[0][3] @[STA_VDBB.scala 120:12]
    io.out_C[0][4] <= result[0][4] @[STA_VDBB.scala 120:12]
    io.out_C[0][5] <= result[0][5] @[STA_VDBB.scala 120:12]
    io.out_C[0][6] <= result[0][6] @[STA_VDBB.scala 120:12]
    io.out_C[0][7] <= result[0][7] @[STA_VDBB.scala 120:12]
    io.out_C[1][0] <= result[1][0] @[STA_VDBB.scala 120:12]
    io.out_C[1][1] <= result[1][1] @[STA_VDBB.scala 120:12]
    io.out_C[1][2] <= result[1][2] @[STA_VDBB.scala 120:12]
    io.out_C[1][3] <= result[1][3] @[STA_VDBB.scala 120:12]
    io.out_C[1][4] <= result[1][4] @[STA_VDBB.scala 120:12]
    io.out_C[1][5] <= result[1][5] @[STA_VDBB.scala 120:12]
    io.out_C[1][6] <= result[1][6] @[STA_VDBB.scala 120:12]
    io.out_C[1][7] <= result[1][7] @[STA_VDBB.scala 120:12]
    io.out_C[2][0] <= result[2][0] @[STA_VDBB.scala 120:12]
    io.out_C[2][1] <= result[2][1] @[STA_VDBB.scala 120:12]
    io.out_C[2][2] <= result[2][2] @[STA_VDBB.scala 120:12]
    io.out_C[2][3] <= result[2][3] @[STA_VDBB.scala 120:12]
    io.out_C[2][4] <= result[2][4] @[STA_VDBB.scala 120:12]
    io.out_C[2][5] <= result[2][5] @[STA_VDBB.scala 120:12]
    io.out_C[2][6] <= result[2][6] @[STA_VDBB.scala 120:12]
    io.out_C[2][7] <= result[2][7] @[STA_VDBB.scala 120:12]
    io.out_C[3][0] <= result[3][0] @[STA_VDBB.scala 120:12]
    io.out_C[3][1] <= result[3][1] @[STA_VDBB.scala 120:12]
    io.out_C[3][2] <= result[3][2] @[STA_VDBB.scala 120:12]
    io.out_C[3][3] <= result[3][3] @[STA_VDBB.scala 120:12]
    io.out_C[3][4] <= result[3][4] @[STA_VDBB.scala 120:12]
    io.out_C[3][5] <= result[3][5] @[STA_VDBB.scala 120:12]
    io.out_C[3][6] <= result[3][6] @[STA_VDBB.scala 120:12]
    io.out_C[3][7] <= result[3][7] @[STA_VDBB.scala 120:12]
    result[0][0] <= TPUs[0].out_result[0][0] @[STA_VDBB.scala 123:20]
    result[0][4] <= TPUs[1].out_result[0][0] @[STA_VDBB.scala 124:22]
    result[2][0] <= TPUs[2].out_result[0][0] @[STA_VDBB.scala 125:22]
    result[2][4] <= TPUs[3].out_result[0][0] @[STA_VDBB.scala 126:24]
    result[0][1] <= TPUs[0].out_result[0][1] @[STA_VDBB.scala 123:20]
    result[0][5] <= TPUs[1].out_result[0][1] @[STA_VDBB.scala 124:22]
    result[2][1] <= TPUs[2].out_result[0][1] @[STA_VDBB.scala 125:22]
    result[2][5] <= TPUs[3].out_result[0][1] @[STA_VDBB.scala 126:24]
    result[0][2] <= TPUs[0].out_result[0][2] @[STA_VDBB.scala 123:20]
    result[0][6] <= TPUs[1].out_result[0][2] @[STA_VDBB.scala 124:22]
    result[2][2] <= TPUs[2].out_result[0][2] @[STA_VDBB.scala 125:22]
    result[2][6] <= TPUs[3].out_result[0][2] @[STA_VDBB.scala 126:24]
    result[0][3] <= TPUs[0].out_result[0][3] @[STA_VDBB.scala 123:20]
    result[0][7] <= TPUs[1].out_result[0][3] @[STA_VDBB.scala 124:22]
    result[2][3] <= TPUs[2].out_result[0][3] @[STA_VDBB.scala 125:22]
    result[2][7] <= TPUs[3].out_result[0][3] @[STA_VDBB.scala 126:24]
    result[1][0] <= TPUs[0].out_result[1][0] @[STA_VDBB.scala 123:20]
    result[1][4] <= TPUs[1].out_result[1][0] @[STA_VDBB.scala 124:22]
    result[3][0] <= TPUs[2].out_result[1][0] @[STA_VDBB.scala 125:22]
    result[3][4] <= TPUs[3].out_result[1][0] @[STA_VDBB.scala 126:24]
    result[1][1] <= TPUs[0].out_result[1][1] @[STA_VDBB.scala 123:20]
    result[1][5] <= TPUs[1].out_result[1][1] @[STA_VDBB.scala 124:22]
    result[3][1] <= TPUs[2].out_result[1][1] @[STA_VDBB.scala 125:22]
    result[3][5] <= TPUs[3].out_result[1][1] @[STA_VDBB.scala 126:24]
    result[1][2] <= TPUs[0].out_result[1][2] @[STA_VDBB.scala 123:20]
    result[1][6] <= TPUs[1].out_result[1][2] @[STA_VDBB.scala 124:22]
    result[3][2] <= TPUs[2].out_result[1][2] @[STA_VDBB.scala 125:22]
    result[3][6] <= TPUs[3].out_result[1][2] @[STA_VDBB.scala 126:24]
    result[1][3] <= TPUs[0].out_result[1][3] @[STA_VDBB.scala 123:20]
    result[1][7] <= TPUs[1].out_result[1][3] @[STA_VDBB.scala 124:22]
    result[3][3] <= TPUs[2].out_result[1][3] @[STA_VDBB.scala 125:22]
    result[3][7] <= TPUs[3].out_result[1][3] @[STA_VDBB.scala 126:24]
    wire _T_42969 : UInt<1>[3] @[STA_VDBB.scala 130:32]
    _T_42969[0] <= UInt<1>("h00") @[STA_VDBB.scala 130:32]
    _T_42969[1] <= UInt<1>("h00") @[STA_VDBB.scala 130:32]
    _T_42969[2] <= UInt<1>("h00") @[STA_VDBB.scala 130:32]
    reg cal_control : UInt<1>[3], clock with : (reset => (reset, _T_42969)) @[STA_VDBB.scala 130:28]
    TPUs[0].in_cal <= cal_control[0] @[STA_VDBB.scala 131:18]
    TPUs[1].in_cal <= cal_control[1] @[STA_VDBB.scala 132:18]
    TPUs[2].in_cal <= cal_control[1] @[STA_VDBB.scala 133:18]
    TPUs[3].in_cal <= cal_control[2] @[STA_VDBB.scala 134:18]
    reg stateReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[STA_VDBB.scala 138:25]
    reg loop_reg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[STA_VDBB.scala 139:25]
    node _T_43000 = eq(UInt<3>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_43000 : @[Conditional.scala 40:58]
      reg _T_43002 : UInt<1>, clock @[STA_VDBB.scala 143:32]
      _T_43002 <= io.in_cal @[STA_VDBB.scala 143:32]
      node _T_43004 = eq(_T_43002, UInt<1>("h00")) @[STA_VDBB.scala 143:24]
      node _T_43005 = and(io.in_cal, _T_43004) @[STA_VDBB.scala 143:22]
      when _T_43005 : @[STA_VDBB.scala 143:44]
        stateReg <= UInt<3>("h01") @[STA_VDBB.scala 144:18]
        skip @[STA_VDBB.scala 143:44]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_43006 = eq(UInt<3>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_43006 : @[Conditional.scala 39:67]
        node _T_43007 = eq(UInt<1>("h00"), loop_reg) @[Conditional.scala 37:30]
        when _T_43007 : @[Conditional.scala 40:58]
          TPUs[0].in_A[0][0] <= reg_A_1[0][0] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][1] <= reg_A_1[0][1] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][2] <= reg_A_1[0][2] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][3] <= reg_A_1[0][3] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][4] <= reg_A_1[0][4] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][5] <= reg_A_1[0][5] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][6] <= reg_A_1[0][6] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[0][7] <= reg_A_1[0][7] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][0] <= reg_A_1[1][0] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][1] <= reg_A_1[1][1] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][2] <= reg_A_1[1][2] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][3] <= reg_A_1[1][3] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][4] <= reg_A_1[1][4] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][5] <= reg_A_1[1][5] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][6] <= reg_A_1[1][6] @[STA_VDBB.scala 150:24]
          TPUs[0].in_A[1][7] <= reg_A_1[1][7] @[STA_VDBB.scala 150:24]
          TPUs[0].in_B[0][0] <= reg_B_1[0][0] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][1] <= reg_B_1[0][1] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][2] <= reg_B_1[0][2] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][3] <= reg_B_1[0][3] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][4] <= reg_B_1[0][4] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][5] <= reg_B_1[0][5] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][6] <= reg_B_1[0][6] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[0][7] <= reg_B_1[0][7] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][0] <= reg_B_1[1][0] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][1] <= reg_B_1[1][1] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][2] <= reg_B_1[1][2] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][3] <= reg_B_1[1][3] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][4] <= reg_B_1[1][4] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][5] <= reg_B_1[1][5] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][6] <= reg_B_1[1][6] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[1][7] <= reg_B_1[1][7] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][0] <= reg_B_1[2][0] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][1] <= reg_B_1[2][1] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][2] <= reg_B_1[2][2] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][3] <= reg_B_1[2][3] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][4] <= reg_B_1[2][4] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][5] <= reg_B_1[2][5] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][6] <= reg_B_1[2][6] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[2][7] <= reg_B_1[2][7] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][0] <= reg_B_1[3][0] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][1] <= reg_B_1[3][1] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][2] <= reg_B_1[3][2] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][3] <= reg_B_1[3][3] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][4] <= reg_B_1[3][4] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][5] <= reg_B_1[3][5] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][6] <= reg_B_1[3][6] @[STA_VDBB.scala 151:24]
          TPUs[0].in_B[3][7] <= reg_B_1[3][7] @[STA_VDBB.scala 151:24]
          tagger.io.input[0][0] <= reg_B_1[0][0] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][1] <= reg_B_1[0][1] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][2] <= reg_B_1[0][2] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][3] <= reg_B_1[0][3] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][4] <= reg_B_1[0][4] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][5] <= reg_B_1[0][5] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][6] <= reg_B_1[0][6] @[STA_VDBB.scala 152:27]
          tagger.io.input[0][7] <= reg_B_1[0][7] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][0] <= reg_B_1[1][0] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][1] <= reg_B_1[1][1] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][2] <= reg_B_1[1][2] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][3] <= reg_B_1[1][3] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][4] <= reg_B_1[1][4] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][5] <= reg_B_1[1][5] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][6] <= reg_B_1[1][6] @[STA_VDBB.scala 152:27]
          tagger.io.input[1][7] <= reg_B_1[1][7] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][0] <= reg_B_1[2][0] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][1] <= reg_B_1[2][1] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][2] <= reg_B_1[2][2] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][3] <= reg_B_1[2][3] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][4] <= reg_B_1[2][4] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][5] <= reg_B_1[2][5] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][6] <= reg_B_1[2][6] @[STA_VDBB.scala 152:27]
          tagger.io.input[2][7] <= reg_B_1[2][7] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][0] <= reg_B_1[3][0] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][1] <= reg_B_1[3][1] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][2] <= reg_B_1[3][2] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][3] <= reg_B_1[3][3] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][4] <= reg_B_1[3][4] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][5] <= reg_B_1[3][5] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][6] <= reg_B_1[3][6] @[STA_VDBB.scala 152:27]
          tagger.io.input[3][7] <= reg_B_1[3][7] @[STA_VDBB.scala 152:27]
          TPUs[0].in_tag[0][0] <= tagger.io.output[0][0] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][1] <= tagger.io.output[0][1] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][2] <= tagger.io.output[0][2] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][3] <= tagger.io.output[0][3] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][4] <= tagger.io.output[0][4] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][5] <= tagger.io.output[0][5] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][6] <= tagger.io.output[0][6] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[0][7] <= tagger.io.output[0][7] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][0] <= tagger.io.output[1][0] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][1] <= tagger.io.output[1][1] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][2] <= tagger.io.output[1][2] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][3] <= tagger.io.output[1][3] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][4] <= tagger.io.output[1][4] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][5] <= tagger.io.output[1][5] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][6] <= tagger.io.output[1][6] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[1][7] <= tagger.io.output[1][7] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][0] <= tagger.io.output[2][0] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][1] <= tagger.io.output[2][1] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][2] <= tagger.io.output[2][2] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][3] <= tagger.io.output[2][3] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][4] <= tagger.io.output[2][4] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][5] <= tagger.io.output[2][5] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][6] <= tagger.io.output[2][6] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[2][7] <= tagger.io.output[2][7] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][0] <= tagger.io.output[3][0] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][1] <= tagger.io.output[3][1] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][2] <= tagger.io.output[3][2] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][3] <= tagger.io.output[3][3] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][4] <= tagger.io.output[3][4] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][5] <= tagger.io.output[3][5] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][6] <= tagger.io.output[3][6] @[STA_VDBB.scala 153:26]
          TPUs[0].in_tag[3][7] <= tagger.io.output[3][7] @[STA_VDBB.scala 153:26]
          loop_reg <= UInt<1>("h01") @[STA_VDBB.scala 154:20]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_43008 = eq(UInt<1>("h01"), loop_reg) @[Conditional.scala 37:30]
          when _T_43008 : @[Conditional.scala 39:67]
            cal_control[0] <= UInt<1>("h01") @[STA_VDBB.scala 157:26]
            when cal_state[0] : @[STA_VDBB.scala 159:29]
              cal_control[0] <= UInt<1>("h00") @[STA_VDBB.scala 160:28]
              stateReg <= UInt<3>("h02") @[STA_VDBB.scala 161:22]
              loop_reg <= UInt<1>("h00") @[STA_VDBB.scala 162:22]
              skip @[STA_VDBB.scala 159:29]
            skip @[Conditional.scala 39:67]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_43011 = eq(UInt<3>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_43011 : @[Conditional.scala 39:67]
          node _T_43012 = eq(UInt<1>("h00"), loop_reg) @[Conditional.scala 37:30]
          when _T_43012 : @[Conditional.scala 40:58]
            TPUs[1].in_A[0][0] <= reg_A_2[0][0] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][1] <= reg_A_2[0][1] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][2] <= reg_A_2[0][2] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][3] <= reg_A_2[0][3] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][4] <= reg_A_2[0][4] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][5] <= reg_A_2[0][5] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][6] <= reg_A_2[0][6] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[0][7] <= reg_A_2[0][7] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][0] <= reg_A_2[1][0] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][1] <= reg_A_2[1][1] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][2] <= reg_A_2[1][2] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][3] <= reg_A_2[1][3] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][4] <= reg_A_2[1][4] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][5] <= reg_A_2[1][5] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][6] <= reg_A_2[1][6] @[STA_VDBB.scala 170:24]
            TPUs[1].in_A[1][7] <= reg_A_2[1][7] @[STA_VDBB.scala 170:24]
            TPUs[2].in_B[0][0] <= reg_B_2[0][0] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][1] <= reg_B_2[0][1] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][2] <= reg_B_2[0][2] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][3] <= reg_B_2[0][3] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][4] <= reg_B_2[0][4] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][5] <= reg_B_2[0][5] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][6] <= reg_B_2[0][6] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[0][7] <= reg_B_2[0][7] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][0] <= reg_B_2[1][0] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][1] <= reg_B_2[1][1] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][2] <= reg_B_2[1][2] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][3] <= reg_B_2[1][3] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][4] <= reg_B_2[1][4] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][5] <= reg_B_2[1][5] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][6] <= reg_B_2[1][6] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[1][7] <= reg_B_2[1][7] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][0] <= reg_B_2[2][0] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][1] <= reg_B_2[2][1] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][2] <= reg_B_2[2][2] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][3] <= reg_B_2[2][3] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][4] <= reg_B_2[2][4] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][5] <= reg_B_2[2][5] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][6] <= reg_B_2[2][6] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[2][7] <= reg_B_2[2][7] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][0] <= reg_B_2[3][0] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][1] <= reg_B_2[3][1] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][2] <= reg_B_2[3][2] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][3] <= reg_B_2[3][3] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][4] <= reg_B_2[3][4] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][5] <= reg_B_2[3][5] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][6] <= reg_B_2[3][6] @[STA_VDBB.scala 171:24]
            TPUs[2].in_B[3][7] <= reg_B_2[3][7] @[STA_VDBB.scala 171:24]
            tagger.io.input[0][0] <= reg_B_2[0][0] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][1] <= reg_B_2[0][1] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][2] <= reg_B_2[0][2] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][3] <= reg_B_2[0][3] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][4] <= reg_B_2[0][4] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][5] <= reg_B_2[0][5] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][6] <= reg_B_2[0][6] @[STA_VDBB.scala 172:27]
            tagger.io.input[0][7] <= reg_B_2[0][7] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][0] <= reg_B_2[1][0] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][1] <= reg_B_2[1][1] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][2] <= reg_B_2[1][2] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][3] <= reg_B_2[1][3] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][4] <= reg_B_2[1][4] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][5] <= reg_B_2[1][5] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][6] <= reg_B_2[1][6] @[STA_VDBB.scala 172:27]
            tagger.io.input[1][7] <= reg_B_2[1][7] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][0] <= reg_B_2[2][0] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][1] <= reg_B_2[2][1] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][2] <= reg_B_2[2][2] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][3] <= reg_B_2[2][3] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][4] <= reg_B_2[2][4] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][5] <= reg_B_2[2][5] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][6] <= reg_B_2[2][6] @[STA_VDBB.scala 172:27]
            tagger.io.input[2][7] <= reg_B_2[2][7] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][0] <= reg_B_2[3][0] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][1] <= reg_B_2[3][1] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][2] <= reg_B_2[3][2] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][3] <= reg_B_2[3][3] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][4] <= reg_B_2[3][4] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][5] <= reg_B_2[3][5] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][6] <= reg_B_2[3][6] @[STA_VDBB.scala 172:27]
            tagger.io.input[3][7] <= reg_B_2[3][7] @[STA_VDBB.scala 172:27]
            TPUs[2].in_tag[0][0] <= tagger.io.output[0][0] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][1] <= tagger.io.output[0][1] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][2] <= tagger.io.output[0][2] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][3] <= tagger.io.output[0][3] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][4] <= tagger.io.output[0][4] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][5] <= tagger.io.output[0][5] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][6] <= tagger.io.output[0][6] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[0][7] <= tagger.io.output[0][7] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][0] <= tagger.io.output[1][0] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][1] <= tagger.io.output[1][1] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][2] <= tagger.io.output[1][2] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][3] <= tagger.io.output[1][3] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][4] <= tagger.io.output[1][4] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][5] <= tagger.io.output[1][5] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][6] <= tagger.io.output[1][6] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[1][7] <= tagger.io.output[1][7] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][0] <= tagger.io.output[2][0] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][1] <= tagger.io.output[2][1] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][2] <= tagger.io.output[2][2] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][3] <= tagger.io.output[2][3] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][4] <= tagger.io.output[2][4] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][5] <= tagger.io.output[2][5] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][6] <= tagger.io.output[2][6] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[2][7] <= tagger.io.output[2][7] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][0] <= tagger.io.output[3][0] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][1] <= tagger.io.output[3][1] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][2] <= tagger.io.output[3][2] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][3] <= tagger.io.output[3][3] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][4] <= tagger.io.output[3][4] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][5] <= tagger.io.output[3][5] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][6] <= tagger.io.output[3][6] @[STA_VDBB.scala 173:26]
            TPUs[2].in_tag[3][7] <= tagger.io.output[3][7] @[STA_VDBB.scala 173:26]
            loop_reg <= UInt<1>("h01") @[STA_VDBB.scala 174:20]
            skip @[Conditional.scala 40:58]
          else : @[Conditional.scala 39:67]
            node _T_43013 = eq(UInt<1>("h01"), loop_reg) @[Conditional.scala 37:30]
            when _T_43013 : @[Conditional.scala 39:67]
              cal_control[1] <= UInt<1>("h01") @[STA_VDBB.scala 177:26]
              when cal_state[1] : @[STA_VDBB.scala 179:29]
                cal_control[1] <= UInt<1>("h00") @[STA_VDBB.scala 180:28]
                stateReg <= UInt<3>("h03") @[STA_VDBB.scala 181:22]
                loop_reg <= UInt<1>("h00") @[STA_VDBB.scala 182:22]
                skip @[STA_VDBB.scala 179:29]
              skip @[Conditional.scala 39:67]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_43016 = eq(UInt<3>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_43016 : @[Conditional.scala 39:67]
            node _T_43017 = eq(UInt<1>("h00"), loop_reg) @[Conditional.scala 37:30]
            when _T_43017 : @[Conditional.scala 40:58]
              TPUs[0].in_A[0][0] <= reg_A_3[0][0] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][1] <= reg_A_3[0][1] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][2] <= reg_A_3[0][2] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][3] <= reg_A_3[0][3] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][4] <= reg_A_3[0][4] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][5] <= reg_A_3[0][5] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][6] <= reg_A_3[0][6] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[0][7] <= reg_A_3[0][7] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][0] <= reg_A_3[1][0] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][1] <= reg_A_3[1][1] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][2] <= reg_A_3[1][2] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][3] <= reg_A_3[1][3] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][4] <= reg_A_3[1][4] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][5] <= reg_A_3[1][5] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][6] <= reg_A_3[1][6] @[STA_VDBB.scala 190:24]
              TPUs[0].in_A[1][7] <= reg_A_3[1][7] @[STA_VDBB.scala 190:24]
              TPUs[0].in_B[0][0] <= reg_B_3[0][0] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][1] <= reg_B_3[0][1] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][2] <= reg_B_3[0][2] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][3] <= reg_B_3[0][3] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][4] <= reg_B_3[0][4] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][5] <= reg_B_3[0][5] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][6] <= reg_B_3[0][6] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[0][7] <= reg_B_3[0][7] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][0] <= reg_B_3[1][0] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][1] <= reg_B_3[1][1] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][2] <= reg_B_3[1][2] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][3] <= reg_B_3[1][3] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][4] <= reg_B_3[1][4] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][5] <= reg_B_3[1][5] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][6] <= reg_B_3[1][6] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[1][7] <= reg_B_3[1][7] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][0] <= reg_B_3[2][0] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][1] <= reg_B_3[2][1] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][2] <= reg_B_3[2][2] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][3] <= reg_B_3[2][3] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][4] <= reg_B_3[2][4] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][5] <= reg_B_3[2][5] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][6] <= reg_B_3[2][6] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[2][7] <= reg_B_3[2][7] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][0] <= reg_B_3[3][0] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][1] <= reg_B_3[3][1] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][2] <= reg_B_3[3][2] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][3] <= reg_B_3[3][3] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][4] <= reg_B_3[3][4] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][5] <= reg_B_3[3][5] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][6] <= reg_B_3[3][6] @[STA_VDBB.scala 191:24]
              TPUs[0].in_B[3][7] <= reg_B_3[3][7] @[STA_VDBB.scala 191:24]
              tagger.io.input[0][0] <= reg_B_3[0][0] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][1] <= reg_B_3[0][1] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][2] <= reg_B_3[0][2] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][3] <= reg_B_3[0][3] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][4] <= reg_B_3[0][4] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][5] <= reg_B_3[0][5] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][6] <= reg_B_3[0][6] @[STA_VDBB.scala 192:27]
              tagger.io.input[0][7] <= reg_B_3[0][7] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][0] <= reg_B_3[1][0] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][1] <= reg_B_3[1][1] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][2] <= reg_B_3[1][2] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][3] <= reg_B_3[1][3] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][4] <= reg_B_3[1][4] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][5] <= reg_B_3[1][5] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][6] <= reg_B_3[1][6] @[STA_VDBB.scala 192:27]
              tagger.io.input[1][7] <= reg_B_3[1][7] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][0] <= reg_B_3[2][0] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][1] <= reg_B_3[2][1] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][2] <= reg_B_3[2][2] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][3] <= reg_B_3[2][3] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][4] <= reg_B_3[2][4] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][5] <= reg_B_3[2][5] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][6] <= reg_B_3[2][6] @[STA_VDBB.scala 192:27]
              tagger.io.input[2][7] <= reg_B_3[2][7] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][0] <= reg_B_3[3][0] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][1] <= reg_B_3[3][1] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][2] <= reg_B_3[3][2] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][3] <= reg_B_3[3][3] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][4] <= reg_B_3[3][4] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][5] <= reg_B_3[3][5] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][6] <= reg_B_3[3][6] @[STA_VDBB.scala 192:27]
              tagger.io.input[3][7] <= reg_B_3[3][7] @[STA_VDBB.scala 192:27]
              TPUs[0].in_tag[0][0] <= tagger.io.output[0][0] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][1] <= tagger.io.output[0][1] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][2] <= tagger.io.output[0][2] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][3] <= tagger.io.output[0][3] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][4] <= tagger.io.output[0][4] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][5] <= tagger.io.output[0][5] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][6] <= tagger.io.output[0][6] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[0][7] <= tagger.io.output[0][7] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][0] <= tagger.io.output[1][0] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][1] <= tagger.io.output[1][1] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][2] <= tagger.io.output[1][2] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][3] <= tagger.io.output[1][3] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][4] <= tagger.io.output[1][4] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][5] <= tagger.io.output[1][5] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][6] <= tagger.io.output[1][6] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[1][7] <= tagger.io.output[1][7] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][0] <= tagger.io.output[2][0] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][1] <= tagger.io.output[2][1] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][2] <= tagger.io.output[2][2] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][3] <= tagger.io.output[2][3] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][4] <= tagger.io.output[2][4] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][5] <= tagger.io.output[2][5] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][6] <= tagger.io.output[2][6] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[2][7] <= tagger.io.output[2][7] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][0] <= tagger.io.output[3][0] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][1] <= tagger.io.output[3][1] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][2] <= tagger.io.output[3][2] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][3] <= tagger.io.output[3][3] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][4] <= tagger.io.output[3][4] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][5] <= tagger.io.output[3][5] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][6] <= tagger.io.output[3][6] @[STA_VDBB.scala 193:26]
              TPUs[0].in_tag[3][7] <= tagger.io.output[3][7] @[STA_VDBB.scala 193:26]
              loop_reg <= UInt<1>("h01") @[STA_VDBB.scala 194:20]
              skip @[Conditional.scala 40:58]
            else : @[Conditional.scala 39:67]
              node _T_43018 = eq(UInt<1>("h01"), loop_reg) @[Conditional.scala 37:30]
              when _T_43018 : @[Conditional.scala 39:67]
                cal_control[0] <= UInt<1>("h01") @[STA_VDBB.scala 197:26]
                cal_control[2] <= UInt<1>("h01") @[STA_VDBB.scala 198:26]
                node _T_43021 = and(cal_state[0], cal_state[2]) @[STA_VDBB.scala 200:29]
                when _T_43021 : @[STA_VDBB.scala 200:45]
                  cal_control[0] <= UInt<1>("h00") @[STA_VDBB.scala 201:28]
                  cal_control[2] <= UInt<1>("h00") @[STA_VDBB.scala 202:28]
                  stateReg <= UInt<3>("h04") @[STA_VDBB.scala 203:22]
                  loop_reg <= UInt<1>("h00") @[STA_VDBB.scala 204:22]
                  skip @[STA_VDBB.scala 200:45]
                skip @[Conditional.scala 39:67]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_43024 = eq(UInt<3>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_43024 : @[Conditional.scala 39:67]
              node _T_43025 = eq(UInt<1>("h00"), loop_reg) @[Conditional.scala 37:30]
              when _T_43025 : @[Conditional.scala 40:58]
                TPUs[1].in_A[0][0] <= reg_A_4[0][0] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][1] <= reg_A_4[0][1] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][2] <= reg_A_4[0][2] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][3] <= reg_A_4[0][3] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][4] <= reg_A_4[0][4] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][5] <= reg_A_4[0][5] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][6] <= reg_A_4[0][6] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[0][7] <= reg_A_4[0][7] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][0] <= reg_A_4[1][0] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][1] <= reg_A_4[1][1] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][2] <= reg_A_4[1][2] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][3] <= reg_A_4[1][3] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][4] <= reg_A_4[1][4] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][5] <= reg_A_4[1][5] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][6] <= reg_A_4[1][6] @[STA_VDBB.scala 212:24]
                TPUs[1].in_A[1][7] <= reg_A_4[1][7] @[STA_VDBB.scala 212:24]
                TPUs[2].in_B[0][0] <= reg_B_4[0][0] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][1] <= reg_B_4[0][1] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][2] <= reg_B_4[0][2] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][3] <= reg_B_4[0][3] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][4] <= reg_B_4[0][4] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][5] <= reg_B_4[0][5] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][6] <= reg_B_4[0][6] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[0][7] <= reg_B_4[0][7] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][0] <= reg_B_4[1][0] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][1] <= reg_B_4[1][1] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][2] <= reg_B_4[1][2] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][3] <= reg_B_4[1][3] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][4] <= reg_B_4[1][4] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][5] <= reg_B_4[1][5] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][6] <= reg_B_4[1][6] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[1][7] <= reg_B_4[1][7] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][0] <= reg_B_4[2][0] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][1] <= reg_B_4[2][1] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][2] <= reg_B_4[2][2] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][3] <= reg_B_4[2][3] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][4] <= reg_B_4[2][4] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][5] <= reg_B_4[2][5] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][6] <= reg_B_4[2][6] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[2][7] <= reg_B_4[2][7] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][0] <= reg_B_4[3][0] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][1] <= reg_B_4[3][1] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][2] <= reg_B_4[3][2] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][3] <= reg_B_4[3][3] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][4] <= reg_B_4[3][4] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][5] <= reg_B_4[3][5] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][6] <= reg_B_4[3][6] @[STA_VDBB.scala 213:24]
                TPUs[2].in_B[3][7] <= reg_B_4[3][7] @[STA_VDBB.scala 213:24]
                tagger.io.input[0][0] <= reg_B_4[0][0] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][1] <= reg_B_4[0][1] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][2] <= reg_B_4[0][2] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][3] <= reg_B_4[0][3] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][4] <= reg_B_4[0][4] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][5] <= reg_B_4[0][5] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][6] <= reg_B_4[0][6] @[STA_VDBB.scala 214:27]
                tagger.io.input[0][7] <= reg_B_4[0][7] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][0] <= reg_B_4[1][0] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][1] <= reg_B_4[1][1] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][2] <= reg_B_4[1][2] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][3] <= reg_B_4[1][3] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][4] <= reg_B_4[1][4] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][5] <= reg_B_4[1][5] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][6] <= reg_B_4[1][6] @[STA_VDBB.scala 214:27]
                tagger.io.input[1][7] <= reg_B_4[1][7] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][0] <= reg_B_4[2][0] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][1] <= reg_B_4[2][1] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][2] <= reg_B_4[2][2] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][3] <= reg_B_4[2][3] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][4] <= reg_B_4[2][4] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][5] <= reg_B_4[2][5] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][6] <= reg_B_4[2][6] @[STA_VDBB.scala 214:27]
                tagger.io.input[2][7] <= reg_B_4[2][7] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][0] <= reg_B_4[3][0] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][1] <= reg_B_4[3][1] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][2] <= reg_B_4[3][2] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][3] <= reg_B_4[3][3] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][4] <= reg_B_4[3][4] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][5] <= reg_B_4[3][5] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][6] <= reg_B_4[3][6] @[STA_VDBB.scala 214:27]
                tagger.io.input[3][7] <= reg_B_4[3][7] @[STA_VDBB.scala 214:27]
                TPUs[2].in_tag[0][0] <= tagger.io.output[0][0] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][1] <= tagger.io.output[0][1] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][2] <= tagger.io.output[0][2] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][3] <= tagger.io.output[0][3] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][4] <= tagger.io.output[0][4] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][5] <= tagger.io.output[0][5] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][6] <= tagger.io.output[0][6] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[0][7] <= tagger.io.output[0][7] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][0] <= tagger.io.output[1][0] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][1] <= tagger.io.output[1][1] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][2] <= tagger.io.output[1][2] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][3] <= tagger.io.output[1][3] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][4] <= tagger.io.output[1][4] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][5] <= tagger.io.output[1][5] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][6] <= tagger.io.output[1][6] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[1][7] <= tagger.io.output[1][7] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][0] <= tagger.io.output[2][0] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][1] <= tagger.io.output[2][1] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][2] <= tagger.io.output[2][2] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][3] <= tagger.io.output[2][3] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][4] <= tagger.io.output[2][4] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][5] <= tagger.io.output[2][5] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][6] <= tagger.io.output[2][6] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[2][7] <= tagger.io.output[2][7] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][0] <= tagger.io.output[3][0] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][1] <= tagger.io.output[3][1] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][2] <= tagger.io.output[3][2] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][3] <= tagger.io.output[3][3] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][4] <= tagger.io.output[3][4] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][5] <= tagger.io.output[3][5] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][6] <= tagger.io.output[3][6] @[STA_VDBB.scala 215:26]
                TPUs[2].in_tag[3][7] <= tagger.io.output[3][7] @[STA_VDBB.scala 215:26]
                loop_reg <= UInt<1>("h01") @[STA_VDBB.scala 216:20]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_43026 = eq(UInt<1>("h01"), loop_reg) @[Conditional.scala 37:30]
                when _T_43026 : @[Conditional.scala 39:67]
                  cal_control[1] <= UInt<1>("h01") @[STA_VDBB.scala 219:26]
                  when cal_state[1] : @[STA_VDBB.scala 221:29]
                    cal_control[1] <= UInt<1>("h00") @[STA_VDBB.scala 222:28]
                    stateReg <= UInt<3>("h05") @[STA_VDBB.scala 223:22]
                    loop_reg <= UInt<1>("h00") @[STA_VDBB.scala 224:22]
                    skip @[STA_VDBB.scala 221:29]
                  skip @[Conditional.scala 39:67]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_43029 = eq(UInt<3>("h05"), stateReg) @[Conditional.scala 37:30]
              when _T_43029 : @[Conditional.scala 39:67]
                node _T_43030 = eq(UInt<1>("h00"), loop_reg) @[Conditional.scala 37:30]
                when _T_43030 : @[Conditional.scala 40:58]
                  loop_reg <= UInt<1>("h01") @[STA_VDBB.scala 232:20]
                  skip @[Conditional.scala 40:58]
                else : @[Conditional.scala 39:67]
                  node _T_43031 = eq(UInt<1>("h01"), loop_reg) @[Conditional.scala 37:30]
                  when _T_43031 : @[Conditional.scala 39:67]
                    cal_control[2] <= UInt<1>("h01") @[STA_VDBB.scala 235:26]
                    when cal_state[2] : @[STA_VDBB.scala 237:29]
                      cal_control[0] <= UInt<1>("h00") @[STA_VDBB.scala 238:28]
                      stateReg <= UInt<3>("h00") @[STA_VDBB.scala 239:22]
                      loop_reg <= UInt<1>("h00") @[STA_VDBB.scala 240:22]
                      skip @[STA_VDBB.scala 237:29]
                    skip @[Conditional.scala 39:67]
                skip @[Conditional.scala 39:67]
    
