/*In this test, we prove that the FF4 definition is right*/
import chisel3.iotesters.{PeekPokeTester, Driver, ChiselFlatSpec}
import chisel3._

class FF4Test(c: FF4) extends PeekPokeTester(c) {

  for (i <- 0 until 4) {
    for (j <- 0 until 8) {
      poke(c.io.in_data(i)(j), j.S)
    }
  }
    for (i <- 0 until 4) {
      for (j <- 0 until 8){
        expect(c.io.out_data(i)(j),j.S)
      }
  }
   for (i <- 0 until 4) {
    for (j <- 0 until 8) {

      poke(c.io.in_tag(i)(j),true.B)
    }
  }
  for (i <- 0 until 4) {
    for (j <- 0 until 8){
      expect(c.io.out_tag(i)(j),true.B)
    }
  }
  }

class FF4Tester extends ChiselFlatSpec {
  behavior of "FF4"
  backends foreach {backend =>
    it should s"correctly add randomly generated numbers and show carry in $backend" in {
      Driver(() => new FF4, backend)(c => new FF4Test(c)) should be (true)
    }
  }
}
